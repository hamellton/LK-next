import peerDepsExternal from "rollup-plugin-peer-deps-external";
import resolve from "@rollup/plugin-node-resolve";
import commonjs from "@rollup/plugin-commonjs";
import typescript from "rollup-plugin-typescript2";
import filesize from "rollup-plugin-filesize";
import css from "rollup-plugin-import-css";
import json from "@rollup/plugin-json";
import * as packageJson from "./package.json";
const { author, name } = packageJson;
import createStyledComponentsTransformer from "typescript-plugin-styled-components";


const banner = `
	/**
   * @license
   * author: ${author}
   * ${name} v${packageJson.version}
   * Released under the ${packageJson.license} license.
   */
`;

const styledComponentsTransformer = createStyledComponentsTransformer({
	displayName: true,
});

export default {
	input: "src/index.ts",
	output: [
		{
			name: name,
			file: packageJson.main,
			format: "cjs",
			exports: "auto",
			banner,
			sourcemap: true,
		},
		{
			name: name,
			file: packageJson.module,
			format: "esm",
			exports: "auto",
			banner,
			sourcemap: true,
		},
	],
	plugins: [
		peerDepsExternal(),
		resolve(),
		commonjs(),
		typescript({
			transformers: [
				() => ({
					before: [styledComponentsTransformer],
				}),
			],
			useTsconfigDeclarationDir: true }),
		filesize(),
		css(),
		json(),
	],
};
