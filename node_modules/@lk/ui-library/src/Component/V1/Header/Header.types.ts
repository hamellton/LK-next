// import { DeviceTypes } from "../../../Types/general";
import { DeviceTypes } from "../../../Types/general";
import { LastRowType } from "./mockValues3";

export interface DataType {
	[name: string]: string
}
export interface HeaderTypes {
	id: string,
	onMenuClick:() => void,
	onQrClick?:() => void,
	onWishlistClick: () => void,
	onSignInClick: () => void,
	onSignUpClick: () => void,
	onTrackOrderClick: () => void,
	onCartClick: () => void,
	onMobileClick: () => void;
	signInDropLinks?: {link: string, text: string}[]
	getQueryData: (arg: string) => void,
	signedInData: {
		isSignedIn: boolean,
		username: string
	},
	wishlistCount: number,
	cartCount: number,
	isLoading: boolean,
	lastRowData: LastRowType,
	searchFunction: () => void,
	productData?: ProductDataType,
	logoutHandler: () => void,
	configData: DataType,
	showLanguageOption: boolean,
	languageText?: string
	onLanguageChange: () => void;
	isRTL: boolean
	path?: string
	trendingMenus: Array<{text: string, link:string }>,
	topLinks?: {left: DataType[], right: DataType[]},
	searchBarPlaceholder?: string,
	phoneNumberImg?: string,
	phoneNumber?:string,
	deviceType: DeviceTypes,
	showSideNav?:boolean
	isExchangeFlow?: boolean,
	exchangeFlowText?: string,
	onExchangeBackClick?: () => void
	subdirectoryPath?: string
	reDirection?: (props: string, home: boolean) => void
	country?: string
	updateSearchBarStatus?: (status: boolean) => void
	isNewSearch?:boolean,
	onSearchClick:()=>void,
	showBackButton?:boolean
	isTopBarActive?: boolean
	localeData: DataType,
	setGAEvent?: () => void
	setItem?: () => void
	onClickContactUs?: () => void
	router?: any;
	onLogoClick?: () => void;
	sessionStorageHelper:any
}
export interface ProductDataType {
	typeAhead: any,
	productRecommendations: any
}
