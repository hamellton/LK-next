import React from "react";
import { ContactUsContainer, HeaderContainer, TopLinkContainer } from "./styles";
import TopLinks from "./MainHeader/TopLinks";
import SecondRow from "./MainHeader/SecondRow";
import LastRow from "./MainHeader/LastRow";
import { secondRowType } from "./MainHeader/SecondRow";
import { HeaderTypes } from "./Header.types";
import { DeviceTypes } from "../../../Types/general";
import TopBar from "../Topbar";
// import { topLinks as mockTopLinks } from "./mockValues3";

const Header = ({
	id,
	isNewSearch,
	showBackButton,
	onSearchClick,
	onMobileClick,
	updateSearchBarStatus,
	onCartClick,
	onSignInClick,
	onSignUpClick,
	onTrackOrderClick,
	onWishlistClick,
	signedInData,
	wishlistCount,
	cartCount,
	isLoading,
	lastRowData,
	trendingMenus,
	searchFunction,
	productData,
	logoutHandler,
	configData,
	localeData,
	getQueryData,
	showLanguageOption,
	languageText = "",
	onLanguageChange,
	isRTL = false,
	path = "/",
	searchBarPlaceholder,
	phoneNumber = "1800111111",
	phoneNumberImg = "https://static.lenskart.com/media/mobile/images/phone_number.svg",
	signInDropLinks,
	deviceType,
	onMenuClick,
	showSideNav,
	onQrClick,
	isExchangeFlow,
	exchangeFlowText,
	onExchangeBackClick,
	subdirectoryPath,
	reDirection,
	country,
	isTopBarActive,
	setGAEvent,
	setItem,
	onClickContactUs = () => null,
	router,
	onLogoClick,
	sessionStorageHelper
}: HeaderTypes) => {
	const secondRowFunc: secondRowType = {
		onCartClick: onCartClick,
		onSignInClick: onSignInClick,
		onSignUpClick: onSignUpClick,
		onTrackOrderClick: onTrackOrderClick,
		onWishlistClick: onWishlistClick,
		searchFunction: searchFunction,
		onMobileClick: onMobileClick,
		getQueryData: getQueryData,
		trendingMenus,
		signedInData,
		wishlistCount,
		cartCount,
		isLoading,
		productData,
		configData,
		localeData,
		logoutHandler,
		showLanguageOption,
		languageText,
		isRTL,
		path,
		searchBarPlaceholder,
		onLanguageChange,
		phoneNumberImg,
		signInDropLinks,
		deviceType,
		phoneNumber,
		onMenuClick: onMenuClick,
		showSideNav,
		onQrClick,
		isExchangeFlow,
		exchangeFlowText,
		onExchangeBackClick,
		country,
		updateSearchBarStatus,
		onSearchClick,
		isNewSearch,
		showBackButton,
		router,
		onLogoClick,
		subdirectoryPath,
		sessionStorageHelper
	};
		
	const desktopHeader = <HeaderContainer id={id}>
		{isTopBarActive && <TopBar
			dataLocale={localeData}
		/>}
		<TopLinkContainer>
			{configData?.TOP_LINKS && <TopLinks isRTL={isRTL} topLinks={JSON.parse(configData?.TOP_LINKS)} />}
			{configData?.SHOW_NEED_HELP_TOP_HEADER && (
				<ContactUsContainer onClick={onClickContactUs}>
					Contact Us
				</ContactUsContainer>
			)}
		</TopLinkContainer>
		<SecondRow {...secondRowFunc} />
		<LastRow setItem={setItem} lastRowData={lastRowData} isRTL={isRTL} subdirectoryPath={subdirectoryPath} reDirection={reDirection} setGAEvent={setGAEvent} />
	</HeaderContainer>;
	const msiteHeader = <HeaderContainer>
		<SecondRow {...secondRowFunc} />
	</HeaderContainer>;
	return (
		<>

			{deviceType === DeviceTypes.MOBILE && msiteHeader}
			{deviceType === DeviceTypes.DESKTOP && !isExchangeFlow && desktopHeader}
		</>
	);
};

export default Header;
