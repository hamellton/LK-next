import styled from "styled-components";

export const GridBox = styled.div<{columns?:number; rows?:number; templateArea?: string; fixedColumns?:number; colWidths?:string; defaultColWidth?: string;}>`
	display: grid;
	width: 100%;
	height: 100%;
	// grid-template-columns: ${props => props.columns ? `repeat(${props.columns || 1}, minmax(100px, 1fr))` : "repeat(auto-fit, minmax(200px, 1fr))"};
	grid-template-columns: ${props => props.columns ? `${props.colWidths ? `${props.colWidths} repeat(${props.columns - props.colWidths.split(" ").length || 1}, ${props.defaultColWidth || "minmax(200px, 1fr)"})` : `repeat(${props.columns || 1}, ${props.defaultColWidth || "minmax(200px, 1fr)"})`}` : `${props.colWidths ? `${props.colWidths} repeat(auto-fill, ${props.defaultColWidth || "minmax(max-content, 1fr)"})`: `repeat(auto-fill, ${props.defaultColWidth || "minmax(max-content, 1fr)"})`}`};
	// grid-template-rows: ${props => props.rows && `60px ${props.rows ? `repeat(${props.rows - 1}, minmax(100px, 1fr))` : "100px"}`};
	grid-template-rows: ${props => props.rows && `60px 15px ${props.rows ? `repeat(${props.rows - 2},  auto)` : "100px"}`}; // max-content vs auto -> not sure
	grid-auto-flow: column; //each column will be filled first
	${props => props.templateArea && `grid-template-areas: ${props.templateArea};`}


	@media (max-width: 1100px) {
		grid-template-columns: 200px 200px repeat(auto-fill,minmax(170px,1fr))!important;

	}

	@media (max-width: 1300px) and (min-width: 1100px) {
		grid-template-columns: 220px 220px repeat(auto-fill,minmax(170px,1fr))!important;

	}

	@media (max-width: 2000px) and (min-width: 1300px) {
		grid-template-columns: 260px 260px repeat(auto-fill,minmax(200px,1fr));

	}
`;

