import React from "react";
import styled, { css } from "styled-components";
// import { animated, useSpring } from "react-spring";
import { TypographyENUM } from "../../../../Types/general";
import { Cross } from "../../../../Icons";

const ScreenContainer = styled.div<{font: TypographyENUM, isMobileView?: boolean, cartSignUp?: boolean}>`
    width:  ${props => props.isMobileView ? "100%" : "472px"};
    background:  ${props => props.isMobileView ? "#f3fbef" : "var(--white)"};
    border-radius: 12px;
    overflow: hidden;
	font-family: ${props => props.font};
	input, div{
		animation:none;
		transform:none !important;
		transition:none;
	}
	#whatsapp-updates{
		div{
			transform: rotate(45deg) !important;
		}
	}

	#remove-button{
		height:56px;
		font-size:16px;
		border-radius:50px;
	}

    ${props => props.cartSignUp ? "background: white;": ""};
	@media screen and (min-width:768px) and (max-width:1439px){
	&#sign-up-form{
		h2{
			font-size:1.4vw;
			line-height:16px;
		}
	  }
	  #remove-button{
		height:auto;
		font-size:12px;
	}
	}
	@media screen and (max-width: 1300px) and (max-height: 900px) and (orientation: landscape) {
		&#sign-up-form{
			h2{
				font-size:20px;
			   line-height:24px;
			}
		  }
		  #remove-button{
			height:auto;
			font-size:12px;
		}
    }
`;
const TopSection = styled.div<{isMobileView?: boolean, isSignUp?: boolean, isRTL?: boolean, noMargin?: boolean, cartSignUp?: boolean }>`
    width: ${props => props.isMobileView ? "100%" : ""};
    height: ${props => props.isMobileView ? "" : "94px"};
    display: flex;
    align-items: center;
    justify-content: ${props => props.isMobileView ? "space-between" : ""};
    padding: ${props => props.isMobileView ? "20px 16px 0 16px" : ""};

    ${props => props.isSignUp && !props.noMargin && css `
        width: 100%;
        margin-right: ${props.isRTL ? "104px" : ""};
    `}

    ${props => props.cartSignUp ? "padding:0;" : "" };
	@media screen and (min-width:768px) and (max-width:1439px){
		height: ${props => props.isMobileView ? "" : "54px"};
	}
	@media screen and (max-width: 1300px) and (max-height: 900px) and (orientation: landscape) {
		height: ${props => props.isMobileView ? "" : "62px"};
    }

`;
const MainSection = styled.div<{isMobileView?: boolean, cartSignUp?: boolean}>`
    padding: ${props => props.isMobileView? "20px 16px" : "0px 48px 10px 48px"};
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
	@media screen and (min-width:768px) and (max-width:1439px){
		padding: ${props => props.isMobileView? "20px 16px" : "0px 48px 15px 48px"};
	}
	@media screen and (max-width: 1300px) and (max-height: 900px) and (orientation: landscape) {
		padding: ${props => props.isMobileView? "20px 16px" : "0px 48px 10px 48px"};
    }

    overflow-y: ${props => props.isMobileView? "scroll" : ""};

    ${props => props.cartSignUp ? "padding: 20px 0;" : ""};
`;
const CrossContainer = styled.div<{isMobileView?:boolean, isRTL?: boolean}>`
    background-color: var(--white);
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 8px;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    position:  ${props => props.isMobileView ? "relative" : "absolute"};
    top: ${props => props.isMobileView ? "" : "24px"};
    right:  ${props => props.isMobileView ? "" : (props.isRTL ? "" : "24px")};
	left: ${props =>props.isMobileView ? "" : (props.isRTL ? "24px" : "")};
    cursor: pointer;
	@media screen and (min-width:768px) and (max-width:1439px){
		top: ${props => props.isMobileView ? "" : "8px"};
	}
	@media screen and (max-width: 1300px) and (max-height: 900px) and (orientation: landscape) {
		top: ${props => props.isMobileView ? "" : "12px"};
    }
`;
export const Spacer = styled.div`
    width: 100%;
    height: 24px;
`;
export const Heading = styled.h2<{isMobileView?:boolean}>`
    font-family: ${TypographyENUM.lkSerifNormal};
    font-style: normal;
    font-weight: 400;
    font-size: 24px;
    line-height: 36px;
    letter-spacing: -0.02em;
    color: var(--text);
    margin: ${props => props.isMobileView? "0" : "0 0 0 48px"};
	@media screen and (max-width:767px){
		font-size:22px;
	}
`;
const ScreenSlider = styled.div<{isMobileView?:boolean, cartSignUp?: boolean}>`
    height:  ${props => props.isMobileView ? "calc(100vh - 50px)" : "100%"};
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0px;

    ${props => props.cartSignUp ? "height: 100%;" : ""};
`;
const SignUp = ({ isMobileView, id, font, onClose, createAccountText, children, isRTL=false, isSignUp, noMargin=false, cartSignUp=false }: { id: string, font: TypographyENUM, onClose: () => void, createAccountText: string, children: React.ReactNode, isMobileView?: boolean, isRTL?: boolean, isSignUp?: boolean, noMargin?: boolean, cartSignUp?:boolean }) => {
	// const springProps = useSpring({
	// 	from: { transform: "translateX(100%)" },
	// 	to: { transform: "translateX(0%)" }
	// });
	return (
		<ScreenContainer id={id} font={font} isMobileView={isMobileView} cartSignUp={cartSignUp}>
			<ScreenSlider isMobileView={isMobileView} cartSignUp={cartSignUp}>
				<TopSection isRTL={isRTL} isSignUp={isSignUp} noMargin={noMargin} isMobileView={isMobileView} cartSignUp={cartSignUp}>
					<Heading isMobileView={isMobileView}>{createAccountText}</Heading>
					<CrossContainer isRTL={isRTL} onClick={onClose} isMobileView={isMobileView}><Cross /></CrossContainer>
				</TopSection>
				<MainSection isMobileView={isMobileView} cartSignUp={cartSignUp}>
					{children}
				</MainSection>
			</ScreenSlider>
		</ScreenContainer>
	);
};

export default SignUp;
