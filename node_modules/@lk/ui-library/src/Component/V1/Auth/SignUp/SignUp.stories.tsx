import { ComponentMeta, ComponentStory } from "@storybook/react";
import React from "react";
// import { SignUpForm } from "./SignUpForm.component";
import { SignUpComponent } from "./SignUp.component";
import { generateArgTypes, generateGeneralArgs } from "../../../../StorybookHelper";
import { SignInType, TypographyENUM } from "../../../../Types/general";

export default {
	title:"Components/V1/SignUpComponent",
	component: SignUpComponent,
	argTypes: {
		...generateGeneralArgs(),
		dataLocale: generateArgTypes({
			type: "object",
			required: true,
			description: "static data",
			category: "Component",
			defaultValue:{
				CREATE_ACCOUNT: "Create Account",
				FIRST_NAME: "First Name",
				LAST_NAME: "Last Name",
				MOBILE: "Mobile",
				EMAIL: "Email",
				PASSWORD: "Password",
				SUBSCRIBE_TO_LENSKART_NEWSLETTER: "",
				AGREE_TO_PRIVACY_POLICY: "",
				HAVE_AN_ACCOUNT: "",
				SIGN_IN: "Sign In"
			},
			control:"object"
		}),
		signUpStatus: generateArgTypes({
			type: "object",
			required: true,
			description: "signIn info data",
			category: "Component",
			defaultValue:{
				type: "email",
				showLogin: true,
				showOTP: false,
				sendOTP: false,
				showPassword: false,
				isLoading: false,
				isError: false,
				errorMessage: null,
				otpSent: false
			},
			control:"object"
		}),
		onClose: generateArgTypes({
			type: "function",
			required: false,
			description: "onSignIn handler for sign in form",
			category: "Events",
		}),
		moveToSignIn: generateArgTypes({
			type: "function",
			required: false,
			description: "onSignIn handler for sign in form",
			category: "Events",
		}),
		countryCode: generateArgTypes({
			type: "string",
			required: true,
			description: "country code",
			category: "Component",
			defaultValue: "+91",
		}),
		onSignUp: generateArgTypes({
			type: "function",
			required: false,
			description: "onSignUp handler for sign up form",
			category: "Events",
		}),
		isRTL: generateArgTypes({
			type: "boolean",
			required: true,
			description: "Show right to left signupForm",
			category: "Staus",
		}),
		formError: generateArgTypes({
			type: "boolean",
			required: false,
			description: "onSignUp handler for sign up form",
			category: "Components",
		}),
	}
} as ComponentMeta<typeof SignUpComponent>;

const Template: ComponentStory<typeof SignUpComponent> = args => <SignUpComponent {...args}/>;

export const Overview = Template.bind({});

Overview.args = {
	id:"signup-form",
	dataLocale:{
		CREATE_ACCOUNT: "Create Account",
		FIRST_NAME: "First Name",
		LAST_NAME: "Last Name",
		MOBILE: "Mobile",
		EMAIL: "Email",
		PASSWORD: "Password",
		SUBSCRIBE_TO_LENSKART_NEWSLETTER: "",
		AGREE_TO_PRIVACY_POLICY: "",
		HAVE_AN_ACCOUNT: "",
		SIGN_IN: "Sign In"
	},
	signUpStatus: {
		type: SignInType.EMAIL,
		showLogin: true,
		showOTP: false,
		sendOTP: false,
		showPassword: false,
		isLoading: false,
		isError: false,
		errorMessage: null,
		otpSent: false
	},
	onClose: () => null,
	font:TypographyENUM.defaultBook,
	moveToSignIn: () => null,
	countryCode: "+91",
	isRTL: false,
	onSignUp: () => console.log("api called and form submitted"),
	isMobileView: true
};

export const signUpFormWithError = Template.bind({});

// signUpFormWithError.args = {
// 	...Overview.args,
// 	formError:"EmailId already exists:sample.user@email.com"
// };
