import { DeviceTypes } from "../../../Types/general";

export interface ProductCardTypes{
	productData:ProductTypeBasic
	dataLocale:any
	offerText: string
	isDitto: boolean
	isDittoImageLoaded?: boolean
	isExchangeFlow: boolean
	triggerWishlist: (productData:any, isWishListSelected: boolean) => void
	wishlistPIDs: any[]
	wishListSelected: boolean
	useDimensions: any;
	width: number;
	isRTL: boolean;
	isGridView: boolean
	cygnus?: string;
	device: DeviceTypes;
	subdirectoryPath: string;
	isAlgoliaSearch?: boolean;
	isSearch?:boolean;
	router: any;
	onClick?: ()=>void
	triggerCtaGA: (cta_name: string, cta_flow_and_page: string)=>void
	showTax: boolean
	similarProducts: any;
}

export interface ProductTypeBasic {
	id: number,
	size: string,
	productName: string,
	showProductRating: boolean,
	productRating: number,
	showPurchaseCount: boolean,
	purchaseCount: number,
	showWishlistCount: boolean,
	wishListCount: number,
	tags: string,
	isDitto: boolean,
	isColorOptionExtra: boolean,
	colorOptionExtraCount: number,
	classification: string,
	productURL: string,
	productURLWithoutDomain: string,
	productImage: imageHoverType,
	price: PriceType,
	colorOptions: ColorOptionType[]
	offerText?:string
	showTitle: boolean
	specifications: any[];
	totalNoOfRatings: string;
	product_url?:any
	relatedItems?: any
}

export interface imageHoverType {
	url: string,
	frontURL?: string,
	hoverURL: string,
}

export interface ColorOptionType {
	id: number,
	color: string,
	glassColor?: string,
	colorID: number,
	productURL: string,
	price: PriceType,
	arModel: ARModelType,
	productImage: imageHoverType,
	frameColorImage: string
}

export interface ARModelType {
	android: string | null,
	ios: string | null
}


export enum CurrencySymbol {
	INR="â‚¹",
	SGD="$",
	AED = "AED"
}

export enum CurrencyType {
	INR="INR",
	SGD="SGD",
	AED="AED"
}

export interface PriceType {
	symbol: CurrencySymbol,
	currency: CurrencyType,
	basePrice: number,
	lkPrice: number
}
