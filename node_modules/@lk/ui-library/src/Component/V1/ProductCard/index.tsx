import React from "react";
import { Heart } from "../../../Icons";
import { ComponentSizeENUM, ThemeENUM, TypographyENUM } from "../../../Types/general";
import Divider from "../../Common/Divider";
import Pricing from "../../Common/Price/Price.component";
import { RatingStar } from "../../Common/RatingStar/RatingStar.component";
import TryOn from "../../Common/Try On Button";
import { ProductCardTypes } from "./ProductCard.types";
import { ProductContainer, ProductDetails, ProductImage, ProductStats, ProductTitle, ProductSubDetails, VerticalPipe, ProductLabel, ProductSize, ProductSizeContainer, WishlistContainer, WishlistCount, ProductDetailsContainer, AnchorTag, ColorOptionsContainer } from "./styles";

const ProductCard = (
	{
		productData,
		dataLocale,
		isGridView = false
	} : ProductCardTypes
) => {
	// const [imageURL, setImageURL] = React.useState<string|undefined>(productData.productImage.url);

	// function updateImageURL(newURL?:string){
	// 	setImageURL(newURL);
	// }
	
	return <ProductContainer>
		<WishlistContainer>
			<Heart className="wishlist-icon" width="1.5em" height="1.5em"/>
			{productData.showWishlistCount && <WishlistCount>{productData.wishListCount}</WishlistCount>}
		</WishlistContainer>
		<AnchorTag href={productData.productURL}>
			<ProductImage src={productData.productImage.url} />
		</AnchorTag>
		<ProductDetailsContainer href={productData.productURL}>
			<ProductTitle isRTL={productData.isRTL}>{productData.productName}</ProductTitle>
			<ProductDetails isRTL={productData.isRTL}>
				<ProductStats>
					{productData.showProductRating && <RatingStar componentSize={ComponentSizeENUM.small} rating={productData.productRating} id="product-rating" font={TypographyENUM.serif} backgroundColor="var(--turquoise)" primaryTextColor="var(--white)" starColor="var(--white)" />}
					{productData.showProductRating && <VerticalPipe />}
					<ProductSubDetails>{productData.purchaseCount} bought</ProductSubDetails>
					<ProductLabel>{productData.tags}</ProductLabel>
				</ProductStats>
				<TryOn onBtnClick={()=> console.log("working")} id="product-try-on" width="119px" height="34px" imagePosition="0" tryOnImageURL="https://static.lenskart.com/media/desktop/img/desktop_pdp_model.png" isRTL={productData.isRTL} />
			</ProductDetails>
			<Divider id="product-card-divider"/>
			<Pricing id="price"
				isDiscountPriceBigger={false}
				actualPrice={productData.price.basePrice}
				finalPrice={productData.price?.lkPrice}
				hasSpecialPrice={productData.price?.lkPrice < productData.price.basePrice ? true : false}
				componentSize={ComponentSizeENUM.medium}
				font={TypographyENUM.serif}
				// isMobileView={true}
				strikeThroughColor="var(--warm-grey-25)"
				styleTheme={ThemeENUM.primary}
				currencyCode={productData.price.symbol}
				finalPriceColor="var(--turquoize)"
				actualPriceColor="var(--warm-grey-25)"
				isRTL={productData.isRTL}
				isGridView={isGridView}
			></Pricing>
		</ProductDetailsContainer>
		<ProductSizeContainer isRTL={productData.isRTL}>
			{!productData.isRTL && <ProductSize>{dataLocale.SIZE}: <b>{productData.size}</b></ProductSize>}
			{productData.isRTL && <ProductSize><b>{productData.size} :{dataLocale.SIZE}</b></ProductSize>}
			<ColorOptionsContainer>
				{/* <Swatch id="product-swatch"
					colors={productData.colorOptions.slice(0,6)}
					updateImageURL={updateImageURL}
					hoverRotate={false}
					selectedIndexColor="var(--turquoise)"
					productImageURL={productData.productImage.url}
				></Swatch> */}
				{productData.isColorOptionExtra && " +" + productData.colorOptionExtraCount}
			</ColorOptionsContainer>

		</ProductSizeContainer>
	</ProductContainer>;
};

export default ProductCard;
