import { TypographyENUM } from "../../../Types/general";
import { DataType } from "../OldPayment/Payment.types";

export interface PackageCardTypes {
	width?: string
	onClick: (id: string, addOns: string) => void
	dataLocale: any
	id:string;
	imageUrl:string;
	packageTitle:string
	warrantyTxt:string
	specifications:SpecificationType[]
	offerText:string
	price:PriceType
	isBluCut:boolean
	isSunglasses:boolean
	name:string
	blueCutLogo: string
	framePrice?:PriceType
	font:TypographyENUM,
	prices?: DataType[]
	isExchangeFlow?: boolean
	productPrices: PriceType
	isRTL?: boolean;
}

interface SpecificationType{
	groupType:string
	groupTitle:string
	title:string
	subTitle:string
	showHoverIcon:boolean
	hoverUrl: string | null
	isEnabled:boolean
	boldText:boolean
}
export enum CurrencySymbol {
	INR="â‚¹",
	SGD="$",
	AED = "AED"
}

export enum CurrencyType {
	INR="INR",
	SGD="SGD",
	AED="AED"
}

export interface PriceType {
	symbol: CurrencySymbol,
	currency: CurrencyType,
	basePrice: number,
	lkPrice: number,
	firstFrameFreePrice?: number
	remainingExchangePrice?: number;
	itemExchangePrice?: number;
}
