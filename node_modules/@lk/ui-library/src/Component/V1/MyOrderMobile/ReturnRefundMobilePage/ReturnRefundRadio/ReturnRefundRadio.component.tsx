import React, { useState } from "react";
import { Container, Radio, Label, Icon, Data, DataHeader, Tag, DataBody, List, DivFlex, ErrorSpan } from "./ReturnRefundRadio.styles";
import { ReturnRefundRadioTypes } from "./ReturnRefundRadio.types";

const ReturnRefundRadio = ({ selectedValueHandler, defaultValue, refundOptions }: ReturnRefundRadioTypes) => {

	const [selectedValue, setSelectedValue] = useState(defaultValue ? defaultValue : "");

	function radioChangeHandler(e: React.ChangeEvent<HTMLInputElement>) {
		setSelectedValue(e.target.value);
		selectedValueHandler(e.target.value);
	}

	return (
		<Container>
			<div>
				{
					refundOptions.map((mode: any, key: number) => {
						const hasError = mode.error && mode.error.status;
						const hasSubText = mode.subText && mode.subText.contents && mode.subText.contents.length;
						return (
							<Radio key={key}>
								<input id={mode.id} type="radio" value={mode.id} name="return-option" checked={mode.id === selectedValue} disabled={!!hasError} onChange={hasError ? () => null : radioChangeHandler}/>
								<Label htmlFor={mode.id}>
									<Icon>
										<img src={mode.src} alt="icon"/>
									</Icon>
									<Data fade={hasError}>
										<DataHeader>
											<span dangerouslySetInnerHTML={{ __html: mode.title }} />
											{Boolean(mode.badge) && <Tag>{mode.badge}</Tag>}
										</DataHeader>
										<DataBody>
											{mode?.subText?.type === "html" ? (
												<List>
													{hasSubText && mode.subText.contents.map((content: string) => (
														<li
															key={content}
															dangerouslySetInnerHTML={{ __html: content }}
														></li>
													))}
													{/* {mode.subText.map((sub: any, key: number) => {
														return(
															<li key={key}>
																{sub}
															</li>
														);
													})} */}
												</List>
											) : <List>
												{hasSubText && mode?.subText?.contents?.map((content: string) => (
													<li
														key={content}
														className="fsp12 lh-17"
														dangerouslySetInnerHTML={{ __html: content }}
													></li>
												))}
											</List>}
											{/* {!allModesDisabled && mode.error && (
												<div className="error">
													{mode.error.status && (
														<div className="display-flex align-items-center mr-t8">
															<img
																alt="img"
																src={mode.error.src}
																style={{ width: "16px", height: "16px", flexBasis: "5%" }}
															/>
															<span
																className="fsp11 mr-l8 lh-14 text-color_dull_black"
																dangerouslySetInnerHTML={{ __html: mode.error.text }}
															></span>
														</div>
													)}
												</div>
											)} */}
											{mode.error && (
												<div>
													{mode.error.status && (
														<DivFlex>
															<img
																alt="img"
																src={mode.error.src}
																style={{ width: "16px", height: "16px", flexBasis: "5%" }}
															/>
															<ErrorSpan
																dangerouslySetInnerHTML={{
																	__html: mode.error.text,
																}}
															></ErrorSpan>
														</DivFlex>
													)}
												</div>
											)}
										</DataBody>
									</Data>
								</Label>
							</Radio>
						);
					})
				}
			</div>
		</Container>
	);
};

export default ReturnRefundRadio;
