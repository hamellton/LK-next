import React, { useEffect } from "react";
import { ComponentSizeENUM, TypographyENUM } from "../../../../Types/general";
import { FormInput } from "../../../Common/Input/Input.component";
import { inputs } from "../../../Common/Input/Input.types";
import { CheckDeliveryOptionType } from "./CheckDeliveryOption.types";
import { ChangeButton, CheckDeliveryContainer, DeliveryLogo, DeliveryOptionsContainer, DeliveryOptionText, DeliveryOptionTextWrapper, InputWrapper, LoaderWrapper, MainText, StandardDeliveryText, StandardDeliveryWrapper, SubText } from "./CheckDeliveryOption.styles";
import { getFormattedDate } from "../../../../helper";
import CommonLoader from "../../../Common/Loader";
import { ErrorMessage } from "../../../Common/Textarea/styles";

const CheckDeliveryOption = ({
	id = "check-delivery-option",
	dataLocale = {
		ENTER_PIN_CODE: "Enter Pin Code",
		CHECK: "CHECK",
		DELIVERY_OPTIONS_TO: "Delivery Options To",
		STANDARD_DELIVERY: "Standard Delivery",
		FREE: "Free",
		GET_IT_DELIVERED_BY: "Get it delivered by",
		CHANGE: "Change",
		PLEASE_ENTER_VALID_PINCODE: "Please Enter Valid Pincode",
	},
	deliveryDate = 1661126400000,
	deliveryOption = "STANDARD",
	pinCode,
	font = TypographyENUM.defaultBook,
	onSearch,
	showEstimateDelivery,
	deliveryLogoUrl="https://static.lenskart.com/media/desktop/img/pdp/delivery.png",
	isLoading,
	isRTL = false,
	errorMessage
}: CheckDeliveryOptionType) => {
	const [pincode, setPincode] = React.useState(pinCode);
	
	const [showEstimateDeliverySection, setShowEstimateDeliverySection] = React.useState(showEstimateDelivery);

	useEffect(()=>{
		setShowEstimateDeliverySection(showEstimateDelivery);
	}, [showEstimateDelivery]);

	const onCheckPincodeClick = () => {
		// if (pincode) {
		onSearch(parseInt(pincode));
		// }
	};
	const updatePinCode = (value: string) => {
		setPincode(value);
	};

	const onChangeButtonClick = () => {
		setShowEstimateDeliverySection(false);
	};

	return (
		<CheckDeliveryContainer id={id} styleFont={font}>

			{(showEstimateDeliverySection && !isLoading) && <DeliveryOptionsContainer>
				<DeliveryOptionTextWrapper isRTL={isRTL}>
					<DeliveryOptionText>
						{dataLocale.DELIVERY_OPTIONS_TO} {pincode}
					</DeliveryOptionText>
					<ChangeButton onClick={onChangeButtonClick}>{dataLocale.CHANGE}</ChangeButton>
				</DeliveryOptionTextWrapper>
				<StandardDeliveryWrapper isRTL={isRTL}>
					<DeliveryLogo src={deliveryLogoUrl}/>
					<StandardDeliveryText isRTL={isRTL}>
						<MainText>{deliveryOption === "STANDARD" && dataLocale.STANDARD_DELIVERY} ({dataLocale.FREE})</MainText>
						<SubText>{dataLocale.GET_IT_DELIVERED_BY} {getFormattedDate(deliveryDate)}</SubText>
					</StandardDeliveryText>
				</StandardDeliveryWrapper>
			</DeliveryOptionsContainer> }

			{(!showEstimateDeliverySection && !isLoading) &&
				<InputWrapper>
					<FormInput isRTL={isRTL} font={font} width="100%" onValueChange={(e) => updatePinCode(e.target.value)} includeButton={true} 
						buttonText={dataLocale.CHECK} buttonOnClick={onCheckPincodeClick} id="input-pincode" label={dataLocale.ENTER_PIN_CODE} 
						type={inputs.type.text} dir={inputs.type.dir} componentSize={ComponentSizeENUM.medium} labelFontSize="12px" />
					<ErrorMessage>{errorMessage}</ErrorMessage>
				</InputWrapper>
			}

			{isLoading &&
			<LoaderWrapper>
				<CommonLoader show={true} overlayClassName="no-overlay" wrapperClassName="loader" />
			</LoaderWrapper>}
		</CheckDeliveryContainer>
	);
};

export { CheckDeliveryOption };
