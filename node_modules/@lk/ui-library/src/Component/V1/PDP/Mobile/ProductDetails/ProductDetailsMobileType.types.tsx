import { DataType, TypographyENUM } from "../../../../../Types/general";
import { RatingTypes } from "../../../../Common/Rating/Rating.types";
import { PriceType } from "../../../../Types/price.types";

export interface ProductDetailsMobileType extends RatingTypes {
	name: string,
	reviewTitle: string,
	productType?:string,
	reviewDetail: string,
	date: string,
	font: TypographyENUM,
	productName?: string,
	purchaseCount?: number, displaySubname?: string,
	suitedFor?: string,
	supportedPowers?: string,
	frameWidth?: string,
	frameSize?: string,
	noOfReviews?: number,
	taxInclusivePrice?: number,
	powerInfoText?:string,
	productOfferText?: string,
	frameWidthLabels?: Array<string>,
	price: PriceType,
	onReviewsClickHandler?: () => void
	additionalInfoUrl?:string,
	onClickAdditionalInfo?: (url: string) => any,
	supportedPowersInfoLink?:string
	onClickSupportedPowerInfoLink?: (url: string) => any,
	dataLocale: DataType,
	onWishListClick: () => void,
	isShortListed?: boolean,
	isExchangeFlow?: boolean,
	buyOnChat?: boolean
	showGST?: boolean,
	showPostPay: boolean,
	onclickBuyonChat: () => void,
	productData:ProductTypeBasic
}

export interface ProductTypeBasic {
	id: number,
	size: string,
	productName: string,
	showProductRating: boolean,
	productRating: number,
	showPurchaseCount: boolean,
	purchaseCount: number,
	showWishlistCount: boolean,
	wishListCount: number,
	tags: string,
	isDitto: boolean,
	isColorOptionExtra: boolean,
	colorOptionExtraCount: number,
	classification: string,
	productURL: string,
	productURLWithoutDomain: string,
	price: PriceType,
	offerText?:string
	showTitle: boolean
	specifications: any[];
	totalNoOfRatings: string;
	product_url?:any
}
