import { ComponentSizeENUM, DataType, TypographyENUM } from "../../../../../Types/general";

export interface PackageScreenCardType{
	tags?: Array<string>,
	width?: string,
	onClick: (id: string, addOns: string) => void
	id: string
	title?:string
	isRTL?: boolean
	pkgImageLink:string
	selected:boolean,
	showTaxText:string
	price:PriceType,
	componentSize: ComponentSizeENUM,
	font: TypographyENUM,
	specifications:SpecificationType[]
	priceFree:string,
	PlayIcon:string,
	labelBgColor:string;
	labelColor:string,
	handleOnPackageClick: (id: string) => void
	onClickVideo?: () => void,
	showOfferRibbon?: boolean
	offerColorCode?:string
	offerText1?: string
	offerText2?: string
	offerTextHasIcon?: boolean
	onInfoIconClick?: () => void
	deviceType?: string
	videoLink?: string
	warrantyTxt?: string
	isExchangeFlow?: boolean
	productPrices: PriceType
	country?: string
	configData: DataType
	localeData: DataType
}

interface SpecificationType{
	groupType:string
	groupTitle:string
	title:string
	subTitle:string
	hoverUrl: string | null
	isEnabled:boolean
	boldText:boolean
}
export enum CurrencySymbol {
	INR="â‚¹",
	SGD="$",
	AED = "AED"
}

export enum CurrencyType {
	INR="INR",
	SGD="SGD",
	AED="AED"
}

export interface PriceType {
	symbol: CurrencySymbol,
	currency: CurrencyType,
	basePrice: number,
	lkPrice: number,
	firstFrameFreePrice?: number
	remainingExchangePrice?: number;
	itemExchangePrice?: number;
}

