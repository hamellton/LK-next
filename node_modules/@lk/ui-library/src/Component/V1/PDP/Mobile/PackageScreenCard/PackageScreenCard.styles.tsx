import styled from "styled-components";
import { TypographyENUM } from "../../../../../Types/general";

export const PackageWrapper = styled.div<{styleFont:TypographyENUM, device?: string}>`
   font-family: ${(props) => props.styleFont};
   letter-spacing: -0.02em;
   border-radius: var(--border-radius-xs);
   box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.12);
  border: 1px solid var(--purple-haze);
  font-size: var(--fs-20);
  display: flex;
  flex-direction: row;
  /* align-items: center; */
  align-items: stretch;
  background-color: ${props => props.device === "desktop" ? "var(--white)": ""};
  cursor: pointer;
  transition: box-shadow 0.2s ease-in-out;
	&:hover {
			box-shadow: 0 3px 16px 0 rgba(0, 0, 0, 0.1);
		}

`;

export const PackageTitle = styled.div`
  max-width: 73%;
`;


export const PackageCardDetails = styled.div<{showOfferRibbon?: boolean}>`
  letter-spacing: -0.02em;
  background-color: var(--white);
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 12px;
  padding: 16px;
  border-bottom: none;
  /* border-radius: var(--border-radius-xs) var(--border-radius-xs) 0 0; */

  border-radius: ${props => !props.showOfferRibbon ? "var(--border-radius-xs)": "var(--border-radius-xs) var(--border-radius-xs) 0 0"};
`;

export const Heading = styled.h3<{styleFont:TypographyENUM}>`
  letter-spacing: -0.02em;
  font-size: var(--fs-20);
  color: var(--dark-blue-100);
  font-family: ${TypographyENUM.lkSerifNormal};
  font-weight: var(--fw-normal);
  display: flex;
  width: 100%;
  justify-content: space-between;
  svg{
	width:9px;
	height:18px;
  }
  /* align-items:center; */

  & .lens-checkbox-select{
    display: flex;
    flex-direction: column;

    justify-content: center;
    align-items: center;
    padding: 0;
    border-radius: 50%;
    height: 16px;
    width: 16px;
    border: 1px solid #A2A2B8;
  }
`;

export const PackagelistCardWrapper = styled.div`
   display:flex;
   justify-content: space-between;
   gap:30px;
   width:100%;
`;
export const LensPrice = styled.span`
   display:flex;
   justify-content: space-between;
   align-items:center;
   font-family: var(--font-lksans-regular);
   color: var(--dark-blue-100);
   font-size: var(--fs-16);
   small{
	font-size: var(--fs-13);
   }
`;

export const PackageImg= styled.div<{device?: string, pkgImageLink?: string}>`
   display:flex;
   justify-content: space-between;
   /* max-width:110px; */
   width: ${props => props.device === "desktop" ? "190px" : "140px"};
   /* height: 100%; */
   height: ${props => !props.pkgImageLink ? "100%" : ""};
   /* object-fit: cover; */
   align-items: center;
   img{
    height: auto;
    width: ${props => props.device === "desktop" ? "170px" : "140px"};
    /* max-width:100%;
    height:auto;
    object-fit: contain; */
   }
`;


export const PackageCardList = styled.ul`
   padding:0;
`;

export const OfferContainer = styled.div<{offerColorCode?:string}>`
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  font-weight: var(--fw-bold);
  font-size: var(--fs-13);
  display: flex;
  justify-content: space-between;
  padding: 0 var(--pd-16);
  line-height: 34px;
  background-color: ${props => props.offerColorCode};
  font-family: var(--font-lksans-regular);
  color: var(--text);
  border-radius:0 0 var(--border-radius-xs) var(--border-radius-xs);
  width:100%;

  // desktop
  background: ${props => `linear-gradient(90deg, rgba(247, 241, 222, 0) 0%, ${props.offerColorCode} 100%);`};
  @media screen and (max-width:767px){
	padding: 8px var(--pd-16);
	line-height: 18px;
  }
  @media screen and (min-width:768px) and (max-width:1439px){
	line-height: 18px;
	padding: 7px var(--pd-16);
  }
`;

export const LensLabelHead = styled.span<{styleFont:TypographyENUM,labelBgColor?:string,labelColor:string}>`
  font-weight: var(--fw-bold);
  font-size: var(--fs-9);
  line-height: 12px;
  background-color: ${props => props.labelBgColor};
  font-family: ${(props) => props.styleFont};
  color: ${props => props.labelColor};
  border-radius:var(--border-radius-xxxs);
  text-transform:uppercase;
  margin:0 var(--pd-10) var(--pd-10);
  padding: 4px 6px;
`;

export const TagsContainer = styled.div<{count?: number}>`
  display: inline-flex;
  flex-direction: row;
  gap: 4px;
`;

export const Tag = styled.span`
  font-weight: var(--fw-bold);
  font-size: var(--fs-9);
  line-height: 12px;
  border-radius:var(--border-radius-xxxs);
  text-transform:uppercase;
  font-family: ${TypographyENUM.lkSansRegular};
  color: var(--dark-blue-75);
  padding: 4px 6px;
  /* margin-right: 4px; */
  background-color: var(--ghost-white);
`;

export const SpecsLI = styled.li<{styleFont:TypographyENUM}>`
  font-size: var(--fs-12);
  line-height:18px;
  font-family: ${(props) => props.styleFont};
  color: var(--text);
  display: -webkit-box;
  display: -ms-flexbox;
  padding: 2px 0;
`;

export const PlayIconWrapper = styled.i<{isRTL?: boolean}>`
 margin-right: ${props => props.isRTL ? "5px" : "auto"};
 cursor:pointer;
 margin-left: ${props => props.isRTL ? "auto" : "5px"};
 display:flex;
`;

export const PriceWrapper = styled.div<{isRTL: boolean}>`
	display: flex;
	${props => props.isRTL ? "justify-content: end; direction: initial;" : ""}
	align-items:center;
`;

export const TaxText = styled.small`
  font-weight: var(--fw-light);
`;
export const FreeText = styled.span`
  color:#0fbd95;
		font-size: var(--fs-16);
		font-weight: var(--fw-bold);
`;

export const RightSection = styled.div`
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
`;
export const LeftSection = styled.div`
  /* height: 100%; */
  height: auto;
  border-radius: var(--border-radius-xs) 0 0 var(--border-radius-xs);
  overflow: hidden;
  display: flex;
  align-items: center;
`;
export const VideoWrapper = styled.div`
  height:100%;
  iframe{
	height:100%;
  }
`;

export const StrikedText = styled.div`
  text-decoration: line-through;
  font-weight: 400;
  margin-right: 5px;
  font-size: 0.75em;
`;

export const ExchangePrice = styled.div`
  font-weight: 700;
`;

export const FreeWrapper = styled.div`

`;

export const IconWrapper = styled.div<{isRTL?: boolean}>`
  transform: ${props => props.isRTL ? "scale(-1)" : ""};
  svg{
	width:18px;
	height:14px;
  }
`;
