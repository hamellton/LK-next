import React, { useEffect, useRef, useState } from "react";
import Carousel from "../../../Common/Carousel";
import { TypographyENUM } from "../../../../Types/general";
import { ImageModalProps } from "./ImageModal.types";
import {
	CarouselWrapper,
	ImageModalWrapper,
	ImgContainer,
	ProductContainer,
	ProductImage
} from "./ImageModal.styles";
import Slider from "react-slick";
import ReactImageZoom from "react-image-zoom";

function ImageModal({
	productList,
	font = TypographyENUM.defaultBook,
	isSelectedImageID = 0,
	onClick,
	isRTL=false
}: ImageModalProps) {
	const defaultSlide = 1;
	const carouselRef = useRef<Slider>(null);
	const carouelResponsiveSettings = [
		{ breakpoint: 1800, settings: { slidesToShow: 8 } },
		{ breakpoint: 1500, settings: { slidesToShow: 7 } },
		{ breakpoint: 1024, settings: { slidesToShow: 5 } },
		{ breakpoint: 600, settings: { slidesToShow: 4 } },
		{ breakpoint: 480, settings: { slidesToShow: 3 } },
	];
	const [zoomProps, setZoomProps] = useState({
		scale: 0.3,
		zoomWidth: 800,
		zoomStyle:
        "border: 1px solid rgb(0, 0, 0);background-color: white;cursor: pointer;z-index: 9;width: 350px;height: 350px;",
		zoomLensStyle:
        "border: 1px solid rgb(136, 136, 136);background-repeat: no-repeat;background-color: white;z-index: 10;opacity:0.3",
		offset: { vertical: 10, horizontal: 10 },
		img: productList[isSelectedImageID].mediumImageUrl
	});

	useEffect(() => {
		setZoomProps((oldProps) => ({ ...oldProps, img: productList[isSelectedImageID].mediumImageUrl }));
	}, [isSelectedImageID]);

	return (
		<ImageModalWrapper>
			<ImgContainer id="zoom-image-container" style={{
				minHeight: "350px",
				width: "100%",
				maxHeight:"350px",
				// backgroundImage:
				//   'url("https://static.lenskart.com/media/desktop/img/loader-lk.gif")',
			}}>
				<div


				>
					<ReactImageZoom {...zoomProps} width={450} />
				</div>
			</ImgContainer>

			<CarouselWrapper>
				<Carousel responsive={carouelResponsiveSettings} wrapperClassName="slider-custom" ref={carouselRef} isRTL={isRTL} initialSlide={isRTL ? productList.length - 1 : 0}>
					{productList.map((product, index) => (
						<Carousel.Slide id={index + 1} currentSlide={defaultSlide} key={index}>
							<ProductContainer
								styleFont={font}
								isSelectedImage={isSelectedImageID === product.id}
								onClick={() => onClick(product.id)}
							>
								<ImgContainer>
									<ProductImage src={product.imageUrl} alt={`Image_${product.id}`} />
								</ImgContainer>
							</ProductContainer>
						</Carousel.Slide>
					))}
				</Carousel>
			</CarouselWrapper>
		</ImageModalWrapper>
	);
}

export { ImageModal };
