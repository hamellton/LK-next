import styled from "styled-components";
import { TypographyENUM } from "../../../Types/general";
interface Props {
	expand?: boolean
	column?: boolean
	isMaxHeight?: boolean
	isRTL?: boolean
	padding?: boolean
	height?: string | undefined
}

export const AccordionWrapper = styled.div<{ expand: boolean, borderTopStyle: boolean, styleFont: TypographyENUM, isRTL: boolean}>`
	border-top: ${(props) => props.borderTopStyle === true ? "1px solid var(--light-grey) !important" : "none"};
	font-size: var(--fs-14);
	font-family: ${(props) => props.styleFont ? props.styleFont : TypographyENUM.defaultBook};
	font-synthesis: none;
	font-weight: bold;
	letter-spacing: 1.3px;
	color: var(--darker-grey);
	padding-bottom: ${(props) =>
		props.expand === true ? "15px" : ""};
	border: 0px solid var(--transparent);
	&:last-child {
		border-bottom: 1px solid var(--light-grey) !important;
	}
	&#frametype_id,&#frame_shape_id{
		.acoContent{
			overflow:visible;
		}
	}
`;

export const TitleBox = styled.div<{styleComponent: boolean, expand: boolean, isRTL: boolean, padding: boolean}>`
	cursor: var(--pointer);
	padding: ${(props) => props.styleComponent ? "var(--pd-20) var(--pd-10)" : "var(--pd-15) var(--pd-10) var(--pd-14) 0px"};
	background-color: ${(props) =>
		props.expand === true ? "var(--turquoise-blue-dark)" : "var(--grey-100)"};
	border-radius: ${(props) =>
		props.expand === true ? "10px 10px 0px 0px" : "10px 10px 10px 10px"};
	display: flex;
	justify-content: var(--space-between);
	height: auto;
	color: ${(props) =>
		props.expand === true ? "var(--text-color)" : "var(--text-color-black)"};
	font-weight: var(--fw-md);
	align-items: center;
	flex-direction: ${props => props.isRTL ? "row-reverse" : "row"};
	${props => props.padding && "padding: var(--pd-20) 0"}
	${props => props.isRTL ? "padding-right:10px" : ""};
`;

export const TitleWrapper = styled.div`
	display: flex;
	flex-direction: column;
	width: 100%;
`;

export const Title = styled.span<{
	isRTL: boolean
}>`
	width: calc(100% - 20px);
	display: ${props => props.isRTL ? "table" : "flex"};
	text-align: ${props => props.isRTL ? "end" : "initial"};
	align-items: center;
	font-size: var(--fs-13);
	letter-spacing: 1.3px;
	font-weight: 500;
	color:#333;
	font-family: 'LKFuturaStd-Medium';
`;

export const Content = styled.div<Props>`
	padding: ${props => props.expand ? props.padding ? "0px  0px var(--pd-15) 0px" : "0px 0 5px 0" : ""};
	transform-origin: top;
	background: var(--grey-100);
	border-radius: 0px 0px var(--pd-10) var(--pd-10);
	height: ${props => props.height ? props.height : "auto"};
	${props => !props.expand && "height: 0"};
	transform: ${props => props.expand ? "scaleY(1)" : "scaleY(0)"};
	transition: transform 0.5s ease-in-out;
	max-height: ${(props) =>
		props.isMaxHeight === true ? "325px" : ""};
	overflow-y: ${props => props.padding ? "hidden" : "scroll"};
	/* width */
	::-webkit-scrollbar {
		// width: 5px;
	}

	/* Track */
	::-webkit-scrollbar-track {
		border-radius: 0;
	}

	/* Handle */
	::-webkit-scrollbar-thumb {
		background: var(--whitish-gray);
		border-radius: 5px;
	}

	/* Handle on hover */
	::-webkit-scrollbar-thumb:hover {
		background: var(--black);
	}
`;

export const FlexCol = styled.div`
	display: flex;
	flex-direction: column;
`;

export const Flex = styled.div`
	display: flex;
`;

export const CheckBoxLabel = styled.span<{
	isRTL: boolean
}>`
	${props => !props.isRTL ? "padding-left:var(--pd-10)" : "padding-right:var(--pd-10)"};
	opacity: var(--moderate-opacity);
	text-transform: var(--capitalize);
	font-size: 12px;
	margin: 1.5px 0;
	&:hover {
		opacity: var(--default-opacity);
		color: var(--black);
	}
`;

export const UpArrow = styled.span`
	border: 5px solid var(--transparent);
	border-top: 5px solid var(--dark-grey);
	margin-top: -10px;
	float: right;
`;

export const DownArrow = styled.span`
	border: 5px solid var(--transparent);
	border-bottom: 5px solid var(--dark-grey);
	margin-top: -10px;
	float: right;
`;
export const Label = styled.label`
	cursor: var(--pointer);
	display: flex;
    align-items: center;
	span{
		text-transform:none;
		color: #2a2a2a;
		opacity:0.5;
		span{
			opacity:1;
		}
	}
`;

export const FilterItemsWrapper = styled.div<Props>`
	display: flex ;
	flex-direction: ${(props) => props.isRTL && props.column !== true ? "row-reverse" : props.column === true ? "column" : "row"};
	gap: 6px;
	flex-wrap: wrap;
`;

export const FlexReverse = styled.span<{isRTL: boolean}>`
	display: flex;
	flex-direction: row-reverse;
	${props => props.isRTL ? "text-align:right" : "text-align:left"};
`;

export const CountText = styled.span`
	margin-right: 5px;
`;

export const InputWrapper = styled.div`
	padding: 1.5px;
	display: flex;
	border: 2px solid #b2b1b1;
	border-radius: 2px;

	input{
		border: 2px solid #b2b1b1;
		border-radius: 1px;
	}

	input[type="checkbox"]{
		accent-color: #21A195 !important;
	}

`;
