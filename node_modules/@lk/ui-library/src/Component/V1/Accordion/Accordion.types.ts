import { TypographyENUM } from "./../../../Types/general";
import { ReactNode } from "react";

export interface AccordionGroupTypes {
	id: string
	filters: Array<FilterTypes>,
	font: TypographyENUM
	filterSelected: any
	onClick: ({ event, item, selectedOption }: {item: FilterTypes, selectedOption: OptionTypes, event: any}) => null
	// onClick: ({ event, item, selectedOption }: {item: FilterTypes, selectedOption: OptionTypes, event: React.MouseEvent<HTMLInputElement, MouseEvent>}) => null
	isRTL?: boolean
	defaultExpand?: number;
	padding?: boolean
}

export interface FilterTypes {
	name: string
	id: string
	type: string,
	canCollapse: boolean,
	showBorderTop: boolean,
	selectedOption?: string[]
	options?: Array<OptionTypes>
	component?: () => ReactNode
	isRTL?: boolean
	height?: string | undefined
}
export interface OptionTypes {
	title: string
	productsCount: number
	imageUrl?: string
	id: string
}

export interface AccordionTypes {
	id: string
	children: ReactNode
	title: string
	isMaxHeight: boolean
	expand: boolean
	showBorderTop: boolean
	canCollapse: boolean
	isComponent: boolean
	handleExpand: () => void,
	font: TypographyENUM
	isRTL?: boolean
	padding?: boolean
	height?: string | undefined
}

export enum filterTypeENUM {
	IMAGE_SELECTION = "IMAGE_SELECTION",
	CHECKBOX = "CHECKBOX",
	COMPONENT="COMPONENT"
}

export type handleClickAttrs = {
	item: FilterTypes
	selectedOption: OptionTypes
	event: any
}
