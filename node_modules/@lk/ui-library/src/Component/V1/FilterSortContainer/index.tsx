import React from "react";
import BottomSheet from "../../Common/BottomSheet/BottomSheet.component";
import * as Icons from "../../../Icons";
import { FilterSortBtnTypes } from "./FilterSortContainer.types";
import { BottomSheetBtn, BottomSheetBtnWrapper, BottomSheetIndicator, BottomSheetListRadio, BottomSheetListRadioWrapper, BottomSheetListTitle, BottomSheetTile, BottomSheetTitle, Divider, FilterSortBtn, FilterSortBtnIcon, FilterSortBtnText, FilterSortBtnWrapper } from "./styles";

const FilterSortContainer = ({ search, tempData, showBottomSheet,bottomSheetData, closeBottomSheet, openBottomSheet, selectedSize, onSizeTitleClick, onClearClick, onApplyClick, onSortClick, sortBy, dataLocale,isFilterApply, isRTL, isContactLens=false,isAccessories=false }: FilterSortBtnTypes) => {
	const onSortClickCall = (param:string) => {
		onSortClick(param);
	};
	const onSizeTitleClickCall = (param: number | string) => {
		onSizeTitleClick(param);
	};
	const closeBottomSheetFunc = () => {
		closeBottomSheet();
	};
	return (
		<>
			<BottomSheet show={showBottomSheet} closebottomSheet={() => closeBottomSheetFunc()} showCrossIcon={false}>
				{showBottomSheet && <BottomSheetTitle>
					<Icons.CrossFilter onClick={closeBottomSheet} style={{ color: "#18cfa8" }}/>
					{bottomSheetData.title}
				</BottomSheetTitle>}
				<div style={{
					paddingBottom: "35px"
				}}>
					{bottomSheetData.data && bottomSheetData.data.map((i: any, index:number) =>
						<React.Fragment key={`filter_${index}`}>
							{bottomSheetData.type == "radio" && <BottomSheetTile onClick={() => onSortClickCall(i.value)}> <BottomSheetListTitle>
								{i.key}
							</BottomSheetListTitle>
							<BottomSheetListRadioWrapper>
								<BottomSheetListRadio name={bottomSheetData.type} value={i.value} onChange={() => onSortClickCall(i.value)} checked={sortBy == i.value} /></BottomSheetListRadioWrapper></BottomSheetTile>}
							{bottomSheetData.type == "checkbox" && <BottomSheetTile onClick={() => onSizeTitleClickCall(i.id)}>
								<BottomSheetListTitle key={i.id} >
									{i.title} ({i.productsCount})
								</BottomSheetListTitle>
								{(selectedSize.includes(i.id)) && <Icons.Check />}
							</BottomSheetTile>}
						</React.Fragment>

					)}
				</div>

				{showBottomSheet && <BottomSheetBtnWrapper>
					<BottomSheetBtn isApply={false} onClick={onClearClick} >
						{dataLocale.CLEAR}
					</BottomSheetBtn>
					<BottomSheetBtn isApply={true} onClick={onApplyClick} >{dataLocale.APPLY}</BottomSheetBtn>
				</BottomSheetBtnWrapper>}
			</BottomSheet>
			<FilterSortBtnWrapper>
				{/* <div style={{ zIndex: "11px" }}> */}

				{!isAccessories && !isContactLens && !search && <FilterSortBtn className="all-size" isRTL={isRTL} onClick={() => openBottomSheet(0)} >

					<FilterSortBtnText>
						{tempData.filterData.length==1?tempData.filterName:tempData.filterData.length>1?"Custom Size":dataLocale.ALL_SIZE}
					</FilterSortBtnText>
					<FilterSortBtnIcon>
						<Icons.DownArrow />
					</FilterSortBtnIcon>

				</FilterSortBtn>}
				{!isContactLens && !search && !isAccessories && <Divider/>}
				<FilterSortBtn isRTL={isRTL} onClick={() => openBottomSheet(1)}>
					<FilterSortBtnIcon>
						<Icons.SortIcon />
					</FilterSortBtnIcon>
					<FilterSortBtnText>
						{dataLocale.SORT_BY}
					</FilterSortBtnText>
					{tempData.sortData && <BottomSheetIndicator />}
				</FilterSortBtn>
				{!isAccessories && <Divider/>}
				{!isAccessories && <FilterSortBtn isRTL={isRTL} onClick={() => openBottomSheet(2)}>
					<FilterSortBtnIcon>
						<Icons.FilterIcon />
					</FilterSortBtnIcon>
					<FilterSortBtnText>
						{dataLocale.FILTERS}
					</FilterSortBtnText>
					{isFilterApply && <BottomSheetIndicator />}

				</FilterSortBtn>}
				{/* </div> */}
			</FilterSortBtnWrapper>
		</>
	);
};

export default FilterSortContainer;
