import styled from "styled-components";
import { TypographyENUM } from "../../../../../Types/general";
interface Props {
	expand?: boolean
	column?: boolean
	isMaxHeight?: boolean
	isRTL?: boolean
}

export const AccordionWrapper = styled.div<{borderTopStyle: boolean, styleFont: TypographyENUM, isRTL: boolean}>`
	border-top: ${(props) => props.borderTopStyle === true ? "1px solid var(--light-grey) !important" : "none"};
	text-align: left;
	font-size: var(--fs-14);
	font-family: ${(props) => props.styleFont ? props.styleFont : TypographyENUM.defaultBook};
	font-synthesis: none;
	font-weight: bold;
	letter-spacing: 1.3px;
	color: var(--darker-grey);
	border: 0px solid var(--transparent);
    background-color: #EEEEEE;
    border-radius: 4px;
`;

export const TitleBox = styled.div<{styleComponent: boolean, expand: boolean, isRTL: boolean}>`
	cursor: var(--pointer);
	padding: ${(props) => props.styleComponent ? "var(--pd-20) var(--pd-10)" : "var(--pd-15) var(--pd-10)"};
	background-color: ${(props) =>
		props.expand === true ? "var(--turquoise-blue-dark)" : "var(--grey-100)"};
	border: 1px solid ${(props) =>
		props.expand === true ? "var(--turquoise-blue-dark)" : "var(--grey-100)"};
	border-radius: ${(props) =>
		props.expand === true ? "10px 10px 10px 10px" : "10px 10px 10px 10px"};
	display: flex;
	justify-content: var(--space-between);
	height: auto;
	color: ${(props) =>
		props.expand === true ? "var(--text-color)" : "var(--text-color-black)"};
	font-weight: var(--fw-md);
	align-items: center;
	flex-direction: ${props => props.isRTL ? "row-reverse" : "row"};
`;

export const TitleWrapper = styled.div`
	display: flex;
	flex-direction: row;
	width: 100%;
`;

export const Title = styled.span<{
	isRTL: boolean
}>`
	width: calc(100% - 20px);
	display: ${props => props.isRTL ? "table" : "flex"};
	text-align: ${props => props.isRTL ? "end" : "initial"};
	align-items: center;
	font-size: var(--fs-13);
	letter-spacing: 1.3px;
`;

export const Content = styled.div<Props>`
	padding: 0px var(--pd-15) var(--pd-15) var(--pd-15);
	background: #fff;
	border-radius: 0px 0px var(--pd-10) var(--pd-10);
	transition: all 0.5s ease-in-out;
	max-height: ${(props) =>
		props.isMaxHeight === true ? "250px" : ""};
	overflow: hidden;
	/* width */
	::-webkit-scrollbar {
		width: 5px;
	}

	/* Track */
	::-webkit-scrollbar-track {
		border-radius: 0;
	}

	/* Handle */
	::-webkit-scrollbar-thumb {
		background: var(--whitish-gray);
		border-radius: 5px;
	}

	/* Handle on hover */
	::-webkit-scrollbar-thumb:hover {
		background: var(--black);
	}
`;

export const FlexCol = styled.div`
	display: flex;
	flex-direction: column;
`;

export const Flex = styled.div`
	display: flex;
`;

export const UpArrow = styled.span`
	border: 5px solid var(--transparent);
	border-top: 5px solid #00bac6;
	margin-top: -10px;
	float: right;
`;

export const DownArrow = styled.span`
	border: 5px solid var(--transparent);
	border-bottom: 5px solid #00bac6;
	margin-top: -15px;
	float: right;
`;
export const Label = styled.label`
	cursor: var(--pointer);
	display: flex;
    align-items: center;
`;

export const Icon = styled.i`
    margin-right: 20px;
	color: #00bac6;
`;

export const BtnText = styled.span`
	position: absolute;
	right: -15px;
	top: -10px;
	color: #00BAC6;
	font-weight: 700;
	font-size: 14px;
	cursor: pointer;
	text-transform: uppercase;
`;

export const BtnWrapper = styled.div`
	width: 200px;
	position: relative;
`;

export const Image = styled.img`
	max-width: 100%;
`;

export const StatusIcon = styled.div`
	width: 30px;
	height: 30px;
	margin-right: 12px;
`;
