import React from "react";
import { formatDateWithPattern } from "../../../../../helpers";
// import { formatDate } from "../utils";
import { ExpectedDeliveryType } from "./ExpectedDelivery.types";
import { DeliveryWrapper } from "./styles";

const getETAText = (deliveryDate:number, revisedEta:number, dataLocale:any, formatDate: (time: number, pattern: string, year?: string) => void) => {
	const expectedTS = new Date(revisedEta || deliveryDate || 0).setHours(0, 0, 0, 0);
	const currentTS = new Date().setHours(0, 0, 0, 0);
	const timeLeft = (expectedTS - currentTS) / (24 * 60 * 60 * 1000);
	const { ARRIVING, RUNNING_LATE, WAS_EXPECTED, NOW } = dataLocale;
	let etaText;
	if (timeLeft < 0) {
		etaText = (
			<>
				<span>{RUNNING_LATE}, </span>
				<span>
					{WAS_EXPECTED} {formatDate(deliveryDate, "EEE D MMM")}
				</span>
			</>
		);
	} else if (revisedEta) etaText = `${NOW} ${ARRIVING} ${formatDate(revisedEta, "EEE, D MMM")}`;
	else {
		etaText = `${ARRIVING} ${formatDate(deliveryDate, "EEE, D MMM")}`;
	}
	return etaText;
};

const ExpextedDelivery = ({ dataLocale, deliveryDate, revisedETA }: ExpectedDeliveryType) => {
	const etaText = getETAText(deliveryDate, revisedETA, dataLocale, formatDateWithPattern);
	return (
		<DeliveryWrapper>{etaText}</DeliveryWrapper>
	);
};

export default ExpextedDelivery;