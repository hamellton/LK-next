import React, { useState } from "react";
import { Check, Cross, Edit } from "../../../../Icons";
import { HorizontalLine } from "../../Footer/styles";
import { MyDittoType } from "./MyDitto.types";
import { CreateNewDitto, DittoDelete, DittoHeading, DittoHeadingWrapper, DittoImage, DittoProfileList, DittoProfileListItem, DittoProfileListItemCreated, DittoProfileListItemNav, DittoProfiles, DittoProfilesSelect, DittoProfilesSelectyInfo, DittoSaveNameBox, DittoSetDefault, DittoSubHeading, DittoWrapper, Input } from "./styles";

const MyDitto = ({ dataLocale, dittoPrfileData, deleteDitto, defaultDittoId, setDefaultDitto, createNewDitto, onSaveDittoName }: MyDittoType) => {
	const [saveNameId, setSaveNameId] = useState("");
	const [ inputName, setInputName] = useState("");
	const deleteDittoId = (id:string, count:number) => {
		deleteDitto(id,count);
	};
	const setDefaultDittoId = (id:string) => {
		setDefaultDitto(id);
	};
	const handleCreateNewDitto = () => {
		createNewDitto();
	};
	const handleEditName = (params:any) => {
		setSaveNameId(params);
	};
	const cancelName = () => {
		setSaveNameId("");
		setInputName("");
	};
	const handleSaveDittoName = () => {
		onSaveDittoName(saveNameId, inputName);
		setInputName("");
		setSaveNameId("");
	};
	return (
		<DittoWrapper>
			<DittoProfiles>
				<DittoHeadingWrapper>
					<DittoHeading>{dataLocale.MANAGE_YOUR_DITTO}</DittoHeading>
					<CreateNewDitto onClick={() => handleCreateNewDitto()}>{dataLocale.CREATE_NEW_DITTO}</CreateNewDitto>
				</DittoHeadingWrapper>
				<DittoProfilesSelect>
					<DittoProfilesSelectyInfo>{dataLocale.OR_SELECT_FROM_EXISTING_DITTO}</DittoProfilesSelectyInfo>
					<HorizontalLine />
				</DittoProfilesSelect>
				<DittoProfileList>
					{
						dittoPrfileData && dittoPrfileData.map((item:any, index:number) => {
							return (
								<DittoProfileListItem key={`dittoImage${index}`}>
									<DittoImage src={item.image} alt={`dittoImage${index}`}></DittoImage>
									<DittoSubHeading>
										<Edit onClick={() => handleEditName(item.dittoID)}></Edit>
										{item.nickname ? item.nickname : `${dataLocale.HEY_SPECSY}#${index + 1}`}
										{saveNameId === item.dittoID && (
											<DittoSaveNameBox>
												<Cross onClick={() => cancelName()}></Cross>
												<Input
													value={inputName}
													defaultValue={item.nickname ? item.nickname : "" }
													name={`saveName${index}`}
													type="text"
													onChange={(e) => setInputName(e.target.value)}
												/>
												<Check onClick={() => handleSaveDittoName()}></Check>
											</DittoSaveNameBox>
										)}
										<DittoProfileListItemCreated>{new Date(item.created).toString().slice(0, 15)}</DittoProfileListItemCreated>
									</DittoSubHeading>
									<DittoProfileListItemNav className="dittoProfiles_list_item_nav">
										{defaultDittoId !== item.dittoID && <DittoSetDefault onClick={() => setDefaultDittoId(item.dittoID)}>Set Default</DittoSetDefault>}
										<DittoDelete onClick={() => deleteDittoId(item.dittoID, dittoPrfileData.length)}>Delete</DittoDelete>
									</DittoProfileListItemNav>
								</DittoProfileListItem>
							);
						})
					}
				</DittoProfileList>
			</DittoProfiles>
		</DittoWrapper>
	);
};

export default MyDitto;