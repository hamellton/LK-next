import React, { useEffect } from "react";
import { useState } from "react";
import * as Icons from "../../../../Icons/index";
import { ThemeENUM, TypographyENUM } from "../../../../Types/general";
import PrimaryButton from "../../../Common/PrimaryButton";
import { ManageNotificationTypes } from "./ManageNotificatio.types";
import ManageNotificationType from "./ManageNotificationType";
import { NotificationWrapper, ButtonWrapper, Heading } from "./styles";
import HeaderMobile from "./HeaderMobile/HeaderMobile";
import InfoPopMobile from "../../MyOrderMobile/InfoPopMobile/InfoPopMobile.component";

const ManageNotification = ({ dataLocale, onSaveNotification, notificationData, mobileView, redirectToHome, isRTL }: ManageNotificationTypes) => {
	const { MANAGE_NOTIFICATIONS, WHATSAPP_NOTIFICATION, SMS_NOTIFICATION, EMAIL_NOTIFICATION, PUSH_NOTIFICATION } = dataLocale;
	const [btnDisabled, setBtnDisabled] = useState(true);
	const [isOpen, setIsOpen] = useState(false);
	const [notification, setNotification] = useState({
		whatsapp: notificationData.whatsapp,
		sms: notificationData.sms,
		pushNotification: notificationData.pushNotification,
		email: notificationData.email
	});
	useEffect(() => {
		setNotification({
			whatsapp: notificationData.whatsapp,
			sms: notificationData.sms,
			pushNotification: notificationData.pushNotification,
			email: notificationData.email
		});
	}, [notificationData]);
	const onToggleWhatsapp = () => {
		setNotification({ ...notification, whatsapp: !notification.whatsapp });
		setBtnDisabled(false);
	};
	const onToggleSMS = () => {
		setNotification({ ...notification, sms: !notification.sms });
		setBtnDisabled(false);
	};
	const onToggleEmail = () => {
		setNotification({ ...notification, email: !notification.email });
		setBtnDisabled(false);
	};
	const onTogglePush = () => {
		setNotification({ ...notification, pushNotification: !notification.pushNotification });
		setBtnDisabled(false);
	};

	function closeHandler () {
		if(isOpen) setIsOpen(false);
	}

	const onBtnClick = () => {
		onSaveNotification({ ...notification });
		setBtnDisabled(true);
		if(mobileView) setIsOpen(true);
	};


	return (<NotificationWrapper mobileView={mobileView}>
		{ mobileView ? <HeaderMobile isRTL={isRTL} dataLocale={dataLocale} redirectToHome={redirectToHome}/> : <Heading>{MANAGE_NOTIFICATIONS}</Heading>}
		<ManageNotificationType mobileView={mobileView} notificationText={WHATSAPP_NOTIFICATION} image={<Icons.WhatsappNotification />} clickedOnToggle={onToggleWhatsapp} checked={notification.whatsapp} />
		<ManageNotificationType mobileView={mobileView} notificationText={SMS_NOTIFICATION} image={<Icons.SmsNotification />} clickedOnToggle={onToggleSMS} checked={notification.sms} />
		<ManageNotificationType mobileView={mobileView} notificationText={PUSH_NOTIFICATION} image={<Icons.PushNotification />} clickedOnToggle={onTogglePush} checked={notification.pushNotification} />
		<ManageNotificationType mobileView={mobileView} notificationText={EMAIL_NOTIFICATION} image={<Icons.EmailNotification />} clickedOnToggle={onToggleEmail} checked={notification.email} />
		<ButtonWrapper mobileView={mobileView}>
			<PrimaryButton mobileView={mobileView} color={mobileView ? "#ffffff" : "#fff"} backgroundColor={mobileView ? "#00b9c6" : "#5fb1a9"} borderColor={"#5fb1a9"} disabled={btnDisabled} primaryText="SAVE" onBtnClick={onBtnClick} id={"primary-button"} width={"20%"} height="46px" theme={ThemeENUM.primary} font={TypographyENUM.defaultBook}></PrimaryButton>
		</ButtonWrapper>
		{mobileView && <InfoPopMobile isOpen={isOpen} text="Your preferences saved successfully" closeHandler={closeHandler} />}
	</NotificationWrapper>);
};

export default ManageNotification;
