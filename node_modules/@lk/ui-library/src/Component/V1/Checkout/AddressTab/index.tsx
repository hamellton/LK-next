import React, { Fragment, useState } from "react";
import { AddressBox, AddressButton, AddressData, AddressHead, AddressRow, ButtonGroup, Checkbox, ConfirmationText, ConfirmBtnRow, DeletePopupContainer, DeliveryEstimate, DottedRow, PopupCancelBtn, PopupDeleteBtn, AddressFirstSection, ConfirmationHeader } from "./styles";
import { AddressTabTypes } from "./AddressTab.types";
import { ThemeENUM, TypographyENUM } from "../../../../Types/general";
// import * as Icons from "../../../../Icons/index";
import { InvisibleButton, Icon } from "../AddAddressForm/AddAddressForm.styles";
import { SubmitType } from "../AddAddressForm/AddAddressForm.types";
import Popup from "./Popup";
import SvgAddressHome from "../../../../Icons/AddressHome";
import SvgAddressOthers from "../../../../Icons/AddressOthers";
import SvgAddressWork from "../../../../Icons/AddressWork";
// import { PopUpConfirm } from "../../Cart/CartCard/styles";

/**
 * Default AddressTab Component
 */
const AddressTab = ({
	id,
	addressline1,
	addressline2,
	city,
	country,
	firstName,
	landmark,
	lastName,
	phone,
	postcode,
	state,
	checked,
	onChange,
	onEdit,
	// onAdd,
	onDelete,
	email,
	onSubmit,
	font,
	deliveryEstimate,
	addressLabel,
	submitRef,
	phoneCode,
	gender,
	dataLocale
}: AddressTabTypes) => {
	const selectHandler = () => {
		console.log("Submitting.....");
		onSubmit(SubmitType.read, id, { firstName: firstName, lastName: lastName, phone: phone,email: email, addressline1: addressline1, addressline2: addressline2, postcode: postcode || "000000", city: city, state: state, country: country, id: id, addressLabel: addressLabel, landmark, phoneCode, gender });
	};
	const [showDeletePopup, setShowDeletePopup] = useState(false);

	function deleteAddress(){
		onDelete(id);
		setShowDeletePopup(false);
	}

	return (
		<>
			<AddressBox selected={checked} id={id} styledFont={font} onClick={(e) => {
				e.stopPropagation();
				onChange(id);}
			}>
				<AddressRow>
					<AddressFirstSection>
						{addressLabel && addressLabel.toLowerCase() === "home" && <Icon><SvgAddressHome /></Icon>}
						{addressLabel && addressLabel.toLowerCase() === "work" && <Icon><SvgAddressWork /></Icon>}
						{addressLabel && addressLabel.toLowerCase() !== "home" && addressLabel.toLowerCase() !== "work" && <Icon><SvgAddressOthers /></Icon>}
						<AddressHead font={TypographyENUM.lkSansRegular}>{addressLabel || ""}</AddressHead>
					</AddressFirstSection>
					<Checkbox isActive={checked} />
				</AddressRow>
				<AddressRow>
					<AddressData font={TypographyENUM.lkSansRegular}>{addressline1}{addressline1 ? "," : ""} {addressline2}{addressline2 ? "," : ""} {landmark}{landmark ? ",": ""} {city}{city ? "," : ""} {state}{state ? "," : ""} {country.toLowerCase() !== "sa" ? postcode + "," : ""} {country}{country ? "," : ""} {phone}</AddressData>
					<ButtonGroup id="button-group">
						{/* <AddressButton onClick={() => onDelete(id)}><Icons.TrashFilled /></AddressButton> */}
						<AddressButton theme={ThemeENUM.primary} font={TypographyENUM.lkSansRegular} onClick={() => {
							setShowDeletePopup(true);
						}}>{dataLocale?.DELETE}</AddressButton>
						<AddressButton theme={ThemeENUM.primary} font={TypographyENUM.lkSansRegular} onClick={() => onEdit(id)}>{dataLocale?.EDIT}</AddressButton>
					</ButtonGroup>
				</AddressRow>
				{checked && deliveryEstimate && <Fragment>
					<DottedRow />
					<DeliveryEstimate font={TypographyENUM.lkSansRegular}>{deliveryEstimate}</DeliveryEstimate>
				</Fragment>}
				<InvisibleButton btnVisible={false} onClick={selectHandler} ref={submitRef}></InvisibleButton>
				{/* <PopUpConfirm></PopUpConfirm> */}
				{showDeletePopup && <Popup>
					<DeletePopupContainer>
						<ConfirmationHeader>{dataLocale?.DELETE_ADDRESS_QUESTION_MARK}</ConfirmationHeader>
						<ConfirmationText>{dataLocale?.ARE_YOU_SURE_YOU_WANT_TO_DELETE_ADDRESS}</ConfirmationText>
						<ConfirmBtnRow>
							<PopupDeleteBtn onClick={() => deleteAddress()}>{dataLocale?.DELETE}</PopupDeleteBtn>
							<PopupCancelBtn onClick={() => setShowDeletePopup(false)}>{dataLocale?.CANCEL}</PopupCancelBtn>
						</ConfirmBtnRow>
					</DeletePopupContainer>
				</Popup>}
			</AddressBox>
		</>
	);
};
export { AddressTab, Popup };
