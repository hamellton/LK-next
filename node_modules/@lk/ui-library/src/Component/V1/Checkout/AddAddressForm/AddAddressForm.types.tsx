import React from "react";
import { JSON, TypographyENUM } from "../../../../Types/general";
import { DataType } from "../../Header/Header.types";
import { addressLabelENUM } from "./shortAddress/hooks/useAddressData";

export enum SubmitType {
	add = "ADD",
	edit = "EDIT",
	read = "READ"
}
export interface AddressType {
	firstName: string,
	lastName: string,
	phone: string,
	email: string,
	addressline1: string,
	addressline2: string,
	postcode: string,
	city: string,
	country: string,
	state: string,
	id?: string,
	phoneCode?: string,
	addressLabel: string,
	landmark: string | null,
	gender: string | null,
}
export interface AddressFormType{
	addressForm?: any;
	id:string;
	hasFrameProduct?:boolean;
	countryCode: string;
	dataLocale:ConfigDataType;
	initialAddressData: DataType | null,
	errorMessages?:string;
	onSubmit: (type: SubmitType, id: string | null, props: AddressType) => void;
	phoneCode: string;
	// onViewSaved: () => void;
	// onPincodeChanged: (props: string) => void;
	// landmark: string | null,
	font:TypographyENUM;
	isReturnExchange: boolean,
	userEmail: string,
	userNumber: string | null,
	getPincodeData: (pin: string) => Promise<DataType | undefined>,
	countryList: {options: Array<any>, optionValue: string, optionsText: string};
	stateList: {options: Array<any>, optionValue: string, optionsText: string}
	addAddressBtn: boolean
	btnVisible: boolean
	submitRef: React.Ref<HTMLButtonElement>,
	disableAction?: (val: boolean) => void,
	isRTL?: boolean,
	swatchOptions: {icon: React.ReactNode, text: addressLabelENUM}[],
	addressLabelTag: addressLabelENUM,
	onAddressLabelChange: (label: string) => void,
	tempAddressData: DataType | null,
	updateTempAddressData: (data: DataType) => void,
	configData: JSON,
	onCancel: () => void,
	currCountry?: string
	phoneCodeConfigData?: {availableCountries: {country: string, code: string}[]}
	deviceType?: string
	incCountryCodeFont?: boolean
	InfoText?:string
}

export interface ConfigDataType {
	[name: string]: string
}

export enum FieldType {
  INPUT = "input",
  DROPDOWN = "dropdown",
}
