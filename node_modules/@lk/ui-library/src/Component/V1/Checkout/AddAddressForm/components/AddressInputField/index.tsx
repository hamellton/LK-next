import React, { useEffect, useState } from "react";
// import { TypographyENUM } from "../../../Types/general";
import { TypographyENUM } from "../../../../../../Types/general";
import { Box, FieldContainer, Label, SubTextSpan } from "./styles";

interface AddressInputFieldType {
	font?: TypographyENUM,
	children?: React.ReactNode,
	label?: string,
	subText?: string,
	isError?: boolean,
	isFullWidth?: boolean,
	line?: number,
	errorMessage?: string,
	focused?: boolean
}

const AddressInputField = ({ font = TypographyENUM.lkSansMedium, children, label = "", isFullWidth = false, line = 1, errorMessage = "", focused }: AddressInputFieldType) => {
	const [isFocused, setIsFocused] = useState(false);
	useEffect(() => {
		if(!isFocused) {
			setIsFocused(!!focused);
		}
	}, [focused]);

	return (
		<Box font={font}>
			{label && <Label>{label}</Label>}
			<FieldContainer fullWidth={isFullWidth} line={line} data-focused={(!!isFocused).toString()}>
				{children || null}
			</FieldContainer>
			{/* <SubText isError={isError}>{subText}</SubText> */}
			{errorMessage && <SubTextSpan>{errorMessage}</SubTextSpan>}
		</Box>
	);
};

export default AddressInputField;
