import React, { useState } from "react";
import styled from "styled-components";
import { DownArrow } from "../../../../../Icons";
import { TypographyENUM } from "../../../../../Types/general";
import { CardImage } from "../CardImage";
// import Radio from "../Radio";

// const BankListContainer = styled.div`

// `;
const CardContainer = styled.div<{ bankoffer?: boolean, dottedBtmBorder?: boolean, dottedTopBorder?: boolean; isOpen?: boolean; }>`
    display: flex;
    align-items: ${props => (props.bankoffer || props.isOpen) ? "flex-start" : "center"};
    justify-content: space-between;
    padding: 16px 0;
    flex-direction: ${props => (props.bankoffer || props.isOpen) ? "column" : "row"};
    gap: 16px;
    border-radius: 0;
    /* border-top-left-radius: 12px;
    border-top-right-radius: 12px;
    border-bottom-right-radius: 12px; */
	cursor: pointer;
	transition: 0.3s;
	&:hover {
		// transform: scale3d(1.05, 1.05, 1.05);
		box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);
		padding-left:10px;
		padding-right:10px;
	}
    /* border-bottom-left-radius: 12px; */
    ${props => props.dottedTopBorder && `
      border-top: 1px dashed #d3d3d3;
    `}
    ${props => props.dottedBtmBorder && `
      border-bottom: 1px dashed #d3d3d3;
    `}
    background: transparent;
    overflow-x: hidden;
`;
const Flex = styled.div<{justify?: string}>`
  display: flex;
  align-items: center;
  ${props => props.justify && `
	justify-content: ${props.justify};
  `}
`;
const BankFormContainer = styled.div<{isOpen?: boolean}>`
    padding-left: 102px;
	& .netCartImg{
		margin-left:0px;
		margin-right: 10px;
	}
    ${props => !props.isOpen && `
        display: none;
    `}
`;
const BankForm = styled.div`
    display: flex;
    flex-direction: column;
    width: 444px;
    @media (max-width: 1160px){
      width: 360px;
    }
`;
const CardHeading = styled.h3<{ isMain?: boolean }>`
    font-family: ${props => props.isMain ? TypographyENUM.lkSansBold : TypographyENUM.lkSansRegular};
    font-style: normal;
    font-size: 14px;
    display: block;
    letter-spacing: -0.02em;
    color: var(--text);
    flex: none;
    ${props => props.isMain ? `
      line-height: 38px;
    ` : `
    line-height: 20px;
    `}
    order: 0;
    align-self: stretch;
    flex-grow: 0;
`;
const ShowMore = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  height: 40px;
  margin-bottom: 16px;
  cursor: pointer;
`;
const ShowMoreText = styled.span`
  margin-right: 8px;
  color: var(--dark-blue-100);
  letter-spacing: -0.02em;
  // font-family: 'Lenskart Sans';
  font-style: normal;
  // font-weight: 700;
  // font-size: 12px;
  line-height: 18px;
`;
const ArrowContainer = styled.div<{reverse: boolean, horizontal?: boolean, isRTL: boolean}>`
    ${props => props.horizontal ? `
		transform: ${props.isRTL ? "rotate(90deg)" : "rotate(-90deg)"};
	` : `
		transform: rotate(${props.reverse ? "180deg" : "0deg"});
	`}
  /*  */
`;
const NetBanking = ({ isOpen, banksList, onSubmit, isRTL=false }: {isOpen: boolean, banksList: {[name: string]: any}[], onSubmit: (bankCode: string) => void, isRTL?: boolean}) => {
	// const [openedBank, setOpenedBank] = useState("");
	const [showAllBanks, setShowAllBanks] = useState(false);

	return (
		<BankFormContainer isOpen={isOpen}>
			<BankForm>
				{banksList.slice(0, showAllBanks ? banksList.length : 4).map((bnk, i) => <CardContainer key={bnk.head} dottedBtmBorder={i !== (banksList.length - 1)} dottedTopBorder={i !== 0} isOpen={bnk.isChildrenVisible} onClick={() => onSubmit(bnk.bankcode)}>
					<Flex>
						{/* <Radio isSelected={openedBank === bnk.bankcode} onClick={() => {setOpenedBank(bnk.bankcode); onSubmit(bnk.bankcode);}} /> */}
						<CardImage src={bnk.logoImageUrl || "https://static5.lenskart.com/images/cust_mailer/Apr-06/placeholder_nb.png"} alt="" isSelected={bnk.isChildrenVisible} />
						<CardHeading isMain>{bnk.name}</CardHeading>
					</Flex>
					<ArrowContainer horizontal reverse={showAllBanks} isRTL={isRTL}><DownArrow /></ArrowContainer>
				</CardContainer>)}
				<ShowMore onClick={() => setShowAllBanks(s => !s)}><ShowMoreText>{showAllBanks ? "Show Less" : "Show More"}</ShowMoreText> <ArrowContainer isRTL={isRTL} reverse={showAllBanks}><DownArrow /></ArrowContainer></ShowMore>
				{/* <button >{showAllBanks ? "Show less" : "Show more"}</button> */}
			</BankForm>
		</BankFormContainer>
	);
};

export default NetBanking;
