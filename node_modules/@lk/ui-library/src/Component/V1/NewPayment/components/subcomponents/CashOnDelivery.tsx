import React, { Fragment, useEffect, useState } from "react";
import styled, { css } from "styled-components";
import { Check, Refresh } from "../../../../../Icons";
import { TypographyENUM } from "../../../../../Types/general";
import { InfoBox, InfoCircle, InfoText } from "./StoreCreditForm";
// import CardImage from "../CardImage";
// import { InputFieldContainer } from "../InputFieldContainer";
// import { TextField } from "../TextField";

const BankFormContainer = styled.div<{isOpen?: boolean, aeDesigns?: boolean}>`
    ${props => !props.isOpen && `
        display: none;
    `}
		width: 100%;
`;
const BankForm = styled.div<{aeDesigns?: boolean}>`
    display: flex;
    flex-direction: column;
    ${props => props.aeDesigns ? "" : "width: 444px;"};

		${props => props.aeDesigns && css`
		float: right;
    width: 60%;
		`}
`;
const PayNowBtn = styled.button<{font: TypographyENUM}>`
	padding: 12px 20px;
	width: 100%;
	height: 48px;
	border-radius: 100px;
	background: #11DAAC;
	color: #000042;
	cursor: pointer;
	font-family: ${props => props.font};
	font-style: normal;
	font-weight: 700;
	font-size: 16px;
	line-height: 24px;
	display: flex;
	align-items: center;
	justify-content: center;
	letter-spacing: -0.02em;
	outline: none;
	border: none;
	&:disabled,
	&[disabled] {
		color: #9999B3;
		background: #DBDBEA;
	}
	span {
		display: inline-block;
		margin-right: 10px;
	}
`;
const Flex = styled.div`
	display: flex;
	/* justify-content: space-between; */
	margin-bottom: 20px;
	align-items: center;
`;
const CaptchaImage = styled.img`
	width: 202px;
	height: 72px;

/* background: url(Unknown.png), #FFFFFF; */
/* Secondary/Medium */

	border: 1px solid #737397;
	border-radius: 12px;
	/* padding: 16px; */
	/* gap: 8px; */
	/* width: 50%; */
	/* height: 56px; */
	/* background: #FFFFFF;
	border: 1px solid #CECEDF; */
	box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);
	/* border-radius: 12px; */
`;
const RefreshCaptcha = styled.button`
	font-family: ${TypographyENUM.lkSansBold};
	font-style: normal;
	font-weight: 700;
	font-size: 12px;
	line-height: 18px;
	display: flex;
	align-items: center;
	letter-spacing: -0.02em;
	color: #000042;
	cursor: pointer;
	border: none;
    outline: none;
    background: transparent;
    padding: 0 35px 0 35px;
	direction: initial;
`;
const InputField = styled.input`
	padding: 16px;
	gap: 8px;
	width: 100%;
	height: 56px;
	background: #FFFFFF;
	border: 1px solid #CECEDF;
	box-shadow: 0px 1px 2px rgba(16, 24, 40, 0.05);
	border-radius: 12px;

	font-family: ${TypographyENUM.lkSansRegular};
	font-style: normal;
	font-weight: 400;
	font-size: 16px;
	line-height: 24px;
	letter-spacing: -0.02em;
	color: #66668E;

	margin-bottom: 20px;
	user-select: initial;
	&::before, &::after {
    	user-select: initial;
	}
`;
const CashOnDelivery = ({ isOpen, onSubmit, isCaptchaEnabled, captchaImageUrl, captchaValue, loadCaptcha, aeDesigns=false }: {isOpen: boolean, onSubmit: (e: any) => void, isCaptchaEnabled?: boolean, captchaImageUrl?: string, captchaValue?: string, loadCaptcha?: () => void, aeDesigns?: boolean}) => {
	const [userCaptcha, setUserCaptcha] = useState("");
	const [error, setError] = useState(false);
	useEffect(() => {
		if(typeof loadCaptcha === "function" && isOpen && isCaptchaEnabled) loadCaptcha();
	}, [isOpen, loadCaptcha, isCaptchaEnabled]);
	const submitHandler = (e: any) => {
		if(!isCaptchaEnabled || (userCaptcha === captchaValue)) {
			setError(false);
			onSubmit(e);
		}
		else setError(true);
	};

	return (
		<BankFormContainer isOpen={isOpen} aeDesigns={aeDesigns}>
			<BankForm aeDesigns = {aeDesigns}>
				{/* <Flex>
					<InputFieldContainer isFullWidth={true} isError={false} isBoundary={true} width="241px">
						<TextField value={validThru} type={TextTypeENUM.number} maxLength={7} onChange={(e) => setValidThru(e.target.value)} placeholder="Valid Thru (MM/YY)" onKeyUpChange={() => null}
							onKeyPress={event => {
								const valLength = event.target.value.length;
								if (valLength === 2) {
									event.target.value += "/";
								}
							}}
						/>
					</InputFieldContainer>
					<InputFieldContainer isFullWidth={true} isError={false} isBoundary={true} width="171px">
						<TextField value={cvv} type={TextTypeENUM.number} onChange={(e) => setCvv(e.target.value)} placeholder="CVV" onKeyUpChange={() => null} showInfo />
					</InputFieldContainer>
				</Flex>
				<InputFieldContainer isFullWidth={true} isError={false} isBoundary={true}>
					<TextField value={cardNumber} type={TextTypeENUM.number} onChange={(e) => setCardNumber(e.target.value)} placeholder="Card Number" onKeyUpChange={() => null} showInfo>
						<CardImage src="https://w7.pngwing.com/pngs/924/607/png-transparent-mastercard-credit-card-business-debit-card-logo-mastercard-text-service-orange.png" alt="" isSelected={false} leftMargin={false} rightMargin={false} />
					</TextField>
				</InputFieldContainer> */}
				{isCaptchaEnabled && captchaImageUrl && captchaValue && <Fragment>
					<Flex>
						<CaptchaImage src={captchaImageUrl} />
						<RefreshCaptcha onClick={loadCaptcha}><Refresh style={{ marginRight: "6px" }}/> Change Image</RefreshCaptcha>
					</Flex>
					<InputField value={userCaptcha} onChange={e => setUserCaptcha(e.target.value)} placeholder="Enter code shown in above image*" maxLength={10} />
				</Fragment>}
				{error && <InfoBox isError={error}>
					<InfoCircle>{error ? "i" : <Check />}</InfoCircle>
					<InfoText isError={error}>Invalid Captcha</InfoText>
				</InfoBox>}
				<PayNowBtn
					id="submit-saved-card-form-button"
					font={TypographyENUM.lkSansBold} //onDecreaseItem(item.id)
					// disabled={isCaptchaEnabled && userCaptcha !== captchaValue}
					onClick={submitHandler}
				>
					<span>Place Order & Pay on delivery</span>
				</PayNowBtn>
			</BankForm>
		</BankFormContainer>
	);
};

export default CashOnDelivery;
