import React, { useState } from "react";
import * as Icons from "../../../../Icons";
import { NeedHelp } from "../../PrescriptionModal/NeedHelp/NeedHelp.component";
import { DataType, DeviceTypes } from "../../../../Types/general";
import DeleteItem from "../DeleteItem";
import { A, Body, BodyCover, CardRoot, CareRoot, ErrorHead, ErrorSign, ErrorText, Field, Helper, HelperRow, Icon, Img, ImgCard, ImgContain, ImgContainer, ImgSavedBox, ImgText, Input, LowerContainer, LowerRoot, MobileHeadContainer, PdContent, PdDiv, PdInfoWrapper, PdMessage, PdUpdateText, Root, RootHeader, Step, UploadBox, UploadText, UpperRoot } from "./EnterPd.styles";

interface EnterPdTypes {
    localeData: DataType;
    deviceType: string;
    selected: string;
    handleClick: (props: string) => void;
    PdError: {
        leftPd: string,
        rightPd: string,
    }
    handlePD: (value: number, side: string) => void;
    setOpenBottomSheet: (props: boolean) => void
    imageUrl: string;
    PdValues: {
        leftPd: any;
        rightPd: any;
    }
	postNeedHelpWhatsappFun: () => void;
	configData: DataType;
	item: any;
	removeImage: () => void
	isRTL?:boolean
}

const EnterPd = ({ localeData, deviceType, selected, handleClick, PdError, handlePD, setOpenBottomSheet, imageUrl, PdValues, postNeedHelpWhatsappFun, configData, item, removeImage, isRTL=false }: EnterPdTypes) => {
	
	const [showDeleteModal, setShowDeleteModal] = useState(false);
	const [showPdInfo, setShowPdInfo] = useState(false);

	const handleOnShowPdInfo = (val: boolean) => {
		setShowPdInfo(val);
	};
	return (
		<>
			{DeviceTypes.MOBILE !== deviceType ? (
				<>
					<RootHeader isMobile={false} isRTL={isRTL}>
						{"Enter Pupilary Distance (PD value)"}
					</RootHeader>
					<Helper>
						<HelperRow>
							<A onClick={() => handleOnShowPdInfo(true)}>{localeData.WHAT_IS_PD}</A>
							
							{item?.productId ? <NeedHelp postNeedHelpWhatsappFun={postNeedHelpWhatsappFun}
								configData={configData}
								localeData={localeData}
								pId={item.productId} isRTL={isRTL}/> : null}

						</HelperRow>
						{showPdInfo && (<HelperRow>
							<PdInfoWrapper>
								<PdUpdateText>
          Your Pupillary Distance is the distance between your pupils. It helps
          us fine-tune your lenses to your eyes.
								</PdUpdateText>
								<Icon onClick={() => handleOnShowPdInfo(false)}>
									<Icons.Cross />
								</Icon>
							</PdInfoWrapper>
						</HelperRow>
						)}				
							
					</Helper>
				</>
			) : (
				<>
					<MobileHeadContainer>
						<RootHeader isMobile={false}>
							{"Enter Pupilary Distance (PD value)"}
						</RootHeader>
						<Helper>
							<A onClick={() => handleOnShowPdInfo(true)}>{localeData.WHAT_IS_PD}</A>
							{showPdInfo && (
								<PdInfoWrapper>
									<PdUpdateText>
          Your Pupillary Distance is the distance between your pupils. It helps
          us fine-tune your lenses to your eyes.
									</PdUpdateText>
									<Icon onClick={() => handleOnShowPdInfo(false)}>
										<Icons.Cross />
									</Icon>
								</PdInfoWrapper>
							)}
						</Helper>
					</MobileHeadContainer>
				</>
			)}

			<BodyCover>
				<Body isMobile={deviceType === DeviceTypes.MOBILE}>
					{showDeleteModal && <DeleteItem deviceType={deviceType} setShowDeleteModal={setShowDeleteModal} removeImage={removeImage}/>}
					<UpperRoot>
						<CardRoot
							isMobile={deviceType === DeviceTypes.MOBILE}
							selected={selected === "1"}
							onClick={() => handleClick("1")}
						>
							<span>
								<Img
									alt="upload"
									src="https://static1.lenskart.com/media/desktop/img/DesignStudioIcons/Upload.svg"
								></Img>
							</span>
							<PdContent>{localeData.MEASURE_PD}</PdContent>
						</CardRoot>
						<CardRoot
							isMobile={deviceType === DeviceTypes.MOBILE}
							selected={selected === "2"}
							onClick={() => handleClick("2")}
						>
							<span>
								<Img
									alt="edit"
									src="https://static1.lenskart.com/media/desktop/img/DesignStudioIcons/Edit.svg"
								></Img>
							</span>
							<PdContent>{localeData.ENTER_PD_VALUE_NEW}</PdContent>
						</CardRoot>
						<CardRoot
							isMobile={deviceType === DeviceTypes.MOBILE}
							selected={selected === "3"}
							onClick={() => handleClick("3")}
						>
							<span>
								<Img
									alt="question mark"
									src="https://static1.lenskart.com/media/desktop/img/DesignStudioIcons/QuestionMark.svg"
								></Img>
							</span>
							<PdContent>{localeData.DONT_KNOW_PD}</PdContent>
						</CardRoot>
					</UpperRoot>
					<Root>
						<LowerRoot isMobile={deviceType === DeviceTypes.MOBILE}>
							{selected === "1" && (
								<>
									{" "}
									<LowerContainer>
										<Step>{localeData.STEP} 1</Step>
										<ImgContainer>
											<ImgCard
												src="https://static.lenskart.com/media/Assets/Images/Card.png"
												alt="logo"
											/>
											<ImgText>{localeData.TAKE_CARD}</ImgText>
										</ImgContainer>
									</LowerContainer>
									<LowerContainer lower={!imageUrl}>
										<Step>{localeData.STEP} 2</Step>
										<ImgContainer>
											<ImgCard
												src="https://static1.lenskart.com/media/desktop/img/DesignStudioIcons/CardOnHead.jpg"
												alt="logo"
											/>
											<ImgText>{localeData.PLACE_CARD_FOREHEAD}</ImgText>
											<ImgText>{localeData.TAKE_A_PHOTO}</ImgText>
										</ImgContainer>
									</LowerContainer>

									{imageUrl && <>
										<ImgContain isMobile={deviceType === DeviceTypes.MOBILE}>
											<UploadText>{localeData.UPLOAD_IMAGE}
											</UploadText>
											<UploadBox>
												<ImgSavedBox onClick={() => setOpenBottomSheet(true)}>
													<span>{localeData.PD_UPLOADED}</span>
													<span onClick={(e) => {
														e.stopPropagation();
														setShowDeleteModal(true);
													}}>
														<Icons.Bin/>
													</span>
												</ImgSavedBox>
											</UploadBox>
										</ImgContain>
									</>}
								</>
							)}

							{selected === "2" && (
								<>
									<PdDiv>
										<Field>
											<ErrorHead isRTL={isRTL} error={PdError.leftPd ? true : false}>
												{localeData.LEFT_EYE_PD}
											</ErrorHead>
											<Input
												type="number"
												value={PdValues.leftPd}
												error={PdError.leftPd ? true : false}
												onChange={(e) =>
													handlePD(Number(e.target.value), "leftPd")
												}
											/>
											{PdError.leftPd && (
												<ErrorSign isRTL={isRTL}>
													<Img
														src="https://static1.lenskart.com/media/desktop/img/DesignStudioIcons/Error.svg"
														alt="logo"
													/>
												</ErrorSign>
											)}

											{PdError.leftPd && (
												<ErrorText>
													{localeData.VALUE_BETWEEN_20_TO_40}
												</ErrorText>
											)}
										</Field>
										<Field>
											<ErrorHead isRTL={isRTL} error={PdError.rightPd ? true : false}>
												{localeData.RIGHT_EYE_PD}
											</ErrorHead>
											<Input
												type="number"
												value={PdValues.rightPd}
												error={PdError.rightPd ? true : false}
												onChange={(e) =>
													handlePD(Number(e.target.value), "rightPd")
												}
											/>
											{PdError.rightPd && (
												<ErrorSign isRTL={isRTL}>
													<Img
														src="https://static1.lenskart.com/media/desktop/img/DesignStudioIcons/Error.svg"
														alt="logo"
													/>
												</ErrorSign>
											)}

											{PdError.rightPd && (
												<ErrorText>
													{localeData.VALUE_BETWEEN_20_TO_40}
												</ErrorText>
											)}
										</Field>
									</PdDiv>
								</>
							)}

							{selected === "3" && (
								<>
									<CareRoot>
										<Img
											src="https://static1.lenskart.com/media/desktop/img/DesignStudioIcons/CustomerCall.svg"
											alt="care"
										/>
										<PdMessage>
											{localeData.CUSTOMER_SUPPORT_MESSAGE}
										</PdMessage>
									</CareRoot>
								</>
							)}
						</LowerRoot>
					</Root>
				</Body>
			</BodyCover>
		</>
	);
};

export { EnterPd };
