import React, { useEffect, useState } from "react";
import * as Icons from "../../../../Icons/index";
import { DataType, DeviceTypes } from "../../../../Types/general";
import EnterMyPowerMenuOptionsNew from "../EnterMyPowerMenuOptionsNew";
import { Root, Header, Img, Title, Icon, Content, Border, Options } from "./DropDown.styles";

interface DropDown{
    id: string,
    title: string,
    imgSrc: string,
    selected: string,
    toggle: (props: string) => void,
    orderPlacedOption: DataType[],
    ChangePage: (props: any) => void 
    deviceType: string;
    // skipPowerOptions: any;
	showSavedPower?: boolean
	helpFunction: () => void
	isRTL?:boolean
	localeData: DataType
	powerOptions: string[]
}

const DropDown = ({
	id,
	localeData,
	title,
	imgSrc,
	selected,
	toggle,
	orderPlacedOption,
	ChangePage,
	deviceType,
	// skipPowerOptions,
	showSavedPower,
	helpFunction,
	isRTL=false,
	powerOptions
}: DropDown) => {

	const [skipCount, setSkipCount] = useState(0);

	useEffect(() => {
		orderPlacedOption.forEach((opt: any) => {
			if (!powerOptions.includes(opt.name)) setSkipCount((prev) => prev + 1);
		});
	}, []);
	
	return (
		<Root onClick={() => toggle(id)}>
			{skipCount !== orderPlacedOption.length && <><Header selected={selected === id}>
				<Img alt="green check" src={imgSrc}/>
				<Title>{title}</Title>
				<Icon selected={selected === id} isRTL={isRTL}>
					<Icons.DownArrow />
				</Icon>
			</Header>
			<Content selected={selected === id}>
				<Border selected={selected === id} />
				<Options selected={selected === id}>
					{orderPlacedOption.map((opt: any) => {
						if (!powerOptions.includes(opt.name)) return null;
						// return <div>{opt.header}</div>;
						if(deviceType === DeviceTypes.MOBILE && opt.name === "SAVED_POWER" && !showSavedPower) return null;
						if(deviceType === DeviceTypes.DESKTOP && opt.name === "STORE_VISIT") return null;
						return (
							<EnterMyPowerMenuOptionsNew
								key={opt.name}
								localeData={localeData}
								options={opt}
								ChangePage={ChangePage}
								helpFunction={helpFunction}
								isRTL={isRTL}
							/>
						);
					})}
				</Options>
			</Content> </>}
		</Root>
	);
};

export { DropDown };
