/* eslint-disable no-mixed-spaces-and-tabs */
import React, { Fragment, useEffect, useState } from "react";
import { DeviceTypes } from "../../../../Types/general";
import { Body, RootHeader, LowerBodyContainer, LowerBody, Root, Div1, Label, Div2, PowerType, PowerHeader, Input, AxisInput, PDWarning, Title, InputContainer, InputText, LabelText, ErrorSpan, OrderTitle, Contain, Helper, InputCode, Break, ErrorText, PhoneNumberText, EnterPowerManuallyWrap } from "./EnterPowerManually.styles";
import { NeedHelp } from "../../PrescriptionModal/NeedHelp/NeedHelp.component";
import { EnterPowerManuallyTypes } from "./EnterPowerManually.types";
import { getNumberLengthFromCode } from "../../../../helpers";
import { PhoneCodeDropdownWrapper } from "../../Auth/SignIn/styles";
import PhoneCodeDropdown from "../../PhonecodeDropdown";

const EnterPowerManually = ({ deviceType, localeData, orderId, checkboxHandler, samePower, fetchPowerData, power, PowerSet, cyPower, itemList, phoneNumber, setUserName, setPhoneNumber, userName, postNeedHelpWhatsappFun, configData, isRTL=false, /*powerType, */ eye, productData, preCheckout, countryCode, powerOptions, phoneCodeConfigData, supportMultipleCountries, phoneNumberText }: EnterPowerManuallyTypes) => {

	const [error, setError] = useState("");
	const [currentPhoneCode, setCurrentPhoneCode] = useState(countryCode);
	const [showCode, setShowCode] = useState(false);

	useEffect(() => {
	  if(phoneNumber.trim().length > 0 && phoneNumber.length !== getNumberLengthFromCode(countryCode)){
			setError(localeData.PLEASE_ENTER_A_VALID_MOBILE_NUMBER);
	  } else {
		  setError("");
	  }
	}, [phoneNumber]);

	const numberHelper = (event: any) => {
		const keyCode = event.which || event.keyCode;
		const char = String.fromCharCode(keyCode);
		const isDigit = /^\d$/.test(char);

		if (!isDigit) {
			event.preventDefault();
		}

	};
	return (
		<>
			<Body isMobile={DeviceTypes.MOBILE === deviceType}>
				{deviceType !== DeviceTypes.MOBILE ? (
					<>
						{" "}
						<RootHeader isMobile={false} isRTL={isRTL}>
							{localeData.ENTER_POWER_MANUALLY}
						</RootHeader>
						<Helper>
							<OrderTitle>{localeData.ORDER_NO} : {orderId}</OrderTitle>
							<NeedHelp postNeedHelpWhatsappFun={postNeedHelpWhatsappFun}
								configData={configData}
								localeData={localeData}
								pId={!preCheckout ? itemList.productId : productData?.id}
								isRTL={isRTL}/>
						</Helper>
					</>
				) : (
					<>
						<Contain>
							<RootHeader isMobile={true}>
								{localeData.ENTER_POWER_MANUALLY}
							</RootHeader>
						</Contain>
					</>
				)}

				<LowerBodyContainer>
					<LowerBody>
						{/* <Warning text="Power for this item can only be between -10.0 to -0.4" /> */}
						<Root>
							<div>
								{!preCheckout && (<Div1>
									<input
										type="checkbox"
										name="same-power"
										id="samePower"
										onChange={() => checkboxHandler("sp")}
									></input>
									<Label htmlFor="samePower">{localeData.SAME_POWER}</Label>
								</Div1>)}
								{!preCheckout && (<Div2>
									<input
										type="checkbox"
										name="cylindrical-power"
										id="cylindricalPower"
										onChange={() => checkboxHandler("cp")}
									></input>
									<Label htmlFor="cylindricalPower">
										{localeData.CYL_POWER}
									</Label>
								</Div2>)}
								<div>
									<PowerType>
										<PowerHeader align={false} isTitle>
											{localeData.POWER}
										</PowerHeader>
										{!preCheckout ? (!samePower ? (
											<>
												<PowerHeader align={true} isTitle>
													{localeData.LEFT}
												</PowerHeader>
												<PowerHeader align={true} isTitle>
													{localeData.RIGHT}
												</PowerHeader>
											</>
										) : (
											<>
												<PowerHeader align={true} isTitle></PowerHeader>
												<PowerHeader align={true} isTitle>
													{localeData.LEFT_RIGHT}
												</PowerHeader>
											</>
										)): (
											<>
												{eye === "both" && (<>
													<PowerHeader align={true} isTitle>
														{localeData.LEFT}
													</PowerHeader>
													<PowerHeader align={true} isTitle>
														{localeData.RIGHT}
													</PowerHeader>
												</>)}
												{eye === "left" && (<>
													<PowerHeader align={true} isTitle>
														{localeData.LEFT}
													</PowerHeader>
												</>)}
												{eye === "right" && (<>
													<PowerHeader align={true} isTitle>
														{localeData.RIGHT}
													</PowerHeader>
												</>)}
												{/* <>
													<PowerHeader align={true} isTitle></PowerHeader>
													<PowerHeader align={true} isTitle>
														{localeData.LEFT_RIGHT}
													</PowerHeader>
												</> */}

											</>
										)}
									</PowerType>

									<PowerType>
										{/* <PowerHeader align={false}>{"SPH"}</PowerHeader> */}
										{fetchPowerData?.result?.powerTypeList &&
                      fetchPowerData.result.powerTypeList.map(
                      	(item: any, index: number) => {
                      		const options =
                            (item.powerDataList &&
                              item.powerDataList[0] &&
                              item.powerDataList[0].value) ||
                            [];
                      		// const showPdOption =
                      		// item?.type === "pd" ? isPreFlowPd : false;
                      		// If isShowPdOption: False -> Normal case
                      		// If isShowPdOption: True -> Have to show PD tab so Will not show enter PD value option in enter manual options

                      		return (
                      			<Fragment key={index}>
                      				{item.type === "sph" && (
                      					<>
                      						<PowerHeader align={false} isTitle={false}>
                      							{"SPH"}
                      						</PowerHeader>

                      						{!samePower && !preCheckout && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<Input
                      										value={
                      											power["sph"]["left"] !== ""
                      												? power["sph"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"sph",
                      												"left",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{!samePower && !preCheckout && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<Input
                      										value={
                      											power["sph"]["right"] !== ""
                      												? power["sph"]["right"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"sph",
                      												"right",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key="Call Me/Email Me for Power"
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}


                      						{/* // precheckout flow  */}
                      						{/* // sph */}
                      						{preCheckout && (eye === "both" || eye === "left") && (
                      							<PowerHeader align={true} isTitle={false} id="power-left">
                      								<div>
                      									<Input
                      										value={
                      											power["sph"]["left"] !== ""
                      												? power["sph"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"sph",
                      												"left",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}


                      						{!samePower && preCheckout && (eye === "both" || eye === "right") && (
                      							<PowerHeader align={true} isTitle={false} id="power-right">
                      								<div>
                      									<Input
                      										value={
                      											power["sph"]["right"] !== ""
                      												? power["sph"]["right"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"sph",
                      												"right",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{/* // cyl */}
                      						{item.type === "cyl" && preCheckout && (eye === "both" || eye === "right") && (
                      							<PowerHeader align={true} isTitle={false} id="power-right">
                      								<div>
                      									<Input
                      										value={
                      											power["cyl"]["right"] !== ""
                      												? power["cyl"]["right"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"cyl",
                      												"right",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{item.type === "cyl" && preCheckout && (eye === "both" || eye === "left") && (
                      							<PowerHeader align={true} isTitle={false} id="power-left">
                      								<div>
                      									<Input
                      										value={
                      											power["cyl"]["left"] !== ""
                      												? power["cyl"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"cyl",
                      												"left",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{/* // axis  */}
                      						{item.type === "axis" && preCheckout && (eye === "both" || eye === "right") && (
                      							<PowerHeader align={true} isTitle={false} id="power-right">
                      								<div>
                      									<Input
                      										value={
                      											power["axis"]["right"] !== ""
                      												? power["axis"]["right"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"axis",
                      												"right",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{item.type === "axis" && preCheckout && (eye === "both" || eye === "left") && (
                      							<PowerHeader align={true} isTitle={false} id="power-left">
                      								<div>
                      									<Input
                      										value={
                      											power["axis"]["left"] !== ""
                      												? power["axis"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"axis",
                      												"left",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{/* // additional */}
                      						{item.type === "ap" && preCheckout && (eye === "both" || eye === "right") && (
                      							<PowerHeader align={true} isTitle={false} id="power-right">
                      								<div>
                      									<Input
                      										value={
                      											power["ap"]["right"] !== ""
                      												? power["ap"]["right"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"ap",
                      												"right",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}
                      						{item.type === "ap" && preCheckout && (eye === "both" || eye === "left") && (
                      							<PowerHeader align={true} isTitle={false} id="power-left">
                      								<div>
                      									<Input
                      										value={
                      											power["ap"]["left"] !== ""
                      												? power["ap"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"ap",
                      												"left",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{/* // *> end precheckout  */}

                      						{samePower && (
                      							<PowerHeader
                      								align={true}
                      								isTitle={false}
                      							></PowerHeader>
                      						)}

                      						{samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<Input
                      										value={
                      											power["sph"]["left"] !== ""
                      												? power["sph"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"sph",
                      												"left",
                      												e.target.value,
                      												true
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key="Call Me/Email Me for Power"
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}
                      					</>
                      				)}
                      				{item.type === "cyl" && cyPower && (
                      					<>
                      						<PowerHeader align={false} isTitle={false}>
                      							{"CYL"}
                      						</PowerHeader>

                      						{!samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<Input
                      										value={
                      											power["cyl"]["left"] !== ""
                      												? power["cyl"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"cyl",
                      												"left",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{!samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<Input
                      										value={
                      											power["cyl"]["right"] !== ""
                      												? power["cyl"]["right"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"cyl",
                      												"right",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key="Call Me/Email Me for Power"
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{samePower && (
                      							<PowerHeader
                      								align={true}
                      								isTitle={false}
                      							></PowerHeader>
                      						)}

                      						{samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<Input
                      										value={
                      											power["cyl"]["left"] !== ""
                      												? power["cyl"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"cyl",
                      												"left",
                      												e.target.value,
                      												true
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key="Call Me/Email Me for Power"
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}
                      					</>
                      				)}
                      				{item.type === "axis" && cyPower && (
                      					<>
                      						<PowerHeader align={false} isTitle={false}>
                      							{"Axis"}
                      						</PowerHeader>

                      						{!samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<AxisInput
                      										type="tel"
                      										maxLength={3}
                      										value={
                      											power["axis"]["left"] !== ""
                      												? power["axis"]["left"]
                      												: ""
                      										}
															  onKeyPress={(event: any) => {
                      											numberHelper(event);
                      										}}
                      										onChange={(e) => {
                      											if(Number(e.target.value) < 0 || Number(e.target.value) > 180) return;

                      											PowerSet(
                      												"axis",
                      												"left",
                      												e.target.value
                      											);
                      										}}
                      									/>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{!samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<AxisInput
                      										type="tel"
                      										maxLength={3}
                      										value={
                      											power["axis"]["right"] !== ""
                      												? power["axis"]["right"]
                      												: ""
                      										}
															  onKeyPress={(event: any) => {
                      											numberHelper(event);
                      										}}
                      										onChange={(e) => {
                      											if(Number(e.target.value) < 0 || Number(e.target.value) > 180) return;
                      											PowerSet(
                      												"axis",
                      												"right",
                      												e.target.value
                      											);
                      										}}
                      									/>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{samePower && (
                      							<PowerHeader
                      								align={true}
                      								isTitle={false}
                      							></PowerHeader>
                      						)}

                      						{samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<AxisInput
                      										type="tel"
                      										maxLength={3}
                      										value={
                      											power["axis"]["left"] !== ""
                      												? power["axis"]["left"]
                      												: ""
                      										}
															  onKeyPress={(event: any) => {
                      											numberHelper(event);
                      										}}
                      										onChange={(e) => {
                      											if(Number(e.target.value) < 0 || Number(e.target.value) > 180) return;
                      											PowerSet(
                      												"axis",
                      												"left",
                      												e.target.value,
                      												true
                      											);
                      										}}
                      									/>
                      								</div>
                      							</PowerHeader>
                      						)}
                      					</>
                      				)}
                      				{item.type === "ap" &&
                                itemList.prescription.powerType !==
                                  "SINGLE_VISION" && (
                      					<>
                      						<PowerHeader align={false} isTitle={false}>
                      							{"Addl. Power"}
                      						</PowerHeader>

                      						{!samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<Input
                      										value={
                      											power["ap"]["left"] !== ""
                      												? power["ap"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"ap",
                      												"left",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{!samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<Input
                      										value={
                      											power["ap"]["right"] !== ""
                      												? power["ap"]["right"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"ap",
                      												"right",
                      												e.target.value
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key="Call Me/Email Me for Power"
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}

                      						{samePower && (
                      							<PowerHeader
                      								align={true}
                      								isTitle={false}
                      							></PowerHeader>
                      						)}

                      						{samePower && (
                      							<PowerHeader align={true} isTitle={false}>
                      								<div>
                      									<Input
                      										value={
                      											power["ap"]["left"] !== ""
                      												? power["ap"]["left"]
                      												: ""
                      										}
                      										onChange={(e) => {
                      											PowerSet(
                      												"ap",
                      												"left",
                      												e.target.value,
                      												true
                      											);
                      										}}
                      										isRTL={isRTL}
                      									>
                      										<option
                      											key="Call Me/Email Me for Power"
                      											value={
                      												localeData.CALL_EMAIL_ME_FOR_POWER
                      											}
                      										>
                      											{localeData.SELECT}
                      										</option>
                      										{options.map((opt: any) => {
                      											return (
                      												<option key={opt} value={opt}>
                      													{opt}
                      												</option>
                      											);
                      										})}
                      									</Input>
                      								</div>
                      							</PowerHeader>
                      						)}
                      					</>
                      				)}
                      			</Fragment>);}
                      )}
									</PowerType>
									{!preCheckout && itemList.prescription.powerType !== "SINGLE_VISION" &&
                    cyPower && (
										<>{(powerOptions || [""]).includes("ENTER_PD") && <PDWarning>
											{localeData.PD_DISTANCE_MANDATORY}
										</PDWarning>}</>
									)}
								</div>
							</div>
						</Root>
						<EnterPowerManuallyWrap>
							<Title>{localeData.WHOSE_PRESCRIPTION_IS_THIS}</Title>
							<InputContainer>
								<InputText
									type="text"
									placeholder=" "
									onKeyPress={(event: any) => {
										const keycode = event.which;
										if (
											!(
												(keycode === 46 ||
													keycode === 8 ||
													keycode === 37 ||
													keycode === 39 ||
													keycode === 20 ||
													keycode === 32 ||
													(keycode >= 65 && keycode <= 90) ||
													(keycode >= 97 && keycode <= 122))

											)
										) {
											event.preventDefault();
										}
									}}
									onChange={(e) => setUserName(e.target.value)}
									phoneNumber={""}
								></InputText>
								<LabelText isRTL={isRTL}>{`${localeData.NAME} *`}</LabelText>
							</InputContainer>
							{!userName && <ErrorSpan>{localeData.THIS_IS_REQUIRED}</ErrorSpan>}
							<InputContainer>
								{(showCode || phoneNumber.trim()) && <InputCode isRTL={isRTL}>
									{supportMultipleCountries && phoneCodeConfigData && <PhoneCodeDropdownWrapper top="0"><PhoneCodeDropdown isMobileView={deviceType === DeviceTypes.MOBILE} width={deviceType === DeviceTypes.MOBILE ? "" : "64px"} showSvgArrow = {true} incCountryCodeFont availableCountries={phoneCodeConfigData.availableCountries} currentPhoneCode={currentPhoneCode} onChange={(newPhoneCode: string) => setCurrentPhoneCode(newPhoneCode)} /></PhoneCodeDropdownWrapper>}
									{!supportMultipleCountries && countryCode}

									{isRTL && <Break> | </Break>}
								</InputCode>}
								<InputText
									type="tel"
									pattern="[0-9]*"
									maxLength={getNumberLengthFromCode(countryCode)}
									onKeyPress={(event: any) => {
										numberHelper(event);
									}}
									placeholder=" "
									onChange={(e) => {
										!isNaN(Number(e.target.value)) && setPhoneNumber(e.target.value);
									}
									}
									phoneNumber={phoneNumber.trim() || showCode}
									value={phoneNumber.trim()}
									paddingLeft={supportMultipleCountries}
									onFocus={() => setShowCode(true)}
									onBlur={() => setShowCode(false)}
								></InputText>
								<LabelText isRTL={isRTL}>{`${localeData.PHONE_NUMBER} *`}</LabelText>
							</InputContainer>
							{error && <ErrorText>{error}</ErrorText>}
							{}
							{!phoneNumber && <ErrorSpan>{localeData.THIS_IS_REQUIRED}</ErrorSpan>}
							{phoneNumberText && <PhoneNumberText><a href={`tel:${localeData?.HELPLINE_NUMBER}`}>{phoneNumberText}</a></PhoneNumberText>}
						</EnterPowerManuallyWrap>
					</LowerBody>
				</LowerBodyContainer>
			</Body>
		</>
	);
};

export { EnterPowerManually };
