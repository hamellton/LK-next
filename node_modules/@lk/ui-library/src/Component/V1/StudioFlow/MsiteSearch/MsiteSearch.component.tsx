import React, { useEffect, useRef, useState } from "react";
import { ArrowLeft, IconRightMobile, StudioFlowSearch } from "../../../../Icons";
import SvgGrayCross from "../../../../Icons/GrayCross";
import { Store } from "../OtherStores/OtherStores.types";
import { Details, Header, HeaderWrapper, IconContainer, InputField, LeftIcon, RightIcon, SearchInputWrapper, SearchWindow, SearchWrapper, StoreDetails, StoreName, StoreRow } from "./MsiteSearch.styles";
import { MsiteSearchProps } from "./MsiteSearch.types";

function MsiteSearch({ stores, localeData, onSelect,storeAvailable }: MsiteSearchProps) {
	const [showSearch, setShowSearch] = useState(false);
	const [searchInput, setSearchInput] = useState("");
	const [storeList, setStoreList] = useState(stores);
	const inputRef = useRef<HTMLInputElement>(null);

	useEffect(() => {
		if (searchInput.trim() && stores)
			setStoreList(
				stores.filter(
					store => store.name.toLowerCase().includes(
						searchInput.trim().toLowerCase()
					)
				)
			);
		else setStoreList(stores);
	}, [stores, searchInput]);

	useEffect(() => {
		showSearch ? document.body.style.overflowY = "hidden" : document.body.style.overflowY = "auto";
		return () =>{
			document.body.style.overflowY = "auto";
		};
	}, [showSearch]);

	const onInputClick = (e: React.MouseEvent) => {
		e.stopPropagation();
		inputRef.current?.focus();
	};
  
	const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
		setSearchInput(e.target.value);
	};
  
	const onStoreSelect = (store: Store) => {
		onSelect(store);
	};

	const getHeader = () =>{
		return storeAvailable ? localeData.NEARBY_LENSKART_STORES : (localeData?.STORES || "Stores");
	};
	return (
		<SearchWrapper>
			<HeaderWrapper>
				<Header>{getHeader() as string}</Header>
				<IconContainer>
					<StudioFlowSearch
						width={32}
						height={32}
						onClick={() => setShowSearch(true)}
					/>
				</IconContainer>
			</HeaderWrapper>
			{showSearch && (
				<SearchWindow>
					<SearchInputWrapper onClick={onInputClick}>
						<LeftIcon>
							<ArrowLeft onClick={() => setShowSearch(false)} height={24} width={24} />
						</LeftIcon>
						<InputField ref={inputRef} onChange={onInputChange} value={searchInput} />
						<RightIcon onClick={() => setSearchInput("")}>
							<SvgGrayCross height={24} width={24} />
						</RightIcon>
					</SearchInputWrapper>
					{
						storeList.map(store => (
							<StoreRow key={store.code} onClick={() => onStoreSelect(store)}>
								<StoreDetails>
									<StoreName>{store.name}</StoreName>
									<Details>{store?.geoDistance ? `${store?.geoDistance} ${localeData.KM_AWAY as string} â€¢ ${localeData.HOURS as string}: ${store.openingTime} - ${store.closingTime}` : `${(localeData.CAPITALIZE_HOURS as string)}: ${store.openingTime} - ${store.closingTime}`}</Details>
								</StoreDetails>
								<IconRightMobile />
							</StoreRow>
						))
					}
				</SearchWindow>
			)}
		</SearchWrapper>
	);
}

export { MsiteSearch };