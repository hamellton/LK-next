/* eslint-disable no-mixed-spaces-and-tabs */
import React, { useEffect } from "react";
import { animated, useSpring } from "react-spring";
import SvgRadioEmpty from "../../../../Icons/RadioEmpty";
import SvgRadioFilled from "../../../../Icons/RadioFilled";
import { ActionContainer, Address, DashedLine, HiddenPart, IconContainer, Name, NameStateContainer, RadioCardWrapper, StoreActionButton, StoreDetails } from "./RadioStore.styles";
import { RadioStorePropTypes } from "./RadioStore.types";

const AnimatedRadioCardWrapper = animated(RadioCardWrapper);

function RadioStore({
	store,
	selected,
	onClick,
	resetIsSelectedStore,
	localeData
}: RadioStorePropTypes) {
	const [styles, api] = useSpring(() => ({
		background: "var(--white)",
		border: "1px solid var(--white)",
	}));

	useEffect(() => {
		if(resetIsSelectedStore) resetIsSelectedStore();
	}, []);

	useEffect(() => {
		if (selected) api({
			background: "var(--ghost-white)",
			border: "1px solid var(--dark-blue-50)",
		});
		else api({
			background: "var(--white)",
			border: "1px solid var(--white)",
		});
	}, [selected]);

	return (
		<AnimatedRadioCardWrapper
			style={{ background: styles.background, border: styles.border }}
			isSelected={selected}
			onClick={() => onClick(store)}
		>
			<NameStateContainer>
				<Name>{store.name}</Name>
				<IconContainer>
					{
						selected ?
							<SvgRadioFilled /> :
							<SvgRadioEmpty />
					}
				</IconContainer>
			</NameStateContainer>
			{!selected && <Address>{store.address}</Address>}
			<StoreDetails>
				{`${store?.geoDistance ?
					store.geoDistance + " " + localeData.KM_AWAY as string +" â€¢ "
					: ""}${localeData.CAPITALIZE_HOURS as string}: ${store.openingTime} : ${store.closingTime}`}
			</StoreDetails>

			{selected && <HiddenPart isSelected={selected}>
				<Address>{store.address}</Address>
        	<DashedLine />
        	<ActionContainer>
        		<StoreActionButton target={"_blank"} href={`tel:${store.phoneCode+store.telephone}`}>
        			{localeData.CALL_STORE as string}
        		</StoreActionButton>
        		<StoreActionButton target={"_blank"} href={`${localeData.MAPS_URL as string}${store.latitude},${store.longitude}`}>
        			{localeData.VIEW_ON_MAP as string}
        		</StoreActionButton>
        	</ActionContainer>
			</HiddenPart>}
		</AnimatedRadioCardWrapper>
	);
}

export { RadioStore };
