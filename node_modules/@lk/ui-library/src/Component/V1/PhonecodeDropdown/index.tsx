import React, { useEffect, useRef } from "react";
import { CountryCodeField, CountryCodeSelect } from "./styles";

interface PhoneDropdownType {
	availableCountries?: {code: string, country?: string}[] | null,
	currentPhoneCode?: string,
	onChange?: (val: string) => void,
	width?: string
	disabled?: boolean;
	showCountry?: boolean;
	incCountryCodeFont?: boolean;
	showSvgArrow?: boolean;
	msiteAddressPage?: boolean
	isMobileView?: boolean
}
const PhoneCodeDropdown = ({ availableCountries, currentPhoneCode, onChange, width, disabled, showCountry, incCountryCodeFont, showSvgArrow=false, msiteAddressPage=false, isMobileView=false }: PhoneDropdownType) => {
	const inputRef = useRef<HTMLInputElement>(null);

	useEffect(() => {
		const input = inputRef.current;
		if (input) {
			const placeholderWidth = calculateTextWidth(input.placeholder) + 6;
			input.style.width = `${placeholderWidth}px`;
		}
	}, []);
	
	const calculateTextWidth = (text: string | null) => {
		const span = document.createElement("span");
		span.style.fontSize = "14px";
		span.style.visibility = "hidden";
		span.style.position = "absolute";
		span.style.whiteSpace = "nowrap";
		span.textContent = text;
		document.body.appendChild(span);
		const width = span.offsetWidth;
		document.body.removeChild(span);
		return width;
	};
	
	return (
		<>
			{availableCountries && availableCountries?.length > 0 ? (
				<>
					<CountryCodeSelect
						id="selectDropDown"
						name="countryCodes"
						value={currentPhoneCode}
						onChange={e => onChange && onChange(e.target.value)}
						width={width || "55px"}
						disabled={disabled}
						incCountryCodeFont = {incCountryCodeFont}
						showSvgArrow={showSvgArrow}
						msiteAddressPage={msiteAddressPage}
						isMobileView={isMobileView}
					>
						{availableCountries?.map(cc => (
							<option key={cc.code} value={cc.code}>
								{cc.code}
								{showCountry && " " + cc?.country}
							</option>
						))}
					</CountryCodeSelect>
					{/* <DownArrow
						onClick={() => handleDropDown()}
					/> */}
				</>
			) : (
				<CountryCodeField
					width={width || "40px"}
					disabled
					name="countryCodes"
					ref={inputRef}
					placeholder={currentPhoneCode || "+91"}
					title={currentPhoneCode || "+91"}
					type="tel"
					value={currentPhoneCode || "+91"}
				/>
			)}
		</>
	);
};

export default PhoneCodeDropdown;
