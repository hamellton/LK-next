import React from "react";
import {
	BrandName,
	ClearButton,
	ClearButtonContainer,
	CloseWrapper,
	CrossIcon,
	Header,
	HeaderText,
	ItemContainer,
	ItemImgContainer,
	ItemPrice,
	NoProductsInfo,
	OutOfStockContainer,
	ProductContainer,
	ProductDetailsContainer,
	ProductImg,
	ProductsContainer,
	WishlistWrapper
} from "./styles";
import { WishlistProps } from "./Wishlist.types";

export default function Wishlist(props: WishlistProps) {
	const { show, setShow, productList, dataLocale, deleteProductFromWishlist, clearWishlist, isRTL,isLoading } = props;
	const { PRODUCTS, YOU_HAVE_NOT_SELECTED_ANY_PRODUCT, PLEASE_ADD_PRODUCTS_OF_YOUR_CHOICE, CLEAR_LIST } = dataLocale;

	return (
		<WishlistWrapper show={show && !isLoading} id="wishlistView">
			<Header className={`header ${show}`} onClick={() => setShow(false)}>
				<HeaderText >
					{PRODUCTS} <span>({productList.length || "0"})</span>
				</HeaderText>
				<CloseWrapper >X</CloseWrapper>
			</Header>
			{productList?.length === 0 && (
				<div>
					<NoProductsInfo>
						{YOU_HAVE_NOT_SELECTED_ANY_PRODUCT} <br></br> {PLEASE_ADD_PRODUCTS_OF_YOUR_CHOICE}
					</NoProductsInfo>
				</div>
			)}
			<ProductsContainer>
				{productList?.length > 0 && productList.map((product, index) => (
					<div key={index + 1}>
						{index <= 49 && (
							<ItemContainer isRTL={isRTL}>
								<CrossIcon className="cross-icon" onClick={() => deleteProductFromWishlist(product.id)}>
									<span>&times;</span>
								</CrossIcon>
								<ProductContainer
									href={product.productUrl}
									rel="noreferrer"
									target="_blank"
									title={product.brandName}
								>
									<ItemImgContainer>
										<ProductImg src={product?.productImageUrl} alt="" height={48} width={48} />
									</ItemImgContainer>
									<ProductDetailsContainer>
										<BrandName>
											{product.brandName}
										</BrandName>
										{product?.prices && (
											<ItemPrice>
												{product?.prices?.symbol} {product?.prices?.lkPrice}
											</ItemPrice>
										)}
									</ProductDetailsContainer>
									{product.productUrl === undefined && <OutOfStockContainer>Out of Stock</OutOfStockContainer>}
								</ProductContainer>
							</ItemContainer>
						)}
					</div>
				))}
			</ProductsContainer>
			{!!productList.length && <ClearButtonContainer>
				<ClearButton onClick={clearWishlist}>
					{CLEAR_LIST}
				</ClearButton>
			</ClearButtonContainer>}
		</WishlistWrapper>
	);
}
