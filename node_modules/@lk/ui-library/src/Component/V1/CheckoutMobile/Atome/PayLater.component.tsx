import React, { useEffect, useState } from "react";
import { JSON, TypographyENUM } from "../../../../Types/general";
import BottomSheet from "../../../Common/BottomSheet/BottomSheet.component";
import Button from "../../Button";
import { Radio } from "../../NewPayment/components/Radio";
import { RadioTabWrapper, Name, PayLaterWrapper, ModalHeader, ModalContent, ModalText, NameContainer, OfferText } from "./PayLater.styles";
import { AtomePropsType } from "./PayLater.types";

// eslint-disable-next-line @typescript-eslint/no-unused-vars
function PayLater({ localeData, groupData, isSelected, onClick, renderPrimerUI, isContactLensConsentEnabled, setPayLaterSelected, payLaterBottomsheetHandler, orderCreatedSuccess = false, setRedirect, currencyCode,
	totalAmount,setSectedPrimerCreditCard }: AtomePropsType) {
	const [showBottomsheet, setShowBottomsheet] = useState(false);
	const [selectedMethod, setSelectedMethod] = useState<any>(null);

	useEffect(() => {
		if (isSelected) {
			setPayLaterSelected(true);
			(groupData?.methods)?.map((methodData: JSON) => {
				if (methodData.key === isSelected) {
					renderPrimerUI(methodData.key);
					setSelectedMethod(methodData);
				}
				return methodData;
			});
		}else{
			setPayLaterSelected(false);
		}
	}, [isSelected]);

	const closeBottomsheet = () => {
		setShowBottomsheet(false);
		setRedirect(true);
	};


	useEffect(() => {
		if (orderCreatedSuccess && selectedMethod) {
			if (window.navigator.userAgent.includes("Mac OS")) {
				setShowBottomsheet(true);
			} else {
				payLaterBottomsheetHandler();
			}
		}
	}, [orderCreatedSuccess, isSelected]);

	return (
		<>
			<PayLaterWrapper>
				{groupData.methods.map((methodData: JSON) => (
					<button
						key={methodData.key as string + methodData.label as string}
						style={{ display: "none" }}
						className="submit-button"
						id={`submit-button-${methodData.key}`}
					/>
				))}
				{
					groupData?.methods?.map((methodData: JSON) => (
						<RadioTabWrapper key={methodData.key as string} onClick={() => {
							onClick(methodData.key as string);
							setSectedPrimerCreditCard(false);
							// setShowBottomsheet(true);
						}}>
							<Radio isSelected={isSelected === methodData.key} onClick={() => null} />
							<NameContainer>
								<Name>{ methodData.label as string }</Name>
								{Boolean(methodData.offerText) && <OfferText>{methodData.offerText as string}</OfferText>}
							</NameContainer>
						</RadioTabWrapper>
					))
				}
			</PayLaterWrapper>
			<BottomSheet
				show={showBottomsheet}
				closebottomSheet={closeBottomsheet}
				onBackdropClick={closeBottomsheet}
				padding="20px 16px 15px"
			>
				<ModalHeader>{localeData.PAY_VIA} {selectedMethod?.label}</ModalHeader>
				<ModalContent>
					<ModalText>
						{localeData.YOU_WILL_BE_REDIRECTED_TO} {selectedMethod?.label} {localeData.FOR_COMPLETING_THE_PAYMENT}
					</ModalText>
					<Button
						onClick={() => {
							setShowBottomsheet(false);
							payLaterBottomsheetHandler();
						}}
						width="100"
						font={TypographyENUM.lkSansBold}
						id="validate-button-primer"
						text={`Pay â€¢ ${currencyCode}${totalAmount}`}
						fontSize={16}
					/>
				</ModalContent>
			</BottomSheet>
		</>
	);
}

export { PayLater };