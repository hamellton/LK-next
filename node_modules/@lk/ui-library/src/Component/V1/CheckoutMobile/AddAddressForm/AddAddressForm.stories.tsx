import { ComponentMeta, ComponentStory } from "@storybook/react";
import React from "react";
import { generateArgTypes } from "../../../../StorybookHelper";
import { TypographyENUM } from "../../../../Types/general";
import { AddAddressForm } from "./index";

export default {
	title: "Components/V1/CheckoutMobile/AddAddressForm",
	component: AddAddressForm,
	argTypes: {
		id: generateArgTypes({
			type: "string",
			required: true,
			description: "String used as unique identifier",
			category: "General",
		}),
		font: generateArgTypes({
			type: "string",
			required: true,
			description: "Typography of the component",
			category: "General",
			defaultValue: TypographyENUM.serif,
			control: "select",
			options: TypographyENUM,
		}),
		dataLocale: generateArgTypes({
			type: "object",
			required: true,
			description: "static data",
			category: "Component",
			defaultValue: {
				FIRST_NAME: "First Name",
				LAST_NAME: "Last Name",
				MOBILE:"Mobile",
				EMAIL:"Email",
				ADDRESS_LINE_1: "Address Line 1",
				ADDRESS_LINE_2: "Address Line 2",
				ZIP_CODE: "Zip/Postal Code",
				CITY_DISTRICT: "City/District",
				COUNTRY: "Country",
				STATE_PROVINCE:"State/Province",
				CONTINUE: "CONTINUE",
				VIEW_SAVED_ADDRESS: "VIEW SAVED ADDRESS",
				MALE: "Male",
				FEMALE: "Female",
				ADDRESS_DETAILS: "Address details",
				SAVE_AS: "Save as",
				SELECT_GENDER: "Select Gender",
				LANDMARK: "Landmark",
				ADD: "ADD",
				SYMBOL_ASTRIX: "*"
			},
			control:"object"
		}),
		onSubmit: generateArgTypes({
			type: "function",
			required: true,
			description: "event on form submission",
			category: "Event",
		}),
		availableCountries: generateArgTypes({
			type: "array",
			required: true,
			description: "redis config to render or diable fields",
			category: "Component",
			defaultValue: [
				{ code: "+976" },{ code: "+372" },{ code: "+97" },{ code: "+46" },{ code: "+45" },
			],
			control:"object"
		}),
	}
} as ComponentMeta<typeof AddAddressForm>;

const Template: ComponentStory<typeof AddAddressForm> = args => <AddAddressForm {...args} />;

export const Overview = Template.bind({});
Overview.args = {
	id: "review-form",
	dataLocale: {
		FIRST_NAME: "First Name",
		LAST_NAME: "Last Name",
		MOBILE:"Mobile",
		EMAIL:"Email",
		ADDRESS_LINE_1: "Address Line 1",
		ADDRESS_LINE_2: "Address Line 2",
		ZIP_CODE: "Zip/Postal Code",
		CITY_DISTRICT: "City/District",
		COUNTRY: "Country",
		STATE_PROVINCE:"State/Province",
		CONTINUE: "CONTINUE",
		VIEW_SAVED_ADDRESS: "VIEW SAVED ADDRESS",
		MALE: "Male",
		FEMALE: "Female",
		ADDRESS_DETAILS: "Address details",
		SAVE_AS: "Save as",
		SELECT_GENDER: "Select Gender",
		LANDMARK: "Landmark",
		ADD: "ADD",
		SYMBOL_ASTRIX: "*"
	},
	configData: {
		SHIPPING_ADDRESS_FORM_CONFIG: "{\"firstName\":{\"disabled\":false,\"rendered\":true},\"lastName\":{\"disabled\":false,\"rendered\":true},\"mobile\":{\"disabled\":false,\"rendered\":true},\"email\":{\"disabled\":false,\"rendered\":true},\"gender\":{\"disabled\":false,\"rendered\":true},\"addressLine1\":{\"disabled\":false,\"rendered\":true},\"addressLine2\":{\"disabled\":false,\"rendered\":false},\"googleLocationInput\":{\"disabled\":false,\"rendered\":true},\"zipcode\":{\"disabled\":false,\"rendered\":true},\"landmark\":{\"disabled\":false,\"rendered\":true},\"cityDistrict\":{\"disabled\":false,\"rendered\":false},\"state\":{\"disabled\":false,\"rendered\":false},\"country\":{\"disabled\":false,\"rendered\":true},\"addressLabel\":{\"disabled\":false,\"rendered\":true}}",
		GOOGLE_MAP_CONFIG: "{\"libraries\":[\"places\"],\"preventGoogleFontsLoading\":true,\"types\":[\"geocode\"],\"fields\":[\"address_components\",\"formatted_address\",\"geometry\"],\"restrictions\":{\"country\":[\"in\"]}}",
	},
	availableCountries: [{ code: "+976" },{ code: "+372" },{ code: "+97" },{ code: "+46" },{ code: "+45" },],
	font:TypographyENUM.defaultBook,
	onSubmit: () => console.log("submit"),
	//onViewSaved: () => console.log("View Saved address"),
	//onPincodeChanged: () => console.log("Pincode changed"),
	countryList: {
		options: [{ country_name: "United Arab Emirates", country_code: "AE" }, { country_name: "Botswana", country_code: "BW" }, { country_name: "India", country_code: "IN" }],
		optionsText: "country_name",
		optionValue: "country_code"
	},
	stateList: {
		options: ["Andaman and Nicobar Islands", "Jharkhand", "Bihar"],
		optionsText: "",
		optionValue: ""
	}
};
