import React, { memo, useEffect, useState } from "react";
import ReactDOM from "react-dom";
import Button from "../../Button";
import { DeleteAddressModalType } from "./DeleteAddressModal.types";
import { DeleteAddressModalContainer, ButtonWrapper, Title, Description, ContentWrapper, Backdrop, Content } from "./styles";
import { kindENUM, ThemeENUM } from "../../../../Types/general";
import { useTransition } from "react-spring";

const Component = (props:DeleteAddressModalType)=>{
	const { deleteAddress, dataLocale, font, cancel, id, show, title, description } = props;
	const [loading, setLoading] = useState(false);
	
	const transitions = useTransition(show, {
		from: { opacity: 0, transform: "translateY(-40px)" },
		enter: { opacity: 1, transform: "translateY(0px)" },
		leave: { opacity: 0, transform: "translateY(-40px)" }
	});

	useEffect(() => {
		if(document?.body) {
			if (show) document.body.style.overflow = "hidden";
			else document.body.style.overflow = "auto";
		}
		return () => {
			if(document?.body) document.body.style.overflow = "auto";
		};
	}, [show]);

	return document && document?.body ? ReactDOM.createPortal(
		<>
			{
				transitions((style, item) =>
					item && (
						<DeleteAddressModalContainer styleFont={font} show={true} >
							<Backdrop style={{ opacity: style.opacity }} />
							<Content style={{ opacity: style.opacity, transform: style.transform }}>
								<ContentWrapper>
									<Title styleFont={font}>{title}</Title>
									<Description styleFont={font}>{description}</Description>
								</ContentWrapper>
								<ButtonWrapper>
									<Button
										style={{ height: "41.5px" }}
										font={font}
										id="delete-address"
										kind={kindENUM.background}
										onClick={() => deleteAddress(id, setLoading)}
										text={dataLocale.DELETE?.toString()}
										theme={ThemeENUM.secondary}
										width="50"
										loading={loading}
										disabled={loading}
									/>
									<Button
										font={font}
										kind={kindENUM.border}
										onClick={() => cancel()}
										text={dataLocale.CANCEL?.toString()}
										theme={ThemeENUM.secondary}
										width="50"
										id="cancel-delete-address"
										disabled={loading}
									/>
								</ButtonWrapper>

							</Content>
						</DeleteAddressModalContainer>
					)
				)
			}
		</>, document?.body
	) : null;
};

const DeleteAddressModal = memo(Component);

export { DeleteAddressModal };