import React, { useEffect } from "react";
import { inputs, InputType } from "./Input.types";
import { ComponentSizeENUM, TypographyENUM } from "../../../../../Types/general";
import {
	InputContainer,
	InputField,
	InputWrapper,
} from "./Input.styles";
import { action } from "@storybook/addon-actions";
const FormInput = ({
	placeholder,
	getInputValue,
	type = inputs.type.text,
	componentSize = ComponentSizeENUM.small,
	id,
	disabled = false,
	width = "50",
	readonly = false,
	onValueChange = () => null,
	onKeyUpChange = () => null,
	font = TypographyENUM.lkSansRegular,
	clearInput = false,
	setClearInput
}: InputType) => {
	const [ inputValue, setInputValue ] = React.useState("");

	function updateValue(e: React.ChangeEvent<HTMLInputElement>) {
		onValueChange(e);
		action("value change")(e, { value: e.target.value });
	}

	useEffect(()=>{
		if(clearInput === true){
			setInputValue("");
			setClearInput && setClearInput(false);
		}
	},[clearInput]);


	const onKeyUpChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {
		onKeyUpChange(e);
	};

	function onChange(e: React.ChangeEvent<HTMLInputElement>) {
		setInputValue(e.target.value);
		getInputValue(e.target.value);
	}
	return (
		<InputWrapper styleSize={componentSize} styleFont={font}>
			<InputContainer id={id} width={width} value={inputValue}>
				<InputField
					type={type}
					onChange={onChange}
					onKeyUp={()=> onKeyUpChangeHandler}
					onBlur={updateValue}
					placeholder={placeholder}
					disabled={disabled}
					readOnly={readonly}
					value={inputValue}
				/>
			</InputContainer>
		</InputWrapper>
	);
};

export { FormInput };
