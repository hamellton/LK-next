import React from "react";
import { QRCodeTypes } from "../Payment.types";
import { PlaceOrderText } from "../PlaceOrderText";
import { Wrapper, QRBG, QRButton, QRWrapper, Text } from "./qrCode.styles";
// import PlaceOrderText from "./PlaceOrderText";
// import "./QRCode.scss";
// import InfoBar from "../../../../CommonComponents/InfoBar";

const QRCode = ({ createOrderPayment = () => console.log("Create Order Payment function call"),
	walletDetails,
	loadingPlaceOrder,
	frameProduct,
	paymentCTA,
	dataLocale }:QRCodeTypes) => {

	const {
		PLEASE_CLICK_ON_GENERATE_QR_CODE,
		GENERATE_QR_CODE_PLACE_ORDER,
		YOU_WILL_BE_REDIRECTED_TO_NEW_PAGE,
	} = dataLocale;
	return (
		<Wrapper>
			<Text>{PLEASE_CLICK_ON_GENERATE_QR_CODE}</Text>
			<QRWrapper>
				<QRBG></QRBG>
				<QRButton
					className="payment-continue-button generate-qr-btn"
					// style={{ pointerEvents: loadingPlaceOrder && "none" }}
					type="button"
					onClick={() => {
						createOrderPayment("", walletDetails.code, walletDetails.gatewayId);
						// _gaq.push(
						// 	["_trackEvent", "Place Order", walletDetails.code],
						// 	["ninja._trackEvent", "Place Order", walletDetails.code]
						// );
					}}
				>
					<PlaceOrderText
						frameProduct={frameProduct}
						loadingPlaceOrder={loadingPlaceOrder}
						paymentCTA={{
							mainText: GENERATE_QR_CODE_PLACE_ORDER,
							subText: paymentCTA?.subText,
						}}
					/>
				</QRButton>
			</QRWrapper>
			{/* {frameProduct && <InfoBar frameProduct={frameProduct} paymentCTA={paymentCTA} />} */}
			<Text>{YOU_WILL_BE_REDIRECTED_TO_NEW_PAGE}</Text>
		</Wrapper>
	);
};

export default React.memo(QRCode);
