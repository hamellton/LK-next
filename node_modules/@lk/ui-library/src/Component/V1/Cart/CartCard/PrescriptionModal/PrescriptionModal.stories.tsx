import { ComponentMeta, ComponentStory } from "@storybook/react";
import React from "react";
import { generateArgTypes } from "../../../../../StorybookHelper";
import PrescriptionModal from "./PrescriptionModal.component";

export default {
	title: "Components/V1/Cart/PrescriptionModal",
	component: PrescriptionModal,
	argTypes: {
		show: generateArgTypes({
			category: "General",
			description: "Show or hide the modal",
			required: true,
			type: "boolean",
			defaultValue: false,
		}),
		onHide: generateArgTypes({
			category: "General",
			description: "Function to run when the close button is clicked",
			required: true,
			type: "function"
		}),
		prescptionInfo: generateArgTypes({
			category: "General",
			description: "Object containing prescriptionInfo",
			required: true,
			type: "object"
		})
	}
} as ComponentMeta<typeof PrescriptionModal>;

const Template: ComponentStory<typeof PrescriptionModal> = args => <PrescriptionModal {...args} />;

export const Overview = Template.bind({});
Overview.args = {
	show: false,
	onHide: () => null,
	prescriptionInfo: {
		isLoading: false,
		result: {
			powerType: "single_vision",
			powerTypeList: [
				{
					type: "sph",
					label: "Sph",
					inputType: "drop_down",
					powerDataList: [
						{
							value: [
								"-8.00",
								"-7.75",
								"-7.50",
								"-7.25",
								"-7.00",
								"-6.75",
								"-6.50",
								"-6.25",
								"-6.00",
								"-5.75",
								"-5.50",
								"-5.25",
								"-5.00",
								"-4.75",
								"-4.50",
								"-4.25",
								"-4.00",
								"-3.75",
								"-3.50",
								"-3.25",
								"-3.00",
								"-2.75",
								"-2.50",
								"-2.25",
								"-2.00",
								"-1.75",
								"-1.50",
								"-1.25",
								"-1.00",
								"-0.75",
								"-0.50",
								"-0.25",
								"0.00",
								"+0.25",
								"+0.50",
								"+0.75",
								"+1.00",
								"+1.25",
								"+1.50",
								"+1.75",
								"+2.00",
								"+2.25",
								"+2.50",
								"+2.75",
								"+3.00",
								"+3.25",
								"+3.50",
								"+3.75",
								"+4.00",
								"+4.25",
								"+4.50",
								"+4.75",
								"+5.00",
								"+5.25",
								"+5.50",
								"+5.75",
								"+6.00"
							],
							price: 0
						}
					]
				},
				{
					type: "cyl",
					label: "Cyl",
					inputType: "drop_down",
					powerDataList: [
						{
							value: [
								"-5.00",
								"-4.75",
								"-4.50",
								"-4.25",
								"-4.00",
								"-3.75",
								"-3.50",
								"-3.25",
								"-3.00",
								"-2.75",
								"-2.50",
								"-2.25",
								"-2.00",
								"-1.75",
								"-1.50",
								"-1.25",
								"-1.00",
								"-0.75",
								"-0.50",
								"-0.25",
								"0.00",
								"+0.25",
								"+0.50",
								"+0.75",
								"+1.00",
								"+1.25",
								"+1.50",
								"+1.75",
								"+2.00",
								"+2.25",
								"+2.50",
								"+2.75",
								"+3.00",
								"+3.25",
								"+3.50",
								"+3.75",
								"+4.00",
								"+4.25",
								"+4.50",
								"+4.75",
								"+5.00"
							],
							price: 0
						}
					]
				},
				{
					type: "axis",
					label: "Axis",
					inputType: "field",
					powerDataList: [
						{
							value: [],
							price: 0
						}
					]
				},
				{
					type: "pd",
					label: "PD",
					inputType: "drop_down",
					powerDataList: [
						{
							value: [
								"20",
								"20.5",
								"21",
								"21.5",
								"22",
								"22.5",
								"23",
								"23.5",
								"24",
								"24.5",
								"25",
								"25.5",
								"26",
								"26.5",
								"27",
								"27.5",
								"28",
								"28.5",
								"29",
								"29.5",
								"30",
								"30.5",
								"31",
								"31.5",
								"32",
								"32.5",
								"33",
								"33.5",
								"34",
								"34.5",
								"35",
								"35.5",
								"36",
								"36.5",
								"37",
								"37.5",
								"38",
								"38.5",
								"39",
								"39.5",
								"40"
							],
							price: 0
						}
					]
				}
			]
		},
		error: true,
		errorMessage: "Power type is invalid"
	}
};
