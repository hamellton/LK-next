import { ComponentSizeENUM, TypographyENUM } from "../../../../Types/general";
import { DataType } from "../../OldPayment/Payment.types";

export interface CartCardTypes {
	id: string
	onDeleteClick: () => any
	onAddClick: () => void,
	wishlist: () => void,
	deleteAllCount: () => void,
	componentSize: ComponentSizeENUM
	font: TypographyENUM,
	currencyCode: string,
	dataLocale: DataType,
	configData: DataType,
	itemId: number,
	itemUrl: string,
	itemImg: string,
	itemBrandName: string,
	itemModel: string,
	itemClassification: string,
	itemQty: number,
	itemFrameColor: string,
	itemPowerRequired: string,
	itemPrescription?: Prescription,
	itemContactDisposableType: string,
	itemPrescriptionView: CartPrescriptionType,
	itemLensType: string,
	showRibbon: boolean,
	ribbonMessage: string,
	showOfferMessage: boolean,
	offerMessage: string,
	itemPriceObj: CartItemPriceType,
	isFree?: boolean,
	itemDiscountedPrice?: {value?: number},
	price?: {value?: number},
	addOnPriceObj: CartItemPriceType | null,
	itemOptions: DataType | string | any,
	itemFrameSize: string
	isRTL?: boolean
	cartTotal: any;
	subdirectoryPath: string
	removeDomainName: any;
	itemExtraDetails: any;
	checkPower?: boolean;
	getPowerInfo?: () => void;
	prescriptionInfo: any;
}

// export interface amountType {
// 	currencyCode: string
// 	discounts: [{code: string, type: string, amount: number}]
// 	shipping: number
// 	subTotal: number
// 	taxes: [{name: string, amount: number}]
// 	total: number
// 	totalDiscount: number
// 	totalTax: number
// }

interface Prescription {
    powerType?: string;
    left?: PrescriptionLeft;
    right?: PrescriptionLeft;
    notes?: string;
    gender?: string;
    dob?: string;
    showPd?: boolean;
	userName?: string;
}
interface PrescriptionLeft {
    sph: string;
    boxes: number;
    powerwiseId: string;
    cyl?: string;
    axis?: string;
}

export interface CartItemPriceType {
	showStrikeOffPrice: boolean,
	strikeOffPrice: number,
	itemPrice: number,
	itemName: string,
}

export interface CartPrescriptionType {
    showPd: boolean;
    pdConfigAvailable: boolean;
    powerType?: string;
    left?: PrescriptionViewType;
    right?: PrescriptionViewType;
    notes?: string;
    gender?: string;
    dob?: string;
    labels?: DataType;
}

export interface PrescriptionViewType {
	sph: string;
    boxes: number;
}
