import React from "react";
import { ImgContainer, ProductImage, ProductLink, ProductName, ProductNameContainer, ProductPriceContainer, ProductDetail, ProductContainer } from "../CartWishlist.styles";
import { ComponentSizeENUM, DataType, ThemeENUM, TypographyENUM } from "../../../../../Types/general";
import { RatingStar } from "../../../../Common/RatingStar/RatingStar.component";
import Pricing from "../../../../Common/Price/Price.component";

interface ProductContainerStructureType{
	currencyCode: string;
	font: TypographyENUM;
	isRTL: boolean;
	mobileView: boolean;
	product: any;
	dataLocale: DataType;
	width?: string;
	removeDomainName?: any
}

const ProductContainerStructure = ({ removeDomainName, currencyCode, font=TypographyENUM.defaultBook, isRTL, mobileView, product, dataLocale, width }: ProductContainerStructureType) => {
	
	return (
		<ProductContainer width={width} mobileView={mobileView} styleFont={font} isRTL={isRTL} noMargin>
			<ProductLink href={ removeDomainName(product.productUrl)} target="_blank" rel={"noreferrer"}>
				<ImgContainer isRTL={isRTL}>
					<ProductImage src={ product.frontImage || product.imageUrl || product.productImageUrl} alt={product.brandName} />
					<RatingStar isRTL={isRTL} recentlyViewed={true} rating={product.avgRating ? parseFloat(product.avgRating) : 0} numberOfRatings={product?.numberOfReviews ? parseInt(product?.numberOfReviews) : 0} id={"rating-star"} font={TypographyENUM.lkSansBold} backgroundColor={"#EEEEF5"} primaryTextColor={"#000042"} starColor={"#0FBD95"}/>
				</ImgContainer>
				<ProductDetail isRTL={isRTL}>
					<ProductNameContainer>
						<ProductName>{product.brandName}</ProductName>
					</ProductNameContainer>
					{/* {product.productName && <ProductFeature>
										<span title={product.productName}>{product.productName}</span>
									</ProductFeature>} */}
					<ProductPriceContainer>
						<Pricing id="price"
							isDiscountPriceBigger={false}
							actualPrice={product.prices[0]?.price}
							finalPrice={product.prices[1]?.price}
							hasSpecialPrice={product.prices[1]?.price < product.prices[0]?.price ? true : false}
							componentSize={ComponentSizeENUM.small}
							font={TypographyENUM.lkSansBold}
							strikeThroughColor="var(--dark-blue-10)"
							actualPriceColor="var(--dark-blue-10)"
							finalPriceColor="var(--dark-blue-100)"
							styleTheme={ThemeENUM.primary}
							currencyCode={currencyCode}
							isRTL={isRTL}
							isMobileView
							isGridView={false} dataLocale={dataLocale} showTax></Pricing>
					</ProductPriceContainer>
				</ProductDetail>
			</ProductLink>
		</ProductContainer>
	);
};

export default ProductContainerStructure;