import React, { useEffect, useState } from "react";
import { SliderCarouselType } from "./SliderCarousel.types";
import { Slide, SlideControllerList, SlideImg, SlideInline, SlideList, SlideNavigateBtn, SliderHolder, SliderList, SliderMain, SlidesContainer } from "./styles";

const SliderCarousel = ({ sliderImages, autoPlay = false, duration = 2, id, isRTL=false }: SliderCarouselType) => {
	const [activeIndex, setActiveIndex] = useState(0);
	const [paused, setPaused] = useState(false);

	useEffect(() => {
		let interval: ReturnType<typeof setInterval>;
		if(autoPlay) {
			if(!paused) interval = setInterval(() => {
				setActiveIndex(actidx => actidx === sliderImages.length - 1 ? 0 : actidx + 1);
			}, (typeof duration === "string" ? parseInt(duration) : duration) * 1000);
		}
		return () => {
			if (interval) clearInterval(interval);
		};
	}, [paused, setActiveIndex]);

	// console.log(activeIndex);
	

	return (
		<SliderMain id={id}>
			<SliderHolder onMouseEnter={() => setPaused(true)} onMouseLeave={() => setPaused(false)}>
				<SlidesContainer>
					<SliderList activeIndex={activeIndex} isRTL={isRTL}>
						{sliderImages.map((sl,i) => <Slide key={sl.id || i}>
							<div>
								<SlideInline>
									<SlideImg src={sl.imageUrl} />
								</SlideInline>
							</div>
						</Slide>)}
					</SliderList>
				</SlidesContainer>
				<SlideControllerList>
					{sliderImages.map((sl, i) =>
						<SlideList key={i}>
							<SlideNavigateBtn onClick={() => setActiveIndex(i)} active={i===activeIndex}></SlideNavigateBtn>
						</SlideList>)}
				</SlideControllerList>
			</SliderHolder>
		</SliderMain>
	);
};

export default SliderCarousel;
