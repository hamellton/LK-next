import { action } from "@storybook/addon-actions";
import React, { useEffect, useState } from "react";
// import { useTransition, animated } from "react-spring";
// import { IconLeft } from "../../../Icons";
import { ComponentSizeENUM, ThemeENUM, TypographyENUM } from "../../../Types/general";
import { FormInput } from "../../Common/Input/Input.component";
import { inputs } from "../../Common/Input/Input.types";
// import CommonLoader from "../../Common/Loader";
import PrimaryButton from "../../Common/PrimaryButton";
import { SignInFormType } from "./SignInForm.types";
import { AnchorTag, BtnBack, CheckboxInput, CheckboxLabel, EmailDisplay, ErrorField, ImageWhatsapp, InlineLoader, InputWrapper, OTPSentText, OTPSentTextWrapper, OTPSentWrapper, ResendWrapper, SignInFormContainer, UpdateOnWhatsappWrapper } from "./styles";
import Timer from "./Timer";

const SignInForm = ({
	id,
	dataLocale,
	font,
	onProceed,
	signInStatus,
	isRTL= false }: SignInFormType) => {

	const [showOTP, setShowOTP] = useState(false);
	const [showPassword, setShowPassword] = useState(false);
	const [passwordField, setPasswordField] = useState<string | null>(null);
	const [submit, setSubmit] = useState(false);
	useEffect(()=> {
		setShowOTP(signInStatus.showOTP);
		setShowPassword(signInStatus.showPassword);
	}, [signInStatus, signInStatus.showOTP, signInStatus.showPassword]);
	const [inputValue, setInputValue] = React.useState("");

	const [fieldType, setFieldType] = React.useState<string>("email");
	const updateValue = (type:string,value:string) => {
		setInputValue(value);
	};

	const updatePasswordValue = (e: React.ChangeEvent<HTMLInputElement>) => {
		setPasswordField(e.target.value);
		setSubmit(true);
	};


	const clickHandler = () => {
		if(submit && passwordField) {
			onProceed(fieldType, inputValue, passwordField);
			setSubmit(false);
			setPasswordField(null);
			setShowOTP(false);
			setShowPassword(false);
		} else {
			onProceed(fieldType, inputValue);
		}
	};

	const getUpdateOnWhatsapp = (event: React.ChangeEvent<HTMLInputElement>) => {
		action("get update on whatsapp")(event, { getUpdateOnWhatsapp:event.target.checked });
	};

	const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {
		console.log("working");
		event.preventDefault();
	};

	const onKeyUpHandler = (e: React.ChangeEvent<HTMLInputElement>) => {
		if(e.target.value.length === 0) {
			setFieldType("email");
		}else if(isNaN(Number(e.target.value))) {
			setFieldType("email");
		} else {
			setFieldType("phone");
		}
	};

	const handleBackClick = () => {
		setShowOTP(false);
		setShowPassword(false);
	};

	// const viewTransitions = useTransition(!showOTP && !showPassword, {
	// 	from: { opacity: 0, transform: "translateX(0px)", delay: 100 },
	// 	enter: { opacity: 1, transform: "translateX(5px)", delay: 100 },
	// 	leave: { opacity: 0, transform: "translateX(0px)", delay: 100 },
	// });


	return (
		<SignInFormContainer id={id} styleFont={font} onSubmit={onSubmit}>
			{showOTP &&
			<OTPSentWrapper>
				<BtnBack onClick={handleBackClick}><b>&#x2190;</b> {dataLocale.BACK}</BtnBack>
				<OTPSentTextWrapper>
					<OTPSentText>{dataLocale.WE_HAVE_SENT_AN_OTP}{inputValue}</OTPSentText>
					<PrimaryButton borderColor="var(--transparent)" theme={ThemeENUM.secondary} onBtnClick={() => null} font={font} componentSize={ComponentSizeENUM.small} id="btn-edit-number" width="max-content" height="max-content" primaryText={dataLocale.EDIT_NUMBER} />
				</OTPSentTextWrapper>
				<InputWrapper>
					<FormInput font={font} label={dataLocale.PLEASE_ENTER_OTP} width="100%" type={inputs.type.number} dir={inputs.type.dir} onValueChange={(e) => updatePasswordValue(e)} componentSize={ComponentSizeENUM.medium} isRTL={isRTL}/>
					<ResendWrapper>
						<Timer id="otp-timer" minutes={0} seconds={5}/>
						<PrimaryButton borderColor="var(--transparent)" theme={ThemeENUM.secondary} onBtnClick={onSubmit} font={TypographyENUM.defaultHeavy} componentSize={ComponentSizeENUM.small} id="btn-resend-otp" width="max-content" height="max-content" primaryText={dataLocale.RESEND} />
					</ResendWrapper>
				</InputWrapper>
			</OTPSentWrapper>}
			{!showOTP && showPassword && <>
				<BtnBack onClick={handleBackClick}><b>&#x2190;</b> {dataLocale.BACK}</BtnBack>
				<EmailDisplay><span>{inputValue}</span><button onClick={handleBackClick}>Edit Email</button></EmailDisplay>
				<FormInput font={font} label={dataLocale.PASSWORD} width="100%" type={inputs.type.password} onValueChange={(e) => updatePasswordValue(e)} componentSize={ComponentSizeENUM.medium} dir={inputs.type.dir} isRTL={isRTL}/>
			</>}
			{!showOTP && !showPassword &&
				<FormInput
					countryCodePrefix ={fieldType === "phone" ? "+91" : undefined}
					onKeyUpChange={(e) => onKeyUpHandler(e)}
					font={font}
					label={dataLocale.MOBILE_EMAIL_TEXT}
					width="100%"
					type={inputs.type.text}
					onValueChange={(e) => updateValue("input",e.target.value)}
					componentSize={ComponentSizeENUM.medium}
					dir={inputs.type.dir}
					isRTL={isRTL}
				/>
			}
			{signInStatus.isError && signInStatus.errorMessage && <ErrorField>{signInStatus.errorMessage}</ErrorField>}
			{signInStatus.isLoading ? <InlineLoader alt="Loading..." src="//static.lenskart.com/skin/frontend/base/default/images/loader2.gif" /> : <PrimaryButton theme={ThemeENUM.primary} onBtnClick={clickHandler} font={font} componentSize={ComponentSizeENUM.medium} id="btn-proceed" width="100%" height="35px" primaryText={dataLocale.PROCEED} />}
			<UpdateOnWhatsappWrapper isRTL={isRTL}>
				<CheckboxInput type="checkbox" id="whatsapp-updates" onChange={getUpdateOnWhatsapp}/>
				<CheckboxLabel htmlFor="whatsapp-updates">{isRTL && <ImageWhatsapp src="	https://static.lenskart.com/media/desktop/img/25-July-19/whatsapp.png"/>} Get updates on Whatsapp {!isRTL && <ImageWhatsapp src="	https://static.lenskart.com/media/desktop/img/25-July-19/whatsapp.png"/>}</CheckboxLabel>
			</UpdateOnWhatsappWrapper>
			<AnchorTag href="//www.lenskart.com/terms-conditions" target="_blank">
				*{dataLocale.T_C_APPLY}
			</AnchorTag>
		</SignInFormContainer>
	);
};

export default SignInForm;
