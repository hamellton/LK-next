import React from "react";
import { inputs, InputType, positionENUM } from "./Input.types";
import { ComponentSizeENUM } from "../../../Types/general";
import {
	ErrorMessage,
	InputButton,
	InputContainer,
	InputField,
	InputLabel,
	InputWrapper,
	PrefixText
} from "./Input.styles";
import { action } from "@storybook/addon-actions";
const FormInput = ({
	placeholder,
	label,
	type = inputs.type.text,
	componentSize = ComponentSizeENUM.small,
	id,
	disabled = false,
	hasError,
	errorMessage,
	width = "50",
	readonly = false,
	onValueChange = () => null,
	onKeyUpChange = () => null,
	onChange,
	onBlur,
	includeButton,
	buttonText,
	buttonPosition = positionENUM.right,
	labelPosition = positionENUM.left,
	buttonOnClick,
	countryCodePrefix,
	font,
	isRTL = false,
	labelFontSize = "1em",
	inputType
}: InputType) => {
	const [inputValue, setInputValue] = React.useState("");

	function updateValue(e: React.ChangeEvent<HTMLInputElement>) {
		onValueChange(e);
		action("value change")(e, { value: e.target.value });
	}

	const onKeyUpChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {
		onKeyUpChange(e);
	};

	function onChangeHandler(e: React.ChangeEvent<HTMLInputElement>) {
		setInputValue(e.target.value);
	}

	return (
		<InputWrapper styleSize={componentSize} styleFont={font}>
			<InputContainer id={id} width={width} value={inputValue} isRTL={isRTL}>
				<PrefixText isRTL={isRTL}>{countryCodePrefix}</PrefixText>
				<InputField
					prefixText={!!countryCodePrefix}
					error={!!hasError}
					type={type}
					onChange={e => {
						onChangeHandler(e);
						onChange?.(e);
					}}
					onKeyUp={() => onKeyUpChangeHandler}
					onBlur={(e) => {
						updateValue(e);
						onBlur?.(e);
					}}
					placeholder={placeholder}
					disabled={disabled}
					readOnly={readonly}
					value={inputValue}
					isRTL={isRTL}
					onKeyPress={(event: any) => {
						if(inputType && inputType === "number"){ const keycode = event.which;
							if (
								!(
									event.shiftKey === false &&
									(keycode === 46 ||
										keycode === 8 ||
										keycode === 37 ||
										keycode === 39 ||
										(keycode >= 48 && keycode <= 57))
								)
							) {
								event.preventDefault();
							}
						}}}
				/>
				{includeButton && (
					<InputButton
						onClick={buttonOnClick}
						buttonPosition={isRTL ? positionENUM.left : buttonPosition}
						styleFont={font}
						isRTL={isRTL}
					>
						{buttonText}
					</InputButton>
				)}
				<InputLabel
					fontSize={labelFontSize}
					prefixText={!!countryCodePrefix}
					labelPosition={isRTL ? positionENUM.right : labelPosition}
				>
					{label && !placeholder && label}
				</InputLabel>
			</InputContainer>
			{hasError ? <ErrorMessage>{errorMessage}</ErrorMessage> : null}
		</InputWrapper>
	);
};

export { FormInput };
