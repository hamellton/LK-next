import React from "react";
import { inputs, InputType, positionENUM } from "./Input.types";
import { ComponentSizeENUM } from "../../../Types/general";
import { InputButton, InputContainer, InputField, InputLabel, PrefixText } from "./Input.styles";
import { action } from "@storybook/addon-actions";
const FormInput = (
	{
		placeholder,
		label,
		type = inputs.type.text,
		dir = inputs.type.dir,
		componentSize = ComponentSizeENUM.small,
		id,
		disabled = false,
		hasError = false,
		width = "50",
		readonly = false,
		onValueChange = () => null,
		onKeyUpChange = () => null,
		includeButton,
		buttonText,
		buttonPosition=positionENUM.right,
		labelPosition= positionENUM.left,
		buttonOnClick,
		countryCodePrefix,
		font,
		isRTL = false,
		labelFontSize = "1em"
	}: InputType,
) => {
	const [inputValue, setInputValue] = React.useState("");
	function updateValue(e: React.ChangeEvent<HTMLInputElement>) {
		onValueChange(e);
		action("value change")(e,{ value:e.target.value });
	}

	const onKeyUpChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {
		onKeyUpChange(e);
	};

	function onChange(e: React.ChangeEvent<HTMLInputElement>){
		setInputValue(e.target.value);
	}
	return <InputContainer id={id} width={width} styleSize={componentSize} styleFont={font} value={inputValue} isRTL={isRTL}>
		<PrefixText isRTL={isRTL}>{countryCodePrefix}</PrefixText>
		<InputField prefixText={!!countryCodePrefix} error={hasError} type={type} dir={dir} onChange={onChange} onKeyUp={onKeyUpChangeHandler} onBlur={updateValue} placeholder={placeholder} disabled={disabled} readOnly={readonly} value={inputValue} isRTL={isRTL}/>
		{includeButton && <InputButton onClick={buttonOnClick} buttonPosition={isRTL ? positionENUM.left : buttonPosition} styleFont={font} isRTL={isRTL}>{buttonText}</InputButton> }
		<InputLabel fontSize={labelFontSize} prefixText={!!countryCodePrefix} labelPosition={isRTL ? positionENUM.right : labelPosition}>
			{label && !placeholder && label}
		</InputLabel>
	</InputContainer>;
};

export default FormInput;
