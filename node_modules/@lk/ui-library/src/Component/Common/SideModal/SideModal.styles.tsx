import styled, { keyframes } from "styled-components";
import { TypographyENUM } from "../../../Types/general";

export const SideModalWrapper = styled.div<{isVisible?: boolean}>`
	display: ${props => props?.isVisible ? "flex" : "none"};
	flex-direction: row;
	z-index: 1201 !important;
	position: relative;
`;

export const Fade = styled.div`
	opacity: 0.5;
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	background-color: #000;
	-webkit-transition: opacity 0.15s linear;
	-o-transition: opacity 0.15s linear;
	transition: opacity 0.15s linear;
`;

export const IconWrapper = styled.div`
	cursor: pointer;
`;

export const Header = styled.div<{isRTL?: boolean}>`
	display: flex;
	align-items: center;
	justify-content: space-between;
	/* transform: ${(props) => (props.isRTL ? "scaleX(-1)" : "")}; */
	${IconWrapper} {
		transform: ${(props) => (props.isRTL ? "scaleX(1)" : "")};
	}
	padding: 20px 46px;
`;

const animateLeft = keyframes`
	from {
		transform: translate3d(30%, 0, 0);
	}
	to {
		transform: translate3d(0, 0, 0);
	}
`;

const animateRight = keyframes`
	from {
		transform: translate3d(-30%, 0, 0);
	}
	to {
		transform: translate3d(0, 0, 0);
	}
`;

export const Content = styled.div<{isRTL?: boolean, backgroundColor?: string}>`
	position: fixed;
	display: flex;
	flex-direction: column;
	margin: 0 auto;
	top: 0;
	padding-top: 10px;
	overflow-x: hidden;
	height: 100%;
	left: ${props => props?.isRTL ? 0 : ""};
	right: ${props => !props?.isRTL ? 0 : ""};
	width: 55vw;
	background-color: ${props => props.backgroundColor || "var(--warm-grey-25)"};
	animation-name: ${props => props?.isRTL ? animateRight : animateLeft};
	animation-duration: 0.5s;
	&::-webkit-scrollbar {
		display: none;
	}
`;

export const Title = styled.div<{centerHeading?: boolean}>`
	flex: ${props => !props.centerHeading ? 1 : "inherit"};
	margin: 0 32px;
	color: var(--dark-blue-100);
	font-family: ${TypographyENUM.lkSerifNormal};
	h2{
		font-weight: 400;
		font-size: 24px;
		line-height: 36px;
		letter-spacing: -0.02em;
	}
`;
