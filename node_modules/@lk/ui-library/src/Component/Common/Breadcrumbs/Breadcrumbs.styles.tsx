import styled from "styled-components";
import { ComponentSizeENUM, TypographyENUM } from "../../../Types/general";

export const BreadcrumbContainer = styled.div<{styleFont: TypographyENUM, styleSize: ComponentSizeENUM, isRTL:boolean, isMobileView?:boolean}>`
    font-family: ${(props) => `${props.styleFont}`};
    font-size: ${(props) => `${props.styleSize === "small" ? "var(--fs-12)" : "var(--fs-12)"}`};
	letter-spacing: 1px;
	border-radius: 0px;
	/* color: var(--whitish-gray); */
	color: ${props => props.isMobileView ? "#18cfa8" : "var(--whitish-gray)"} ;
	display: flex;
	justify-content: var(--space-between);
	align-items: center;
	// padding: 0px var(--pd-5) 0 8px;
	direction: ${(props) => props.isRTL ? "rtl" : ""};
	@media screen and (max-width:767px){
		font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
	}
`;

export const Breadcrumb = styled.ul`
	padding: 0;
	span {
		font-weight: var(--fw-bold);
		color: var(--light-black);
	}
`;
export const LI = styled.li`
	display: inline-block;

`;

export const BCSpan = styled.span<{indexKey: number}>`
	font-weight: var(--fw-bold);

	&:before {
		${props => props.indexKey !== 0 && "content: \"/\";" }
		padding: 0 var(--pd-5);
	}

`;

export const AnchorTag = styled.a<{deviceType: string}>`
	color: ${props => props.deviceType === "mobilesite" ? "#18cfa8" : "var(--whitish-gray)"};
	font-weight: 400;
`;

export const HelpLine = styled.span<{color?: string}>`
	${props => props.color && `color: ${props.color}`};
`;
