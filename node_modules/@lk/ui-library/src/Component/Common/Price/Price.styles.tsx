import styled from "styled-components";
import {
	ComponentSizeENUM,
	ThemeENUM,
	TypographyENUM,
} from "../../../Types/general";

interface Props {
	actualPriceColor?: string
	strikeThrough:boolean
	strikeThroughColor: string
	isDiscountPriceBigger:boolean
	isGridView?: boolean
	desktopPriceFontBold?: boolean;
	isMobileView?: boolean;
}


const getFontSize = (size: ComponentSizeENUM) => {
	if (size === ComponentSizeENUM.small) {
		return "var(--fs-14)";
	} else if (size === ComponentSizeENUM.medium) {
		return "var(--fs-16)";
	} else {
		return "var(--fs-22)";
	}
};
export const Container = styled.span<{
	styleSize: ComponentSizeENUM
	styleFont: TypographyENUM
	styleTheme: ThemeENUM
	isRTL: boolean,
	padding?: string
}>`
	flex-direction: row;
	${props => props.isRTL ? "justify-content: end" : ""};
	display:flex;
	align-items:baseline;
	gap:var(--spacing-sm);
	color: ${(props) =>
		props.styleTheme === ThemeENUM.primary
			? "var(--dark-blue-100)"
			: "var(--white)"};
	font-weight: var(--fw-regular);
	font-family: ${(props) => props.styleFont};
	font-size: ${(props) => getFontSize(props.styleSize)};
	direction: ${props =>props.isRTL ? "ltr" : "initial"};
	${({ padding })=> padding ? padding : "padding-bottom:12px"};
`;
export const PricingSpan = styled.span<Props>`
	position: relative;
	font-size: ${props => props.isGridView ? "var(--fs-12)" : props.isMobileView ? "16px" : props.desktopPriceFontBold ? "22px" : "15px"};
	text-decoration: ${props => props.strikeThrough ? "line-through" : "unset"};
	text-decoration-color: ${props => props.strikeThroughColor};
	color: ${props => props.actualPriceColor} ;
	${props => props.strikeThroughColor && "font-size:14px"}

`;

export const CurrencySpan = styled.span`
	font-weight: normal;
`;

export const SpecialPriceSpan = styled.span<{finalPriceColor?:string, isGridView:boolean; isMobileView: boolean; desktopPriceFontBold?: boolean}>`
	color: ${props => props.finalPriceColor};
	font-weight: bold;
	font-family: ${TypographyENUM.lkSansBold};
	font-size: ${props => props.isGridView ? "var(--fs-12)" : props.isMobileView ? "16px" : props.desktopPriceFontBold ? "22px" : "14px"};
`;

export const TaxText = styled.span<{taxFontSize?: string}>`
color: #9999b3;
font-weight: 400;
font-size: 14px;
line-height: 20px;
letter-spacing: -.02em;
margin: 0 2px;
font-family: ${TypographyENUM.lkSansMedium};
text-transform: lowercase;
`;

export const GstText = styled.span`
font-size: 11px;
`;
