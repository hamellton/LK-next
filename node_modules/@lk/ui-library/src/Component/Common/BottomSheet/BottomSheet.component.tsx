import React, { useEffect } from "react";
import { animated, useTransition } from "react-spring";
import * as Icons from "../../../Icons/index";
import { Icon, Root, Sheet } from "./BottomSheet.Styles";
import { BottomSheetTypes } from "./BottomSheet.types";

const AnimatedRoot = animated(Root);
const AnimatedSheet = animated(Sheet);

export default function BottomSheet({
	show,
	closebottomSheet,
	children,
	borderRadius = "",
	backgroundColor = "",
	showCrossIcon = true,
	onBackdropClick = () => null,
	top = "",
	padding = "",
	zIndex = "",
	backdropColor = "var(--backdrop)",
	overflow=false,
	isRTL = false,
	height="",
	style
}: BottomSheetTypes) {

	const transitions = useTransition(show, {
		from: { opacity: 0, sheetOpacity: 0.4, transform: "translateY(100%)" },
		enter: { opacity: 1, sheetOpacity: 1, transform: "translateY(0%)" },
		leave: { opacity: 0, sheetOpacity: 0.4, transform: "translateY(100%)" }
	});

	useEffect(() => {
		if (show) document.body.style.overflow = "hidden";
		else document.body.style.overflow = "auto";
		return () => {
			document.body.style.overflow = "auto";
		};
	}, [show]);

	return (
		<>
			{
				transitions((animatedStyle, item) =>
					item && (
						<>
							{show && (
								<AnimatedRoot
									style={{ ...style, opacity: animatedStyle.opacity }}
									onClick={onBackdropClick}
									backdropColor={backdropColor}
								/>
							)}
							<AnimatedSheet
								style={{
									...style,
									transform: animatedStyle.transform,
									opacity: animatedStyle.sheetOpacity,
								}}
								padding={padding}
								show={show}
								zIndex={zIndex}
								borderRadius={borderRadius}
								backgroundColor={backgroundColor}
								top={top}
								overflow={overflow}
								height={height}
							>
								{showCrossIcon && (
									<Icon onClick={(e) => {
										closebottomSheet();
										e.stopPropagation();
									}} isRTL={isRTL}>
										<Icons.Cross/>
									</Icon>
								)}
								{children}
							</AnimatedSheet>
						</>
					)
				)
			}
		</>
	);
}
