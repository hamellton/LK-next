import { ComponentMeta, ComponentStory } from "@storybook/react";
import React from "react";
import OutOfStock from "./OutOfStock.component";
import { generateArgTypes } from "../../../StorybookHelper";
import { TypographyENUM } from "../../../Types/general";
import { action } from "@storybook/addon-actions";

export default {
	title:"Components/common/OutOfStock",
	component: OutOfStock,
	argTypes: {
		id: generateArgTypes({
			type: "string",
			required: true,
			description: "Out of Stock id",
			category: "",
		}),
		onKepMePosted: generateArgTypes({
			type: "function",
			required: false,
			description: "onKeepMePosted handler for keep me posted form",
			category: "Events",
		}),
		dataLocale: generateArgTypes({
			type: "object",
			required: true,
			description: "Data Locale",
			category: "",
		}),
		font: generateArgTypes({
			type: "string",
			required: true,
			description: "font for form",
			category: "",
		}),
		isRTL: generateArgTypes({
			type: "boolean",
			required: true,
			description: "Show right to left onKeepMePosted",
			category: "Staus",
		}),
		// formError: generateArgTypes({
		// 	type: "boolean",
		// 	required: false,
		// 	description: "onKeepMEPosted handler for keep me posted form",
		// 	category: "Components",
		// }),
	}
} as ComponentMeta<typeof OutOfStock>;

const Template: ComponentStory<typeof OutOfStock> = args => <OutOfStock {...args}/>;

export const Overview = Template.bind({});

Overview.args = {
	id:"OutOfStock-form",
	dataLocale:{
		"EMAIL":"Email",
		"MOBILE":"Mobile","KEEP_ME_POSTED":"KEEP ME POSTED!"
	},
	font:TypographyENUM.defaultBook,
	onKepMePosted: () => {
		console.log("api called and form submitted");
		action("onKeepMePosted")("api called and form submitted.");
	},
};

export const OnKeepMePostedFormWithError = Template.bind({});

OnKeepMePostedFormWithError.args = {
	...Overview.args,
	onKeepMePostedError:"EmailId is not valid"
};
