import styled from "styled-components";
import { devices } from "../../../helper";
import { TypographyENUM } from "../../../Types/general";

export const OverLay = styled.div<{
  isOverLay: boolean;
  xPosition?: number;
  backDrop?: string;
}>`
  position: ${(props) => (props.isOverLay ? "fixed" : null)};
  display: ${(props) => (props.isOverLay ? "block" : null)};
  overflow: ${(props) => (props.isOverLay ? "auto" : null)};
  width: ${(props) => (props.isOverLay ? "100%" : null)};
  height: ${(props) => (props.isOverLay ? "100%" : null)};
  top: ${(props) => (props.isOverLay ? 0 : null)};
  left: ${(props) => (props.isOverLay ? 0 : null)};
  right: ${(props) => (props.isOverLay ? 0 : null)};
  bottom: ${(props) => (props.isOverLay ? 0 : null)};
  background-color: ${(props) =>
		props.isOverLay ? props.backDrop ? props.backDrop : "rgba(0, 0, 0, 0.5)" : null};
  z-index: ${(props) => (props.isOverLay ? 999 : null)};
  cursor: ${(props) => (props.isOverLay ? "pointer" : null)};
  transform: translateX(${(props) => (props.xPosition ? props.xPosition : "")});
`;

export const SideBar = styled.div<{
  isRTL?: boolean;
  mobileView?: boolean;
  backgroundColor?: string;
}>`
  // height: 100% !important;
  display: flex;
  flex-direction: column;
  border-right: 0px;
  border-radius: 0;
  /* background-color: var(--warm-grey-50); */
  background-color: ${props => props.mobileView ? "#FBF9F7" : props.backgroundColor ? props.backgroundColor : "#f5f5f5"};
  transition: 0.5s ease;
  //for fixed position on left
  position: fixed;
  ${(props) => (props.isRTL ? "left: 0;" : "right: 0")}; // NOTE: Check transform rule here as it was breaking on ar-sa.
  top: 0;
  overflow: hidden;
  width: ${props => props.mobileView ? "100% !important" : ""};
  z-index: 999;
  /* width: 100vw; */
  padding: 0 20px;
  &#ApplyCoupon{
	padding:0 6px;
	z-index:99999;
	& .head-apply-coupon{
		font-size:16px;
		font-family: var(--font-lksans-bold);
	  }
  }
/*
  @media ${devices.laptop} {
    width: 430px;
  } */
`;

export const Content = styled.div`
  padding: var(--pd-10);
  gap: 15px;
  display: flex;
  flex-direction: column;
  overflow-y: scroll;
  //* to hide scroll bars
  ::-webkit-scrollbar {
    width: 0px;
    background: none;
  }
  ::-webkit-scrollbar-track {
    width: 0;
    background: none;
  }
`;

export const Flex = styled.div<{
  isRTL: boolean;
  mobileView?: boolean;
}>`
  display: flex;
  justify-content: space-between;
  padding: var(--pd-10);
  margin-top: var(--spacing-lg);
  margin-bottom: var(--spacing-lg);
  /* font-family: var(--font-serif); */
  font-family: ${props => props.mobileView ? TypographyENUM.lkSerifNormal : TypographyENUM.lkSansRegular};
  font-size: var(--fs-24);
  align-items: center;
  color: var(--dark-blue-100);
  flex-direction: ${(props) => (props.isRTL ? "row-reverse" : "")};
`;

export const IconWrapper = styled.span<{
  isRTL?: boolean;
}>`
  font-size: var(--fs-12);
  transform: ${(props) => (props.isRTL ? "scaleX(-1)" : "")};
  cursor: pointer;
`;

export const HeaderNew = styled.div`
  display:flex;
  justify-content:space-between;
  align-items:center;
  padding-top:20px;
  margin-bottom:10px;
  margin-top: 20px;
`;

export const IconWrapperNew = styled.div<{hideArrowBackground?: boolean}>`
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 6px 12px;
  width: 44px;
  height: 32px;
  background: ${props => props.hideArrowBackground ? "" : "#FFFFFF"};
  border-radius: 100px;
`;

export const TitleNew = styled.div`
  font-family: 'LenskartSerif-Normal';
  font-style: normal;
  font-weight: 400;
  font-size: 18px;
  line-height: 28px;
  letter-spacing: -0.02em;
  color: #000042;

  margin-right:auto;
  margin-left:20px;
`;
