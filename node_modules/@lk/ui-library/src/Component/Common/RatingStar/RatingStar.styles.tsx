import styled from "styled-components";
import { ComponentSizeENUM, TypographyENUM } from "../../../Types/general";

const getFontSize = (size: ComponentSizeENUM) => {
	if (size === ComponentSizeENUM.small) {
		return "var(--fs-12)";
	} else if (size === ComponentSizeENUM.medium) {
		return "var(--fs-14)";
	} else {
		return "var(--fs-16)";
	}
};
export const NumberedRatingWrapper = styled.div<{
	styleSize: ComponentSizeENUM,
	bgColor:string,
	isRTL:boolean,
	recentlyViewed?: boolean,
	view: boolean
}>`
	${props => !props.view && "visibility: hidden;"};
	display: flex;
	flex-direction: ${ (props) => props.isRTL ? "row-reverse" : ""};
	align-items: center;
	width: fit-content;
	background-color: #f5f5ff;
	border-radius: var(--border-radius-lg);
	padding: ${props => props.recentlyViewed ? "var(--pd-4) 0" : "var(--pd-5) var(--pd-15);"};
	justify-content:  ${props => props.recentlyViewed ? "center" : ""};
	gap: ${props => props.recentlyViewed ? "var(--pd-4)" : "var(--pd-5)"};
	font-size: ${(props) => getFontSize(props.styleSize)};
	.star-icon{
		margin-bottom:0.2em;
		width: 14px;
	}
	font-size: ${props => props.recentlyViewed ? "10px" : ""};
`;

export const NumberedRatingSpan = styled.span<{
	styleSize: ComponentSizeENUM
	styleFont: TypographyENUM,
	textColor: string | undefined,
	recentlyViewed?: boolean;
}>`
	color: ${({ textColor }) => textColor ? textColor : "var(--white)"};
	font-weight: 700;
	font-family: var(--font-lksans-bold);
`;
