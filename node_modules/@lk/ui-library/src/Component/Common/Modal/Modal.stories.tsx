import { ComponentMeta, ComponentStory } from "@storybook/react";
import React from "react";
import { generateArgTypes } from "../../../StorybookHelper";
import Modal from "./index";
import { Position } from "./Modal.types";

export default {
	title: "Components/Common/Modal",
	component: Modal,
	argTypes: {
		show: generateArgTypes({
			type: "boolean",
			required: true,
			description: "Whether to show the modal",
			category: "Component",
			defaultValue: false,
		}),
		onHide: generateArgTypes({
			type: "function",
			required: true,
			description: "Function to be called on hide",
			category: "Component",
			defaultValue: () => null,
		}),
		dialogClassName: generateArgTypes({
			type: "string",
			required: false,
			description: "Class name for the dialog",
			category: "Component",
			defaultValue: "",
		}), children: generateArgTypes({
			type: "node",
			required: false,
			description: "Children of the modal",
			category: "Component",
			defaultValue: "",
		}), backdropClassName: generateArgTypes({
			type: "string",
			required: false,
			description: "Class name for the backdrop",
			category: "Component",
			defaultValue: "",
		}), keyboard: generateArgTypes({
			type: "boolean",
			required: false,
			description: "Whether to close the modal when escape key is pressed",
			category: "Component",
			defaultValue: false,
		}), bsSize: generateArgTypes({
			type: "string",
			required: false,
			description: "Bootstrap size",
			category: "Component",
			defaultValue: "",
		}), position: generateArgTypes({
			type: "string",
			required: false,
			description: "Position of the Modal",
			category: "Component",
			control: "radio",
			options: Position
		}),
		dialogCss: generateArgTypes({
			type: "string",
			required: false,
			description: "Custom CSS for the Modal Dialog container",
			category: "Component"
		})
	}
} as ComponentMeta<typeof Modal>;

const Template: ComponentStory<typeof Modal> = (args) => <Modal {...args} />;

export const Overview = Template.bind({});

Overview.args = {
	show: true,
	onHide: () => {
		console.log("onHide");
	},
	dialogClassName: "",
	children: (
		<Modal.Header onHide={() => null} closeButton>
			<Modal.Title>Modal heading</Modal.Title>
		</Modal.Header>
	),
	backdropClassName: "",
	keyboard: true,
	bsSize: "lg",
};