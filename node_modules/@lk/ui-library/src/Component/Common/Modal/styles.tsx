import styled from "styled-components";
import { ModalWrapperTypes, Position } from "./Modal.types";

export const ModalWrapper = styled.div<ModalWrapperTypes>`
.modal-open {
  overflow: hidden;
}
.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1200 !important;
  display: block;
  overflow: hidden;
  -webkit-overflow-scrolling: touch;
  outline: 0;
  opacity: 1;
}
.modal.in {
  padding-top: 10px;
}
.modal.fade .modal-dialog {
  -webkit-transition: -webkit-transform 0.3s ease-out;
  -o-transition: -o-transform 0.3s ease-out;
  transition: transform 0.3s ease-out;
  -webkit-transform: translate(0, -25%);
  -ms-transform: translate(0, -25%);
  -o-transform: translate(0, -25%);
  transform: translate(0, -25%);
}
.modal.in .modal-dialog {
  -webkit-transform: translate(0, 0);
  -ms-transform: translate(0, 0);
  -o-transform: translate(0, 0);
  transform: translate(0, 0);
}
.modal-open .modal {
  overflow-x: hidden;
  overflow-y: auto;
}
.modal-dialog {
  position: relative;
  width: auto;
  margin: 10px;
}
.modal-content {
//   height: 95vh;
  position: relative;
  background-color: #fff;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  border: 1px solid #999;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 6px;
  outline: 0;
  -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
}
.modal-header {
  padding: 15px;
  border-bottom: 1px solid #e5e5e5;
}
.modal-header .close {
  margin-top: -2px;
}
.modal-title {
  margin: 0;
  line-height: 1.42857143;
}
.modal-body {
  position: relative;
  padding: 15px;
}

.fullheight {
  height: 80vh;
  height: auto;
  min-height: 650px;
}
.fitimage {
  min-height: max-content;
}
.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}
@media (min-width: 768px) {
  .modal-dialog {
    width: 600px;
    margin: 30px auto;
    ${({ position }) => position === Position.left && "margin: 30px 0;"}
    ${({ position }) => position === Position.right && "margin: 30px 0; margin-left: auto;"}
    ${({ position }) => position === Position.top && `
      margin: 0 auto;
      position: fixed;
      top: 0;

      .modal-content {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
      }
    `}
    ${({ position }) => position === Position.bottom && `
      margin: 0 auto;
      position: fixed;
      bottom: 0;

      .modal-content {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
      }
    `}
  }
  .modal-content {
    -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
  }
  .modal-sm {
    width: 300px;
  }
}
@media (min-width: 992px) {
  .modal-lg {
    width: 900px;
  }
}

.animate-top{
	animation: animatetop 0.5s;
}
.animate-left{
	animation: animateleft 0.5s;
}

.fade{
	-webkit-transition:opacity 0.15s linear;-o-transition:opacity 0.15s linear;transition:opacity 0.15s linear
}

.modal-body{
	position: relative;
	padding: 15px;
}
.modal-body-height{
  height: 60vh;
}

@media (min-width: 992px){
  .modal-lg {
      width: 900px;
    }
}
.modal-header{
	min-height: 55px;

	.close{
		color: #939393;
		position: absolute;
		opacity: .9;
		display: flex;
		justify-content: center;

		&:hover{
			color: #333
		}
	}

	h1,h2,h3,h4{
		font-size: 18px;
		margin-top: 0;
		margin-bottom: 0;
	}
}

button.close{
	padding: 0;
  cursor: var(--pointer);
  background: 0 0;
  border: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
.title{
	font-size: var(--fs-14);
  font-family: Roboto;
  line-height: 143%;
  letter-spacing: .15px;
  cursor: var(--pointer);
}

@keyframes animatetop {
  from {
    transform: translate3d(0, -30%, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}
@keyframes animateleft {
  from {
    transform: translate3d(30%, 0, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}
`;

export const Backdrop = styled.div`
	&.modal-backdrop {
		position: fixed;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		z-index: 1040;
		background-color: #000;
	}
	&.modal-backdrop.fade {
		filter: alpha(opacity=0);
		opacity: 0;
	}
	&.modal-backdrop.in {
		filter: alpha(opacity=50);
		opacity: 0.5;
	}
	&.fade{
		-webkit-transition:opacity 0.15s linear;-o-transition:opacity 0.15s linear;transition:opacity 0.15s linear
	}
`;

export const ModalDialog = styled.div<{ dialogCss?: string }>`
  &.modal-dialog {
    ${({ dialogCss }) => dialogCss}
  }
`;

export const Container = styled.div<{height?: number }>`
  height: ${props => props.height ? props.height : "0"}px;
`;
