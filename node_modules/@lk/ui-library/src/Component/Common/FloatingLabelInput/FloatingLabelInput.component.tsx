import React from "react";
import { inputs, InputType, positionENUM } from "./FloatingLabelInput.types";
import { ComponentSizeENUM } from "../../../Types/general";
import {
	ErrorMessage,
	InputContainer,
	InputField,
	InputLabel,
	InputWrapper,
	PrefixText
} from "./FloatingLabelInput.styles";
import { action } from "@storybook/addon-actions";
const FormInput = ({
	placeholder,
	label,
	type = inputs.type.text,
	componentSize = ComponentSizeENUM.small,
	id,
	disabled = false,
	errorMessage,
	width = "50",
	readonly = false,
	onValueChange = () => null,
	onKeyUpChange = () => null,
	labelPosition = positionENUM.left,
	countryCodePrefix,
	font,
	isRTL = false,
	labelFontSize = "1em"
}: InputType) => {
	const [ inputValue, setInputValue ] = React.useState("");

	function updateValue(e: React.ChangeEvent<HTMLInputElement>) {
		onValueChange(e);
		action("value change")(e, { value: e.target.value });
	}

	const onKeyUpChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {
		onKeyUpChange(e);
	};

	function onChange(e: React.ChangeEvent<HTMLInputElement>) {
		setInputValue(e.target.value);
	}
	return (
		<InputWrapper styleSize={componentSize} styleFont={font}>
			<InputContainer id={id} width={width} value={inputValue} prefixText={!!countryCodePrefix}>
				<PrefixText>{countryCodePrefix}</PrefixText>
				<InputField
					prefixText={!!countryCodePrefix}
					error={!!errorMessage}
					type={type}
					onChange={onChange}
					onKeyUp={onKeyUpChangeHandler}
					onBlur={updateValue}
					placeholder={placeholder}
					disabled={disabled}
					readOnly={readonly}
					value={inputValue}

				/>
				<InputLabel
					fontSize={labelFontSize}
					prefixText={!!countryCodePrefix}
					labelPosition={isRTL ? positionENUM.right : labelPosition}
				>
					{label && !placeholder && label}
				</InputLabel>
			</InputContainer>
			{errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}
		</InputWrapper>
	);
};

export { FormInput };
