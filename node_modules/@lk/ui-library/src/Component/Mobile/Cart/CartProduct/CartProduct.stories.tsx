import React from "react";
import { ComponentMeta, ComponentStory } from "@storybook/react";
import { generateArgTypes } from "../../../../StorybookHelper";
import CartProduct from "./CartProduct.component";
import { ComponentSizeENUM } from "../../../../Types/general";
import { items } from "./mockData";

export default {
	title: "Components/Mobile/CartProduct",
	component: CartProduct,
	argTypes: {
		item: generateArgTypes({
			type: "object",
			required: true,
			description: "Item object value from cart api",
			category: "Component",
			control:"object"
		}),
		dataLocale: generateArgTypes({
			type: "object",
			required: true,
			description: "static data",
			category: "Component",
			control:"object"
		}),
		url: { 
			pathname: generateArgTypes({
				type: "string",
				required: true,
				description: "URL",
				category: "General",
			})
		},
		currencySymbol: generateArgTypes({
			type: "string",
			required: true,
			description: "Currency symbol",
			category: "General",
		}),
		addOnLenskartPrice: generateArgTypes({
			type: "number",
			required: false,
			description: "Add on lenskart price",
			category: "General",
		}),
		addOnMarketPrice: generateArgTypes({
			type: "number",
			required: false,
			description: "Add on market price",
			category: "General",
		}),
		showUploadPrescModal: generateArgTypes({
			type: "function",
			required: false,
			description: "show Upload Presc Modal function",
			category: "Actions",
		}),
		decreaseItemQtyFunc: generateArgTypes({
			type: "function",
			required: false,
			description: "decrease Item Qty Function",
			category: "Actions",
		}),
		increaseItemQtyFunc: generateArgTypes({
			type: "function",
			required: false,
			description: "increase Item Qty Function",
			category: "Actions",
		}),
		handleKnowMore: generateArgTypes({
			type: "function",
			required: false,
			description: "Handle know more Function",
			category: "Actions",
		}),
		knowMoreBottomSheet: { 
			show: generateArgTypes({
				type: "boolean",
				required: true,
				description: "show know more bottom sheet option",
				category: "Component",
			}),
			imagePath: generateArgTypes({
				type: "string",
				required: true,
				description: "Image path for know more bottom sheet",
				category: "Component",
			}),
			url: { 
				pathname: generateArgTypes({
					type: "string",
					required: false,
					description: "URL pathname for know more bottom sheet",
					category: "Component",
				}) 
			},
			cta: generateArgTypes({
				type: "string",
				required: false,
				description: "Cart product CTA",
				category: "Component",
			}) 
		},
		setKnowMoreBottomSheet: generateArgTypes({
			type: "function",
			required: false,
			description: "set Know More Bottom Sheet function",
			category: "Actions",
		}),
		id: generateArgTypes({
			type: "string",
			required: true,
			description: "String used as unique identifier",
			category: "General",
		}),
		isRTL: generateArgTypes({
			type: "boolean",
			required: true,
			description: "show right to left",
			category: "Status",
		}),
		componentSize: generateArgTypes({
			type: "string",
			required: false,
			description: "Size of the component",
			category: "General",
			defaultValue: ComponentSizeENUM.small,
			control: "radio",
			options: ComponentSizeENUM,
		}),
	},
} as ComponentMeta<typeof CartProduct>;

const Template: ComponentStory<typeof CartProduct> = (args) => <CartProduct {...args} />;

export const Overview = Template.bind({});
Overview.args = {
	id: "CartProduct",
	isRTL: false,
	item: items[2],
	dataLocale: {
		FREE: "Free",
		QUANTITY_FULL: "Quantity full",
		SYMBOL_COLON: ":",
		WITH: "With",
		AND: "And",
		YOU_CAN_UPLOAD_PRESCRIPTION_AFTER_PAYMENT: "You Can Upload Prescription After Payment",
		NO_EXTRA_CHARGES_FOR_HIGH_POWER: "No extra charges for high power",
		EXTRA_DISCOUNT: "Extra discount",
		FINAL_PRICE: "Final price",
		REMOVE: "Remove",
		REPEAT: "Repeat"
	},
	url: {
		pathname: ""
	},
	currencySymbol: "$",
	addOnLenskartPrice: 200,
	addOnMarketPrice: 300,
	showUploadPrescModal: () => null,
	decreaseItemQtyFunc: () => null,
	increaseItemQtyFunc: () => null,
	handleKnowMore: () => null,
	knowMoreBottomSheet: { 
		show: false,
		imagePath: "",
		url: { 
			pathname: ""
		},
		cta: "Know more cta"
	},
	setKnowMoreBottomSheet: () => null,
	componentSize: ComponentSizeENUM.medium
};

// export const ExtraDetailedCart = Template.bind({});
// ExtraDetailedCart.args = {
// 	id: "CartProduct",
// 	isRTL: false,
// 	componentSize: ComponentSizeENUM.large,
// };
