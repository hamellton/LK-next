import { ComponentSizeENUM, DataType } from "../../../../Types/general";

export interface ItemType {
    classification: string,
    id: string,
    webHeadline?: string,
    message?: string,
    webColorCode?: string,
    label?: string,
    name?: string,
    frameSize?: string,
    isLoyalty?: boolean,
    loyaltyImage?: string,
    itemImg?: string,
    itemLabel?: string,
    itemClassification?: string;
    itemName?: string;
    frameColour?: string,
    quantity?: number,
    brandName: string,
    isFree: boolean,
    tierMembershipName?: string,
    extraDetails?: {
        images?: {
            labelImage?: string,
            knowMore: string
        },
        detailsUrl?: string,
        detailsButtonText?: string
    },
    image: string,
    catalogPrices?: { value: number }[],
    options?: { name: string }[],
    prescriptionView?: PrescriptionView,
    powerRequired?: string,
    lensType?: string,
    discountedPrice?: { value: number },
    price?: { value: number },
    itemPrescription: Prescription,
    itemPrescriptionView: PrescriptionView,
    itemBrandName?: string,
    itemFrameSize?: string,
    itemFrameColor?: string,
    itemQty?: number,
    itemCatalogPrice?: {value?: number}[],
    itemOptions?: DataType[],
    addOnPriceObj?: {itemPrice?: number, strikeOffPrice?: number},
    itemPowerRequired?: string,
    itemLensType?: string,
    itemDiscountedPrice?: {value?: number},
    offerMessage?: string;
	showFunction?: () => void;
}

interface Prescription {
    powerType?: string;
    left?: PrescriptionLeft;
    right?: PrescriptionLeft;
    notes?: string;
    gender?: string;
    dob?: string;
    showPd?: boolean;
	userName?: string;
}

interface PrescriptionLeft {
    sph: string;
    boxes: number;
    powerwiseId: string;
    cyl?: string;
    axis?: string;
}


interface PrescriptionView {
    showPd: boolean;
    pdConfigAvailable: boolean;
    powerType?: string;
    left?: PrescriptionViewLeft;
    right?: PrescriptionViewLeft;
    notes?: string;
    gender?: string;
    dob?: string;
    labels?: DataType;
}


interface PrescriptionViewLeft {
    sph: string;
    boxes: number;
}

export interface CartProductType {
    id: string,
    isRTL: boolean,
    componentSize?: ComponentSizeENUM,
    onDeleteClick: () => void,
    item: ItemType,
    wishlist: () => void;
    dataLocale: DataType,
    itemUrl: string
    currencySymbol: string,
    addOnLenskartPrice?: number,
    deleteAllCount: () => void,
    addOnMarketPrice?: number,
    showUploadPrescModal: () => void,
    decreaseItemQtyFunc: () => void,
    increaseItemQtyFunc: () => void,
    handleKnowMore: (imagePath: string, url: string, cta: string) => void,
    knowMoreBottomSheet: {
        show: boolean,
        imagePath: string,
        url?: { pathname: string },
        cta?: string
    },
    setKnowMoreBottomSheet: (...args: any) => void,
    cartData: DataType,
    configData: DataType,
    decreaseItemQtyInCart: (id: string) => void,
    removeItemFromCart: (id: string) => void,
}
