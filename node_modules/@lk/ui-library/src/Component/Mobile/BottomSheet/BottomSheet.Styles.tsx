import styled from "styled-components";

export const Root = styled.div`
  background-color: rgba(33, 33, 33, 0.75);
  pointer-events: auto;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 8;
`;

export const Sheet = styled.div<{ show?: boolean }>`
  background-color: #fff;
  position: fixed;
  bottom: 0;
  width: 100%;
  height: auto;
  transform: ${(props) => (props.show ? "translateY(0%)" : "translateY(100%)")};
  transition: transform 0.25s ease;
  z-index: 11;
  padding: 15px;
  border-radius: 10px 10px 0 0;
`;

export const Icon = styled.span`
  position: absolute;
  right: 16px;
  cursor: pointer;
`;

//////////////////////////////////////////////////////////////////

export const BottomSheetContainer = styled.div<{ expanded?: boolean; heightExpand?: boolean; }>`
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  background-color: transparent;
  z-index: 200;
  // background-color: #fff;
  ${props => props.heightExpand ? "height: 100%;" : ""}
`;

export const Backdrop = styled.div<{ expanded?: boolean; passedCss?: string, darkBack?: boolean }>`
  transition: opacity 0.45s;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 50;
  pointer-events: auto;
  background-color: rgba(33,33,33,.75);
  ${props => props.expanded ? `
    pointer-events: auto;
  ` : ""};
  ${props => props.expanded ? (props.darkBack ? "background-color: rgba(33, 33, 33, 0.75)" : "") : ""};
  ${props => props.passedCss ? props.passedCss : ""};
`;

export const BottomSheetDiv = styled.div<{ expanded?: boolean; heightExpand?: boolean; sixOverSix?: boolean; topBorder: boolean; borderRadius: boolean; bottomSheetCss: boolean; }>`
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 201;
  pointer-events: none;
  -webkit-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0);
  -webkit-transition-duration: 0.4s;
  -webkit-transition-property: -webkit-transform;
  -webkit-transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-duration: 0.4s;
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
  ${props => props.expanded ? `
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    pointer-events: auto;
    z-index: 101;
  ` : ""}
  ${props => props.heightExpand ? `
    height: 100%;
  ` : ""}
  ${props => props.sixOverSix ? `
    height: 100vh;
  ` : ""}
  ${props => props.borderRadius ? `
    border-radius: 16px 16px 0 0;
  ` : ""}
`;
