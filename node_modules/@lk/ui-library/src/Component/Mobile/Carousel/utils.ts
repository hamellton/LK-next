export function getCarouselDimensions(slidesPerView: number, aspectRatio: number, noOfSlides: number, disabledInfinite: boolean) {
	const virtualNoOfSlides = disabledInfinite ? noOfSlides : noOfSlides + 2 * slidesPerView; // For infinite carousel, adding two extra mirrored slides.
	const slideWidth = 100 / slidesPerView;
	const trackWidth = slideWidth * virtualNoOfSlides;
	return {
		carouselHeight: aspectRatio ? `${slideWidth / aspectRatio}vw` : "auto",
		slideWidth,
		trackWidth,
	};
}

export function getStyle({ slidesPerView, noOfSlides, disabledInfinite, aspectRatio }: {slidesPerView: number, noOfSlides: number, disabledInfinite: boolean, aspectRatio: number}) {
	const dimensions = getCarouselDimensions(
		slidesPerView,
		aspectRatio,
		noOfSlides,
		disabledInfinite
	);
	const slideStyle = { width: `${dimensions.slideWidth}%` };
	const transform = disabledInfinite
		? "translate3d(0, 0, 0)"
		: `translate3d(${
			(-1 * slidesPerView * dimensions.slideWidth) / (noOfSlides + 2 * slidesPerView)
		}%, 0, 0)`;
	const trackStyle = {
		width: `${dimensions.trackWidth}%`,
		height: dimensions.carouselHeight,
		transform,
	};
	return { slideStyle, trackStyle };
}

export function getTrackStyle({
	current,
	prevOrNext = 1,
	transitionOFF,
	slidesPerView,
	disabledInfinite,
	slideStyle,
	noOfSlides,
	trackStyle,
}: {
    current: number,
    prevOrNext: number,
    transitionOFF?: boolean,
    slidesPerView: number,
    disabledInfinite: boolean,
    slideStyle?: any,
    noOfSlides: number,
    trackStyle: any
}) {
	if (current == null) return;
	const currentSlide = disabledInfinite ? current + prevOrNext : current + 1 + prevOrNext;
	const slideWidth = slideStyle?.width ? parseFloat(slideStyle.width) : 0;
	const virtualNoOfSlides = disabledInfinite ? noOfSlides : noOfSlides + 2 * slidesPerView;
	const baseX = (slidesPerView * slideWidth) / virtualNoOfSlides;
	return Object.assign({}, trackStyle, {
		transform: `translate3d(${(-1 * currentSlide * (baseX || 100))}%, 0, 0)`,
		transition: transitionOFF ? "" : "transform 500ms ease 0s",
	});
}