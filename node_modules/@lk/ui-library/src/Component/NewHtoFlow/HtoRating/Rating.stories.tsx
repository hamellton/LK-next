import { ComponentMeta, ComponentStory } from "@storybook/react";
import React from "react";
import { generateArgTypes } from "../../../StorybookHelper";
import { ComponentSizeENUM } from "../../../Types/general";
import HtoRating from ".";

export default {
	title: "Component/NewHtoFlow/HtoRating",
	component: HtoRating,
	argTypes:{
		id: generateArgTypes({
			type: "string",
			required: true,
			description: "String used as unique identifier",
			category: "General",
		}),
		componentSize: generateArgTypes({
			type: "string",
			required: false,
			description: "Size of the component",
			category: "General",
			defaultValue: ComponentSizeENUM.small,
			control: "radio",
			options: ComponentSizeENUM,
		}),
		isReadOnly: generateArgTypes({
			type: "boolean",
			required: true,
			description: "read only or not",
			category: "Component",
			defaultValue: "false",
		}),
		onmouseClick: generateArgTypes({
			type: "function",
			required: false,
			description: "on Mouse click handler for rating",
			category: "Events",
		}),
		isRTL: generateArgTypes({
			type: "boolean",
			required: true,
			description: "show rating right to left",
			category: "",
		}),
	}
} as ComponentMeta<typeof HtoRating>;

const Template: ComponentStory<typeof HtoRating> = args => <HtoRating {...args}/>;
export const Overview = Template.bind({});
Overview.args = {
	id:"star-rating",
	rating:4,
	maxRating:5,
	isReadOnly: false,
	ratingNumber: "4.9",
	ratingCount: "17k"
};

export const readOnlyRating = Template.bind({});

readOnlyRating.args = {
	...Overview.args,
	isReadOnly:true
};

export const fullRating = Template.bind({});

fullRating.args = {
	...readOnlyRating.args,
	rating:5
};

export const maxRating = Template.bind({});

maxRating.args = {
	...readOnlyRating.args,
	maxRating:10
};

